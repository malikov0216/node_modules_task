{"version":3,"sources":["../../src/core/ElementRegistry.js"],"names":["ElementRegistry","viewer","eventBus","_eventBus","_viewer","getDecision","element","newId","decision","Error","fire","id","$inject"],"mappings":";;;;AAAA;;;;;;IAMqBA,e;AAEnB,2BAAYC,MAAZ,EAAoBC,QAApB,EAA8B;AAAA;;AAC5B,SAAKC,SAAL,GAAiBD,QAAjB;AACA,SAAKE,OAAL,GAAeH,MAAf;AACD;;;;kCAEa;AACZ,aAAO,KAAKG,OAAL,CAAaC,WAAb,EAAP;AACD;;;6BAEQC,O,EAASC,K,EAAO;;AAEvB,UAAIC,WAAW,KAAKH,WAAL,EAAf;;AAEA,UAAIC,YAAYE,QAAhB,EAA0B;AACxB,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AAED,WAAKN,SAAL,CAAeO,IAAf,CAAoB,kBAApB,EAAwC;AACtCJ,iBAASA,OAD6B;AAEtCC,eAAOA;AAF+B,OAAxC;;AAKAD,cAAQK,EAAR,GAAaJ,KAAb;AACD;;;;;;eAzBkBP,e;;;AA6BrBA,gBAAgBY,OAAhB,GAA0B,CACxB,QADwB,EAExB,UAFwB,CAA1B","file":"ElementRegistry.js","sourcesContent":["/**\n * A single decision element registry.\n *\n * The sole purpose of this service is to provide the necessary API\n * to serve shared components, i.e. the UpdatePropertiesHandler.\n */\nexport default class ElementRegistry {\n\n  constructor(viewer, eventBus) {\n    this._eventBus = eventBus;\n    this._viewer = viewer;\n  }\n\n  getDecision() {\n    return this._viewer.getDecision();\n  }\n\n  updateId(element, newId) {\n\n    var decision = this.getDecision();\n\n    if (element !== decision) {\n      throw new Error('element !== decision');\n    }\n\n    this._eventBus.fire('element.updateId', {\n      element: element,\n      newId: newId\n    });\n\n    element.id = newId;\n  }\n\n}\n\nElementRegistry.$inject = [\n  'viewer',\n  'eventBus'\n];"]}