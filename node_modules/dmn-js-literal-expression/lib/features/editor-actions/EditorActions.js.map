{"version":3,"sources":["../../../src/features/editor-actions/EditorActions.js"],"names":["forEach","NOT_REGISTERED_ERROR","IS_REGISTERED_ERROR","EditorActions","commandStack","eventBus","_actions","undo","redo","action","opts","error","actions","listener","_registerAction","isRegistered","undefined","$inject","message","Error"],"mappings":";;;;AAAA,SAASA,OAAT,QAAwB,UAAxB;;AAEA,IAAMC,uBAAuB,4BAA7B;AAAA,IACMC,sBAAsB,uBAD5B;;AAIA;;;;;;;;;IAQqBC,a;AACnB,yBAAYC,YAAZ,EAA0BC,QAA1B,EAAoC;AAAA;;AAElC,SAAKC,QAAL,GAAgB;AACdC,UADc,kBACP;AACLH,qBAAaG,IAAb;AACD,OAHa;AAIdC,UAJc,kBAIP;AACLJ,qBAAaI,IAAb;AACD;AANa,KAAhB;AAQD;;AAED;;;;;;;;;;;;4BAQQC,M,EAAQC,I,EAAM;AACpB,UAAI,CAAC,KAAKJ,QAAL,CAAcG,MAAd,CAAL,EAA4B;AAC1B,cAAME,MAAMF,MAAN,EAAcR,oBAAd,CAAN;AACD;;AAED,aAAO,KAAKK,QAAL,CAAcG,MAAd,EAAsBC,IAAtB,CAAP;AACD;;AAED;;;;;;;;;6BAMSE,O,EAASC,Q,EAAU;AAAA;;AAC1B,UAAI,OAAOD,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,eAAO,KAAKE,eAAL,CAAqBF,OAArB,EAA8BC,QAA9B,CAAP;AACD;;AAEDb,cAAQY,OAAR,EAAiB,UAACC,QAAD,EAAWJ,MAAX,EAAsB;AACrC,cAAKK,eAAL,CAAqBL,MAArB,EAA6BI,QAA7B;AACD,OAFD,EAEG,IAFH;AAGD;;AAED;;;;;;;;;oCAMgBJ,M,EAAQI,Q,EAAU;AAChC,UAAI,KAAKE,YAAL,CAAkBN,MAAlB,CAAJ,EAA+B;AAC7B,cAAME,MAAMF,MAAN,EAAcP,mBAAd,CAAN;AACD;;AAED,WAAKI,QAAL,CAAcG,MAAd,IAAwBI,QAAxB;AACD;;AAED;;;;;;;;+BAKWJ,M,EAAQ;AACjB,UAAI,CAAC,KAAKM,YAAL,CAAkBN,MAAlB,CAAL,EAAgC;AAC9B,cAAME,MAAMF,MAAN,EAAcR,oBAAd,CAAN;AACD;;AAED,WAAKK,QAAL,CAAcG,MAAd,IAAwBO,SAAxB;AACD;;AAGD;;;;;;;;;;iCAOaP,M,EAAQ;AACnB,aAAO,CAAC,CAAC,KAAKH,QAAL,CAAcG,MAAd,CAAT;AACD;;;;;;eAlFkBN,a;;;AAqFrBA,cAAcc,OAAd,GAAwB,CACtB,cADsB,EAEtB,UAFsB,CAAxB;;AAKA;;AAEA,SAASN,KAAT,CAAeF,MAAf,EAAuBS,OAAvB,EAAgC;AAC9B,SAAO,IAAIC,KAAJ,CAAUV,SAAS,GAAT,GAAeS,OAAzB,CAAP;AACD","file":"EditorActions.js","sourcesContent":["import { forEach } from 'min-dash';\n\nconst NOT_REGISTERED_ERROR = 'is not a registered action',\n      IS_REGISTERED_ERROR = 'is already registered';\n\n\n/**\n * An interface that provides access to modeling actions by decoupling\n * the one who requests the action to be triggered and the trigger itself.\n *\n * It's possible to add new actions by registering them with ´registerAction´ and likewise\n * unregister existing ones with ´unregisterAction´.\n *\n */\nexport default class EditorActions {\n  constructor(commandStack, eventBus) {\n\n    this._actions = {\n      undo() {\n        commandStack.undo();\n      },\n      redo() {\n        commandStack.redo();\n      }\n    };\n  }\n\n  /**\n   * Triggers a registered action\n   *\n   * @param  {String} action\n   * @param  {Object} opts\n   *\n   * @return {Unknown} Returns what the registered listener returns\n   */\n  trigger(action, opts) {\n    if (!this._actions[action]) {\n      throw error(action, NOT_REGISTERED_ERROR);\n    }\n\n    return this._actions[action](opts);\n  }\n\n  /**\n   * Registers a collections of actions.\n   * The key of the object will be the name of the action.\n   *\n   * @param  {Object} actions\n   */\n  register(actions, listener) {\n    if (typeof actions === 'string') {\n      return this._registerAction(actions, listener);\n    }\n\n    forEach(actions, (listener, action) => {\n      this._registerAction(action, listener);\n    }, this);\n  }\n\n  /**\n   * Registers a listener to an action key\n   *\n   * @param  {String} action\n   * @param  {Function} listener\n   */\n  _registerAction(action, listener) {\n    if (this.isRegistered(action)) {\n      throw error(action, IS_REGISTERED_ERROR);\n    }\n\n    this._actions[action] = listener;\n  }\n\n  /**\n   * Unregister an existing action\n   *\n   * @param {String} action\n   */\n  unregister(action) {\n    if (!this.isRegistered(action)) {\n      throw error(action, NOT_REGISTERED_ERROR);\n    }\n\n    this._actions[action] = undefined;\n  }\n\n\n  /**\n   * Checks wether the given action is registered\n   *\n   * @param {String} action\n   *\n   * @return {Boolean}\n   */\n  isRegistered(action) {\n    return !!this._actions[action];\n  }\n}\n\nEditorActions.$inject = [\n  'commandStack',\n  'eventBus'\n];\n\n// helpers /////////////\n\nfunction error(action, message) {\n  return new Error(action + ' ' + message);\n}"]}