var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

import { createVNode, createTextVNode } from 'inferno';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import { Component } from 'inferno';

var ViewDrdComponent = function (_Component) {
  _inherits(ViewDrdComponent, _Component);

  function ViewDrdComponent(props, context) {
    _classCallCheck(this, ViewDrdComponent);

    var _this = _possibleConstructorReturn(this, (ViewDrdComponent.__proto__ || Object.getPrototypeOf(ViewDrdComponent)).call(this, props, context));

    _this.onClick = function () {
      _this._eventBus.fire('showDrd');
    };

    var injector = context.injector;


    _this._eventBus = injector.get('eventBus');
    return _this;
  }

  _createClass(ViewDrdComponent, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return createVNode(1, 'div', 'view-drd', createVNode(1, 'button', 'view-drd-button', createTextVNode('View DRD'), 2, {
        'onClick': this.onClick
      }), 2, null, null, function (node) {
        return _this2.node = node;
      });
    }
  }]);

  return ViewDrdComponent;
}(Component);

export default ViewDrdComponent;
//# sourceMappingURL=ViewDrdComponent.js.map