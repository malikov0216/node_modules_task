{"version":3,"sources":["../src/Viewer.js"],"names":["BaseViewer","assign","domify","remove","domRemove","CoreModule","DecisionPropertiesModule","LiteralExpressionPropertiesModule","PoweredByModule","TextareaModule","ViewDrdModule","Viewer","options","container","_createContainer","renderer","_container","decision","done","err","_decision","clear","get","fire","e","modules","additionalModules","config","baseModules","getModules","extraModules","staticModules","viewer","allModules","event","priority","callback","target","on","off","type","parentNode","Error","detach","appendChild","_emit","_getModules"],"mappings":"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","file":"Viewer.js","sourcesContent":["import BaseViewer from 'dmn-js-shared/lib/base/viewer/Viewer';\r\n\r\nimport {\r\n  assign\r\n} from 'min-dash';\r\n\r\nimport {\r\n  domify,\r\n  remove as domRemove\r\n} from 'min-dom';\r\n\r\nimport CoreModule from './core';\r\nimport DecisionPropertiesModule from './features/decision-properties';\r\nimport LiteralExpressionPropertiesModule from './features/literal-expression-properties';\r\nimport PoweredByModule from './features/powered-by';\r\nimport TextareaModule from './features/textarea';\r\nimport ViewDrdModule from './features/view-drd';\r\n\r\n\r\nexport default class Viewer extends BaseViewer {\r\n\r\n  constructor(options = {}) {\r\n    const container = Viewer._createContainer();\r\n\r\n    super(assign(options, {\r\n      renderer: {\r\n        container\r\n      }\r\n    }));\r\n\r\n    this._container = container;\r\n  }\r\n\r\n  open(decision, done) {\r\n\r\n    var err;\r\n\r\n    // use try/catch to not swallow synchronous exceptions\r\n    // that may be raised during model parsing\r\n    try {\r\n\r\n      if (this._decision) {\r\n\r\n        // clear existing literal expression\r\n        this.clear();\r\n\r\n        // unmount first\r\n        this.get('eventBus').fire('renderer.unmount');\r\n      }\r\n\r\n      // update literal expression\r\n      this._decision = decision;\r\n\r\n      // let others know about import\r\n      this.get('eventBus').fire('import', decision);\r\n\r\n      this.get('eventBus').fire('renderer.mount');\r\n    } catch (e) {\r\n      err = e;\r\n    }\r\n\r\n    // handle synchronously thrown exception\r\n    return done(err);\r\n  }\r\n\r\n  /**\r\n   * Initialize the literal expression, returning { modules: [], config }.\r\n   *\r\n   * @param  {Object} options\r\n   *\r\n   * @return {Object} init config\r\n   */\r\n  _init(options) {\r\n\r\n    let {\r\n      modules,\r\n      additionalModules,\r\n      ...config\r\n    } = options;\r\n\r\n    let baseModules = modules || this.getModules();\r\n    let extraModules = additionalModules || [];\r\n    let staticModules = [\r\n      {\r\n        viewer: [ 'value', this ]\r\n      }\r\n    ];\r\n\r\n    let allModules = [\r\n      ...baseModules,\r\n      ...extraModules,\r\n      ...staticModules\r\n    ];\r\n\r\n    return {\r\n      modules: allModules,\r\n      config\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Register an event listener\r\n   *\r\n   * Remove a previously added listener via {@link #off(event, callback)}.\r\n   *\r\n   * @param {String} event\r\n   * @param {Number} [priority]\r\n   * @param {Function} callback\r\n   * @param {Object} [that]\r\n   */\r\n  on(event, priority, callback, target) {\r\n    return this.get('eventBus').on(event, priority, callback, target);\r\n  }\r\n\r\n  /**\r\n   * De-register an event listener\r\n   *\r\n   * @param {String} event\r\n   * @param {Function} callback\r\n   */\r\n  off(event, callback) {\r\n    this.get('eventBus').off(event, callback);\r\n  }\r\n\r\n  /**\r\n   * Emit an event on the underlying {@link EventBus}\r\n   *\r\n   * @param  {String} type\r\n   * @param  {Object} event\r\n   *\r\n   * @return {Object} event processing result (if any)\r\n   */\r\n  _emit(type, event) {\r\n    return this.get('eventBus').fire(type, event);\r\n  }\r\n\r\n  /**\r\n   * Returns the currently displayed decision.\r\n   *\r\n   * @return {ModdleElement}\r\n   */\r\n  getDecision() {\r\n    return this._decision;\r\n  }\r\n\r\n  /**\r\n   * Attach viewer to given parent node.\r\n   *\r\n   * @param  {Element} parentNode\r\n   */\r\n  attachTo(parentNode) {\r\n\r\n    if (!parentNode) {\r\n      throw new Error('parentNode required');\r\n    }\r\n\r\n    // ensure we detach from the\r\n    // previous, old parent\r\n    this.detach();\r\n\r\n    parentNode.appendChild(this._container);\r\n\r\n    this._emit('attach', {});\r\n  }\r\n\r\n  /**\r\n   * Detach viewer from parent node, if attached.\r\n   */\r\n  detach() {\r\n\r\n    const container = this._container,\r\n          parentNode = container.parentNode;\r\n\r\n    if (!parentNode) {\r\n      return;\r\n    }\r\n\r\n    this._emit('detach', {});\r\n\r\n    domRemove(container);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n\r\n    this.detach();\r\n  }\r\n\r\n  getModules() {\r\n    return Viewer._getModules();\r\n  }\r\n\r\n  static _getModules() {\r\n    return [\r\n      CoreModule,\r\n      DecisionPropertiesModule,\r\n      LiteralExpressionPropertiesModule,\r\n      PoweredByModule,\r\n      TextareaModule,\r\n      ViewDrdModule\r\n    ];\r\n  }\r\n\r\n  static _createContainer() {\r\n    return domify(\r\n      '<div class=\"dmn-literal-expression-container\"></div>'\r\n    );\r\n  }\r\n\r\n}"]}