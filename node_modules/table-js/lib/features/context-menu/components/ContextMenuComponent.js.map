{"version":3,"sources":["../../../../src/features/context-menu/components/ContextMenuComponent.js"],"names":["Component","assign","isFunction","inject","query","domQuery","setRange","ContextMenuComponent","props","context","state","isOpen","position","x","y","eventBus","on","open","close","off","components","getComponents","length","offset","autoFocus","autoClose","triggerClose","setState","undefined","fire","$inject","ContextMenu","onGlobalClick","event","checkClose","target","onGlobalKey","keyCode","which","stopPropagation","preventDefault","onFocusChanged","setNode","node","ensureFocus","updatePosition","onClose","focusTarget","contains","document","addEventListener","removeEventListener","bounds","getBoundingClientRect","width","height","container","renderer","getContainer","containerBounds","classList","add","remove","scrollLeft","scrollTop","style","left","clampNumber","window","scrollX","top","scrollY","overflowY","maxHeight","className","map","idx","e","number","min","max","Math","SELECTABLE_ELEMENTS","el","focusEl","focus","selectionStart","type","start","end"],"mappings":"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","file":"ContextMenuComponent.js","sourcesContent":["import { Component } from 'inferno';\r\n\r\nimport {\r\n  assign,\r\n  isFunction\r\n} from 'min-dash';\r\n\r\nimport {\r\n  inject\r\n} from '../../../components';\r\n\r\nimport {\r\n  query as domQuery\r\n} from 'min-dom';\r\n\r\nimport {\r\n  setRange\r\n} from 'selection-ranges';\r\n\r\n\r\nexport default class ContextMenuComponent extends Component {\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = {\r\n      isOpen: false,\r\n      position: {\r\n        x: 0,\r\n        y: 0\r\n      }\r\n    };\r\n\r\n    inject(this);\r\n  }\r\n\r\n  /**\r\n   * Open the context menu with given position and context.\r\n   *\r\n   * The menu itself will figure out the best position, taking the optional\r\n   * positioning parameter into account.\r\n   *\r\n   * @param {Bounds|Point} position\r\n   * @param {Object} [context]\r\n   */\r\n  open = ({ position, context }) => {\r\n\r\n    // always close first\r\n    this.close();\r\n\r\n    this.setState({\r\n      isOpen: true,\r\n      position: position || { x: 0, y: 0 },\r\n      context: context || {}\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Closes context menu and resets state.\r\n   */\r\n  close = () => {\r\n\r\n    if (this.state.isOpen) {\r\n      this.setState({\r\n        context: undefined,\r\n        isOpen: false,\r\n        position: {\r\n          x: 0,\r\n          y: 0\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  triggerClose = () => {\r\n    this.eventBus.fire('contextMenu.close');\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.eventBus.on('contextMenu.open', this.open);\r\n    this.eventBus.on('contextMenu.close', this.close);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.eventBus.off('contextMenu.open', this.open);\r\n    this.eventBus.off('contextMenu.close', this.close);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isOpen,\r\n      context,\r\n      position\r\n    } = this.state;\r\n\r\n    if (!isOpen) {\r\n      return null;\r\n    }\r\n\r\n    const components = this.components.getComponents('context-menu', context);\r\n\r\n    if (!components.length) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <ContextMenu\r\n        className=\"context-menu no-deselect\"\r\n        context={ context }\r\n        position={ position }\r\n        offset={ context.offset || { x: 0, y: 0 } }\r\n        autoFocus={ context.autoFocus !== false }\r\n        autoClose={ context.autoClose !== false }\r\n        components={ components }\r\n        onClose={ this.triggerClose } />\r\n    );\r\n  }\r\n}\r\n\r\nContextMenuComponent.$inject = [\r\n  'eventBus',\r\n  'components'\r\n];\r\n\r\n\r\n/**\r\n * Low-level, stateless context menu holder.\r\n */\r\nclass ContextMenu extends Component {\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    inject(this);\r\n  }\r\n\r\n  close() {\r\n\r\n    const {\r\n      onClose\r\n    } = this.props;\r\n\r\n    if (isFunction(onClose)) {\r\n      onClose();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Check whether closing the context menu is necessary\r\n   * after selecting the given element.\r\n   */\r\n  checkClose(focusTarget) {\r\n\r\n    const {\r\n      autoClose\r\n    } = this.props;\r\n\r\n    if (!autoClose) {\r\n      return;\r\n    }\r\n\r\n    var node = this.node;\r\n\r\n    if (!node) {\r\n      return;\r\n    }\r\n\r\n    if (node === focusTarget) {\r\n      return;\r\n    }\r\n\r\n    if (node.contains(focusTarget)) {\r\n      return;\r\n    }\r\n\r\n    this.close();\r\n  }\r\n\r\n  /**\r\n   * Handle global (window) click event.\r\n   */\r\n  onGlobalClick = (event) => {\r\n    this.checkClose(event.target);\r\n  }\r\n\r\n  /**\r\n   * Handle global key event.\r\n   */\r\n  onGlobalKey = (event) => {\r\n\r\n    var keyCode = event.which;\r\n\r\n    // ENTER or ESC\r\n    if (keyCode === 13 || keyCode === 27) {\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle global (document) focus changed event.\r\n   */\r\n  onFocusChanged = (event) => {\r\n    this.checkClose(event.target);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('focusin', this.onFocusChanged);\r\n    document.addEventListener('keydown', this.onGlobalKey);\r\n    document.addEventListener('click', this.onGlobalClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('focusin', this.onFocusChanged);\r\n    document.removeEventListener('keydown', this.onGlobalKey);\r\n    document.removeEventListener('click', this.onGlobalClick);\r\n  }\r\n\r\n  setNode = (node) => {\r\n    this.node = node;\r\n\r\n    const {\r\n      autoFocus\r\n    } = this.props;\r\n\r\n    if (node) {\r\n\r\n      if (autoFocus) {\r\n        ensureFocus(node);\r\n      }\r\n\r\n      this.updatePosition();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find best context menu position and re-layout accordingly.\r\n   */\r\n  updatePosition() {\r\n\r\n    const {\r\n      position,\r\n      offset\r\n    } = this.props;\r\n\r\n    const bounds = this.node.getBoundingClientRect();\r\n\r\n    if (!position.width) {\r\n      position.width = 0;\r\n    }\r\n\r\n    if (!position.height) {\r\n      position.height = 0;\r\n    }\r\n\r\n    const container = this.renderer.getContainer();\r\n\r\n    const containerBounds = container.getBoundingClientRect();\r\n\r\n    if (containerBounds.width > containerBounds.height) {\r\n      this.node.classList.add('horizontal');\r\n      this.node.classList.remove('vertical');\r\n    } else {\r\n      this.node.classList.add('vertical');\r\n      this.node.classList.remove('horizontal');\r\n    }\r\n\r\n    const { scrollLeft, scrollTop } = container;\r\n\r\n    const style = {};\r\n\r\n    if (position.x + (position.width / 2) > containerBounds.width / 2) {\r\n      let left = position.x\r\n        - containerBounds.left\r\n        - bounds.width\r\n        + offset.x\r\n        + scrollLeft;\r\n\r\n      left = clampNumber(\r\n        left,\r\n        0 + scrollLeft,\r\n        containerBounds.width - bounds.width + scrollLeft\r\n      );\r\n\r\n      style.left = left + 'px';\r\n    } else {\r\n      let left = window.scrollX\r\n        - containerBounds.left\r\n        + position.x\r\n        + position.width\r\n        - offset.x\r\n        + scrollLeft;\r\n\r\n      left = clampNumber(\r\n        left,\r\n        0 + scrollLeft,\r\n        containerBounds.width - bounds.width + scrollLeft\r\n      );\r\n\r\n      style.left = left + 'px';\r\n    }\r\n\r\n    let top;\r\n\r\n    if (position.y + (position.height / 2) > containerBounds.height / 2) {\r\n      top = position.y\r\n        - containerBounds.top\r\n        - bounds.height\r\n        + offset.y\r\n        + scrollTop;\r\n\r\n      top = clampNumber(\r\n        top,\r\n        0 + scrollTop,\r\n        containerBounds.height - bounds.height + scrollTop\r\n      );\r\n\r\n      style.top = top + 'px';\r\n    } else {\r\n      top = window.scrollY\r\n        - containerBounds.top\r\n        + position.y\r\n        - offset.y\r\n        + scrollTop;\r\n\r\n      top = clampNumber(\r\n        top,\r\n        0 + scrollTop,\r\n        containerBounds.height - bounds.height + scrollTop\r\n      );\r\n\r\n      style.top = top + 'px';\r\n    }\r\n\r\n    // ensure context menu will always be accessible\r\n    style.overflowY = 'auto';\r\n    style.maxHeight = (containerBounds.height - top + scrollTop) + 'px';\r\n\r\n    assign(this.node.style, style);\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {\r\n      context,\r\n      components,\r\n      className\r\n    } = this.props;\r\n\r\n    return (\r\n      <div\r\n        ref={ this.setNode }\r\n        onContextMenu={ e => e.preventDefault() }\r\n        className={ className }>\r\n        {\r\n          components.map(\r\n            (Component, idx) => <Component key={ idx } context={ context } />\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContextMenu.$inject = [\r\n  'renderer'\r\n];\r\n\r\n\r\n// helpers /////////////\r\n\r\nfunction clampNumber(number, min, max) {\r\n  return Math.max(min, Math.min(max, number));\r\n}\r\n\r\nconst SELECTABLE_ELEMENTS = `\r\n  input[type=text],\r\n  input[type=number],\r\n  input[type=button],\r\n  input[type=submit],\r\n  [contenteditable],\r\n  [tabindex],\r\n  a[href],\r\n  textarea,\r\n  button\r\n`;\r\n\r\nfunction ensureFocus(el) {\r\n\r\n  var focusEl = domQuery(SELECTABLE_ELEMENTS, el);\r\n\r\n  if (focusEl) {\r\n    focusEl.focus();\r\n\r\n    // inputs\r\n    if (focusEl.selectionStart && focusEl.type === 'text') {\r\n      focusEl.selectionStart = 100000;\r\n    } else\r\n\r\n    // content editable elements\r\n    if ('contentEditable' in focusEl) {\r\n      setRange(focusEl, { start: 100000, end: 100000 });\r\n    }\r\n  }\r\n}"]}