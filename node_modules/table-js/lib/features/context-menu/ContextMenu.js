var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

import ContextMenuComponent from './components/ContextMenuComponent';

var ContextMenu = function () {
  function ContextMenu(components, eventBus, renderer) {
    _classCallCheck(this, ContextMenu);

    this._eventBus = eventBus;

    components.onGetComponent('table.before', function () {
      return ContextMenuComponent;
    });
  }

  _createClass(ContextMenu, [{
    key: 'open',
    value: function open(position, context) {
      this._eventBus.fire('contextMenu.open', {
        position: position,
        context: context
      });
    }
  }, {
    key: 'close',
    value: function close() {
      this._eventBus.fire('contextMenu.close');
    }
  }]);

  return ContextMenu;
}();

export default ContextMenu;


ContextMenu.$inject = ['components', 'eventBus', 'renderer'];
//# sourceMappingURL=ContextMenu.js.map