{"version":3,"sources":["../../../../src/features/modeling/cmd/MoveRowHandler.js"],"names":["MoveRowHandler","modeling","_modeling","context","row","removeRow","index","addRow","$inject"],"mappings":";;;;AACA;;;IAGqBA,c;AAEnB,0BAAYC,QAAZ,EAAsB;AAAA;;AACpB,SAAKC,SAAL,GAAiBD,QAAjB;AACD;;AAED;;;;;;;+BAGWE,O,EAAS;AAAA,UAEhBC,GAFgB,GAGdD,OAHc,CAEhBC,GAFgB;;;AAKlB,WAAKF,SAAL,CAAeG,SAAf,CAAyBD,GAAzB;AACD;;AAED;;;;;;gCAGYD,O,EAAS;AAAA,UAEjBC,GAFiB,GAIfD,OAJe,CAEjBC,GAFiB;AAAA,UAGjBE,KAHiB,GAIfH,OAJe,CAGjBG,KAHiB;;;AAMnB,WAAKJ,SAAL,CAAeK,MAAf,CAAsBH,GAAtB,EAA2BE,KAA3B;AACD;;;;;;eA3BkBN,c;;;AA+BrBA,eAAeQ,OAAf,GAAyB,CAAE,UAAF,CAAzB","file":"MoveRowHandler.js","sourcesContent":["\n/**\n * A handler that implements row movement.\n */\nexport default class MoveRowHandler {\n\n  constructor(modeling) {\n    this._modeling = modeling;\n  }\n\n  /**\n   * <preexecute>\n   */\n  preExecute(context) {\n    let {\n      row\n    } = context;\n\n    this._modeling.removeRow(row);\n  }\n\n  /**\n   * <postexecute>\n   */\n  postExecute(context) {\n    let {\n      row,\n      index\n    } = context;\n\n    this._modeling.addRow(row, index);\n  }\n\n}\n\nMoveRowHandler.$inject = [ 'modeling' ];"]}