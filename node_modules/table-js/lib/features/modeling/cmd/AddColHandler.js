var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * A handler that implements column addition.
 */
var AddColHandler = function () {
  function AddColHandler(sheet, elementFactory) {
    _classCallCheck(this, AddColHandler);

    this._sheet = sheet;
    this._elementFactory = elementFactory;
  }

  /**
   * <do>
   */


  _createClass(AddColHandler, [{
    key: 'execute',
    value: function execute(context) {

      var sheet = this._sheet,
          elementFactory = this._elementFactory,
          root = sheet.getRoot();

      var col = context.col,
          index = context.index;


      if (typeof index === 'undefined') {
        index = context.index = root.cols.length;
      }

      context.newRoot = root;

      if (!col.cells.length) {
        root.rows.forEach(function (row, idx) {
          var cell = elementFactory.create('cell', { row: row, col: col });

          col.cells[idx] = cell;
        });
      }

      sheet.addCol(col, index);

      return sheet.getRoot();
    }

    /**
     * <undo>
     */

  }, {
    key: 'revert',
    value: function revert(context) {
      var col = context.col;


      var sheet = this._sheet;

      sheet.removeCol(col);

      return sheet.getRoot();
    }
  }]);

  return AddColHandler;
}();

export default AddColHandler;


AddColHandler.$inject = ['sheet', 'elementFactory'];
//# sourceMappingURL=AddColHandler.js.map