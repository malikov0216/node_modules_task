{"version":3,"sources":["../../src/core/Sheet.js"],"names":["Sheet","elementRegistry","eventBus","_elementRegistry","_eventBus","_root","on","setRoot","root","oldRoot","fire","id","rows","cols","row","index","getRoot","length","cells","Error","addAtIndex","add","forEach","cell","idx","col","get","indexOf","removeAtIndex","undefined","remove","$inject","array","value","splice"],"mappings":"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","file":"Sheet.js","sourcesContent":["export default class Sheet {\n  constructor(elementRegistry, eventBus) {\n    this._elementRegistry = elementRegistry;\n    this._eventBus = eventBus;\n\n    this._root = null;\n\n    eventBus.on('table.clear', () => {\n      this.setRoot(null);\n    });\n  }\n\n  setRoot(root) {\n    if (this._root) {\n      const oldRoot = this._root;\n\n      this._eventBus.fire('root.remove', { root: oldRoot });\n\n      this._root = null;\n\n      this._eventBus.fire('root.removed', { root: oldRoot });\n    }\n\n    if (root) {\n      this._eventBus.fire('root.add', { root });\n    }\n\n    this._root = root;\n\n    if (root) {\n      this._eventBus.fire('root.added', { root });\n    }\n  }\n\n  getRoot() {\n    if (!this._root) {\n      this.setRoot({\n        id: '__implicitroot',\n        rows: [],\n        cols: []\n      });\n    }\n\n    return this._root;\n  }\n\n\n  /**\n   * Add row to sheet.\n   *\n   * @param {Object} row - Row.\n   */\n  addRow(row, index) {\n    const root = this.getRoot();\n\n    if (root.cols.length != row.cells.length) {\n      throw new Error('number of cells is not equal to number of cols');\n    }\n\n    if (typeof index === 'undefined') {\n      index = root.rows.length;\n    }\n\n    addAtIndex(index, root.rows, row);\n    row.root = root;\n\n    this._elementRegistry.add(row);\n\n    row.cells.forEach((cell, idx) => {\n      this._elementRegistry.add(cell);\n\n      cell.row = row;\n      cell.col = root.cols[idx];\n\n      addAtIndex(index, root.cols[idx].cells, cell);\n    });\n\n    this._eventBus.fire('row.add', { row });\n\n    return row;\n  }\n\n\n  /**\n   * Remove row from sheet.\n   *\n   * @param {Object|string} row - Row or row ID.\n   */\n  removeRow(row) {\n    const root = this.getRoot();\n\n    if (typeof row === 'string') {\n      row = this._elementRegistry.get(row);\n    }\n\n    const index = root.rows.indexOf(row);\n\n    if (index === -1) {\n      return;\n    }\n\n    removeAtIndex(index, root.rows);\n    row.root = undefined;\n\n    this._elementRegistry.remove(row);\n\n    row.cells.forEach((cell, idx) => {\n      this._elementRegistry.remove(cell);\n\n      cell.col = undefined;\n\n      removeAtIndex(index, root.cols[idx].cells);\n    });\n\n    this._eventBus.fire('row.remove', { row });\n  }\n\n  /**\n   * Add col to sheet.\n   *\n   * @param {Object} col\n   * @param {Number} [index]\n   */\n  addCol(col, index) {\n    const root = this.getRoot();\n\n    this._elementRegistry.add(col);\n\n    if (root.rows.length != col.cells.length) {\n      throw new Error('number of cells is not equal to number of rows');\n    }\n\n    if (typeof index === 'undefined') {\n      index = root.cols.length;\n    }\n\n    addAtIndex(index, root.cols, col);\n    col.root = root;\n\n    col.cells.forEach((cell, idx) => {\n      this._elementRegistry.add(cell);\n\n      cell.col = col;\n      cell.row = root.rows[idx];\n\n      addAtIndex(index, root.rows[idx].cells, cell);\n    });\n\n    this._eventBus.fire('col.add', { col });\n\n    return col;\n  }\n\n  /**\n   * Remove col from sheet.\n   *\n   * @param {Object|string} col - Col or col ID.\n   */\n  removeCol(col) {\n\n    const root = this.getRoot();\n\n    if (typeof col === 'string') {\n      col = this._elementRegistry.get(col);\n    }\n\n    const index = root.cols.indexOf(col);\n\n    if (index === -1) {\n      return;\n    }\n\n    removeAtIndex(index, root.cols);\n    col.root = undefined;\n\n    this._elementRegistry.remove(col);\n\n    col.cells.forEach((cell, idx) => {\n      this._elementRegistry.remove(cell);\n\n      cell.row = undefined;\n\n      removeAtIndex(index, root.rows[idx].cells);\n    });\n\n    this._eventBus.fire('col.remove', { col });\n  }\n\n  resized() {\n    this._eventBus.fire('sheet.resized');\n  }\n\n}\n\nSheet.$inject = [ 'elementRegistry', 'eventBus' ];\n\n\n// helpers /////////////\n\n/**\n * Insert value\n *\n * @param {number} index - Index to insert value at.\n * @param {Array} array - Array to insert value into.\n * @param {*} value - Value to insert.\n */\nfunction addAtIndex(index, array, value) {\n  return array.splice(index, 0, value);\n}\n\n/**\n *\n * @param {number} index - Index to remove.\n * @param {Array} array - Array to remove from.\n */\nfunction removeAtIndex(index, array) {\n  return array.splice(index, 1);\n}"]}