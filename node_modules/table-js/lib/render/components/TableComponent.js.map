{"version":3,"sources":["../../../src/render/components/TableComponent.js"],"names":["Component","TableComponent","props","injector","_injector","_sheet","get","_changeSupport","_components","onElementsChanged","bind","forceUpdate","changeSupport","components","getRoot","id","offElementsChanged","rows","cols","beforeTableComponents","getComponents","afterTableComponents","Head","getComponent","Body","Foot","map","index"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,SAA1B;;IAGqBC,c;;;AAEnB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA,gIACXA,KADW;;AAGjB,QAAMC,WAAW,MAAKC,SAAL,GAAiBF,MAAMC,QAAxC;;AAEA,UAAKE,MAAL,GAAcF,SAASG,GAAT,CAAa,OAAb,CAAd;AACA,UAAKC,cAAL,GAAsBJ,SAASG,GAAT,CAAa,eAAb,CAAtB;AACA,UAAKE,WAAL,GAAmBL,SAASG,GAAT,CAAa,YAAb,CAAnB;;AAEA,UAAKG,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,OAAzB;AATiB;AAUlB;;;;wCAEmB;AAClB,WAAKC,WAAL;AACD;;;sCAEiB;AAChB,aAAO;AACLC,uBAAe,KAAKL,cADf;AAELM,oBAAY,KAAKL,WAFZ;AAGLL,kBAAU,KAAKC;AAHV,OAAP;AAKD;;;yCAEoB;AAAA,2BACJ,KAAKC,MAAL,CAAYS,OAAZ,EADI;AAAA,UACXC,EADW,kBACXA,EADW;;AAGnB,WAAKR,cAAL,CAAoBE,iBAApB,CAAsCM,EAAtC,EAA0C,KAAKN,iBAA/C;AACD;;;2CAEsB;AAAA,4BACN,KAAKJ,MAAL,CAAYS,OAAZ,EADM;AAAA,UACbC,EADa,mBACbA,EADa;;AAGrB,WAAKR,cAAL,CAAoBS,kBAApB,CAAuCD,EAAvC,EAA2C,KAAKN,iBAAhD;AACD;;;6BAEQ;AAAA,4BACgB,KAAKJ,MAAL,CAAYS,OAAZ,EADhB;AAAA,UACCG,IADD,mBACCA,IADD;AAAA,UACOC,IADP,mBACOA,IADP;;AAGP,UAAMC,wBAAwB,KAAKX,WAAL,CAAiBY,aAAjB,CAA+B,cAA/B,CAA9B;AACA,UAAMC,uBAAuB,KAAKb,WAAL,CAAiBY,aAAjB,CAA+B,aAA/B,CAA7B;;AAEA,UAAME,OAAO,KAAKd,WAAL,CAAiBe,YAAjB,CAA8B,YAA9B,CAAb;AACA,UAAMC,OAAO,KAAKhB,WAAL,CAAiBe,YAAjB,CAA8B,YAA9B,CAAb;AACA,UAAME,OAAO,KAAKjB,WAAL,CAAiBe,YAAjB,CAA8B,YAA9B,CAAb;;AAEA,mCACiB,eADjB,GAGMJ,yBACEA,sBAAsBO,GAAtB,CAA0B,UAAC1B,SAAD,EAAY2B,KAAZ;AAAA,wDAAuCA,KAAvC;AAAA,OAA1B,CAJR,0BAMqB,WANrB,GAOQL;AAAA,gBAAqBL,IAArB;AAAA,gBAAmCC;AAAnC,QAPR,EAQQM;AAAA,gBAAqBP,IAArB;AAAA,gBAAmCC;AAAnC,QARR,EASQO;AAAA,gBAAqBR,IAArB;AAAA,gBAAmCC;AAAnC,QATR,OAYMG,wBACEA,qBAAqBK,GAArB,CAAyB,UAAC1B,SAAD,EAAY2B,KAAZ;AAAA,wDAAuCA,KAAvC;AAAA,OAAzB,CAbR;AAiBD;;;;EAjEyC3B,S;;eAAvBC,c","file":"TableComponent.js","sourcesContent":["import { Component } from 'inferno';\n\n\nexport default class TableComponent extends Component {\n\n  constructor(props) {\n    super(props);\n\n    const injector = this._injector = props.injector;\n\n    this._sheet = injector.get('sheet');\n    this._changeSupport = injector.get('changeSupport');\n    this._components = injector.get('components');\n\n    this.onElementsChanged = this.onElementsChanged.bind(this);\n  }\n\n  onElementsChanged() {\n    this.forceUpdate();\n  }\n\n  getChildContext() {\n    return {\n      changeSupport: this._changeSupport,\n      components: this._components,\n      injector: this._injector\n    };\n  }\n\n  componentWillMount() {\n    const { id } = this._sheet.getRoot();\n\n    this._changeSupport.onElementsChanged(id, this.onElementsChanged);\n  }\n\n  componentWillUnmount() {\n    const { id } = this._sheet.getRoot();\n\n    this._changeSupport.offElementsChanged(id, this.onElementsChanged);\n  }\n\n  render() {\n    const { rows, cols } = this._sheet.getRoot();\n\n    const beforeTableComponents = this._components.getComponents('table.before');\n    const afterTableComponents = this._components.getComponents('table.after');\n\n    const Head = this._components.getComponent('table.head');\n    const Body = this._components.getComponent('table.body');\n    const Foot = this._components.getComponent('table.foot');\n\n    return (\n      <div className=\"tjs-container\">\n        {\n          beforeTableComponents &&\n            beforeTableComponents.map((Component, index) => <Component key={ index } />)\n        }\n        <table className=\"tjs-table\">\n          { Head && <Head rows={ rows } cols={ cols } /> }\n          { Body && <Body rows={ rows } cols={ cols } /> }\n          { Foot && <Foot rows={ rows } cols={ cols } /> }\n        </table>\n        {\n          afterTableComponents &&\n            afterTableComponents.map((Component, index) => <Component key={ index } />)\n        }\n      </div>\n    );\n  }\n}"]}