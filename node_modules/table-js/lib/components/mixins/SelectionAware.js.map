{"version":3,"sources":["../../../src/components/mixins/SelectionAware.js"],"names":["classNames","SelectionAware","getSelectionClasses","state","selected","selectedSecondary","focussed","selectionChanged","newSelection","setState","componentWillUpdate","newProps","elementId","props","updateSelectionSubscription","componentDidUpdate","oldProps","componentDidMount","componentWillUnmount","enable","eventBus","$inject"],"mappings":"AAAA,SACEA,UADF,QAEO,UAFP;;AAKA;;;AAGA,IAAMC,iBAAiB;AAErBC,qBAFqB,iCAEC;AAAA,iBAMhB,KAAKC,KANW;AAAA,QAGlBC,QAHkB,UAGlBA,QAHkB;AAAA,QAIlBC,iBAJkB,UAIlBA,iBAJkB;AAAA,QAKlBC,QALkB,UAKlBA,QALkB;;;AAQpB,WAAON,WAAW;AAChB,kBAAYI,QADI;AAEhB,4BAAsBC,iBAFN;AAGhB,kBAAYC;AAHI,KAAX,CAAP;AAKD,GAfoB;AAiBrBC,kBAjBqB,4BAiBJC,YAjBI,EAiBU;;AAE7B;AACA,SAAKC,QAAL,CAAcD,YAAd;AACD,GArBoB;AAuBrBE,qBAvBqB,+BAuBDC,QAvBC,EAuBS;AAC5B,QAAIA,SAASC,SAAT,KAAuB,KAAKC,KAAL,CAAWD,SAAtC,EAAiD;AAC/C,WAAKE,2BAAL,CAAiC,KAAjC;AACD;AACF,GA3BoB;AA6BrBC,oBA7BqB,8BA6BFC,QA7BE,EA6BQ;;AAE3B,QAAIA,SAASJ,SAAT,KAAuB,KAAKC,KAAL,CAAWD,SAAtC,EAAiD;AAC/C,WAAKE,2BAAL,CAAiC,IAAjC;AACD;AACF,GAlCoB;AAoCrBG,mBApCqB,+BAoCD;AAClB,SAAKH,2BAAL,CAAiC,IAAjC;AACD,GAtCoB;AAwCrBI,sBAxCqB,kCAwCE;AACrB,SAAKJ,2BAAL,CAAiC,KAAjC;AACD,GA1CoB;AA4CrBA,6BA5CqB,uCA4COK,MA5CP,EA4Ce;AAAA,QAEhCP,SAFgC,GAG9B,KAAKC,KAHyB,CAEhCD,SAFgC;;;AAKlC,QAAI,CAACA,SAAL,EAAgB;AACd;AACD;;AAED,QAAIA,SAAJ,EAAe;AACb,WAAKQ,QAAL,CAAcD,SAAS,IAAT,GAAgB,KAA9B,iBACeP,SADf,eAEE,KAAKL,gBAFP;AAID;AACF;AA3DoB,CAAvB;;AA+DA,eAAeN,cAAf;;AAEAA,eAAeoB,OAAf,GAAyB,CAAE,UAAF,CAAzB","file":"SelectionAware.js","sourcesContent":["import {\n  classNames\n} from '../utils';\n\n\n/**\n * A mixin to make an element _selection aware_.\n */\nconst SelectionAware = {\n\n  getSelectionClasses() {\n\n    const {\n      selected,\n      selectedSecondary,\n      focussed\n    } = this.state;\n\n    return classNames({\n      'selected': selected,\n      'selected-secondary': selectedSecondary,\n      'focussed': focussed\n    });\n  },\n\n  selectionChanged(newSelection) {\n\n    // newSelection = { selected, selectedSecondary, focussed }\n    this.setState(newSelection);\n  },\n\n  componentWillUpdate(newProps) {\n    if (newProps.elementId !== this.props.elementId) {\n      this.updateSelectionSubscription(false);\n    }\n  },\n\n  componentDidUpdate(oldProps) {\n\n    if (oldProps.elementId !== this.props.elementId) {\n      this.updateSelectionSubscription(true);\n    }\n  },\n\n  componentDidMount() {\n    this.updateSelectionSubscription(true);\n  },\n\n  componentWillUnmount() {\n    this.updateSelectionSubscription(false);\n  },\n\n  updateSelectionSubscription(enable) {\n    const {\n      elementId\n    } = this.props;\n\n    if (!elementId) {\n      return;\n    }\n\n    if (elementId) {\n      this.eventBus[enable ? 'on' : 'off'](\n        `selection.${elementId}.changed`,\n        this.selectionChanged\n      );\n    }\n  },\n\n};\n\nexport default SelectionAware;\n\nSelectionAware.$inject = [ 'eventBus' ];"]}