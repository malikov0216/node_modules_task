{"version":3,"sources":["../../../src/components/utils/inject.js"],"names":["inject","component","Type","constructor","injectType","annotation","$inject","injector","context","setupFn","args","idx","name","value","invoke"],"mappings":";;AAAA,OAAO,SAASA,MAAT,CAAgBC,SAAhB,EAA2B;;AAEhC,MAAMC,OAAOD,UAAUE,WAAvB;;AAEA,SAAOC,WAAWF,IAAX,EAAiBD,SAAjB,CAAP;AACD;;AAGD,OAAO,SAASG,UAAT,CAAoBF,IAApB,EAA0BD,SAA1B,EAAqC;;AAE1C,MAAMI,aAAaH,KAAKI,OAAxB;;AAEA,MAAI,CAACD,UAAL,EAAiB;AACf;AACD;;AANyC,MASxCE,QATwC,GAUtCN,UAAUO,OAV4B,CASxCD,QATwC;;;AAY1C,MAAME,uCAAeJ,UAAf,IAA2B,YAAkB;AAAA,sCAANK,IAAM;AAANA,UAAM;AAAA;;AAEjD,SAAK,IAAMC,GAAX,IAAkBD,IAAlB,EAAwB;AACtB,UAAME,OAAOP,WAAWM,GAAX,CAAb;AACA,UAAME,QAAQH,KAAKC,GAAL,CAAd;;AAEAV,gBAAUW,IAAV,IAAkBC,KAAlB;AACD;AACF,GARK,EAAN;;AAUAN,WAASO,MAAT,CAAgBL,OAAhB;AACD","file":"inject.js","sourcesContent":["export function inject(component) {\n\n  const Type = component.constructor;\n\n  return injectType(Type, component);\n}\n\n\nexport function injectType(Type, component) {\n\n  const annotation = Type.$inject;\n\n  if (!annotation) {\n    return;\n  }\n\n  const {\n    injector\n  } = component.context;\n\n  const setupFn = [ ...annotation, function(...args) {\n\n    for (const idx in args) {\n      const name = annotation[idx];\n      const value = args[idx];\n\n      component[name] = value;\n    }\n  }];\n\n  injector.invoke(setupFn);\n}"]}