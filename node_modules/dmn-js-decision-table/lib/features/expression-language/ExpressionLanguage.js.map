{"version":3,"sources":["../../../src/features/expression-language/ExpressionLanguage.js"],"names":["InputSelect","isInput","INPUT_EXPRESSION_LANGUAGE_OPTIONS","label","value","ExpressionLanguage","components","elementRegistry","modeling","_modeling","onGetComponent","context","contextMenuType","id","element","get","expressionLanguage","businessObject","col","onChange","cell","editExpressionLanguage","$inject"],"mappings":";;;;;;AAAA;;AAEA,OAAOA,WAAP,MAAwB,0CAAxB;;AAEA,SAASC,OAAT,QAAwB,kCAAxB;;AAEA,IAAMC,oCAAoC,CAAC;AACzCC,SAAO,MADkC;AAEzCC,SAAO;AAFkC,CAAD,EAGvC;AACDD,SAAO,MADN;AAEDC,SAAO;AAFN,CAHuC,EAMvC;AACDD,SAAO,YADN;AAEDC,SAAO;AAFN,CANuC,EASvC;AACDD,SAAO,QADN;AAEDC,SAAO;AAFN,CATuC,EAYvC;AACDD,SAAO,QADN;AAEDC,SAAO;AAFN,CAZuC,EAevC;AACDD,SAAO,OADN;AAEDC,SAAO;AAFN,CAfuC,CAA1C;;IAoBqBC,kB;AACnB,8BAAYC,UAAZ,EAAwBC,eAAxB,EAAyCC,QAAzC,EAAmD;AAAA;;AAAA;;AACjD,SAAKC,SAAL,GAAiBD,QAAjB;;AAEAF,eAAWI,cAAX,CAA0B,8BAA1B,EAA0D,YAAkB;AAAA,UAAjBC,OAAiB,uEAAP,EAAO;;AAC1E,UAAIA,QAAQC,eAAR,IAA2BD,QAAQC,eAAR,KAA4B,cAA3D,EAA2E;AAAA,YAEjEC,EAFiE,GAE1DF,OAF0D,CAEjEE,EAFiE;;;AAIzE,YAAI,CAACA,EAAL,EAAS;AACP;AACD;;AAED,YAAMC,UAAUP,gBAAgBQ,GAAhB,CAAoBF,EAApB,CAAhB;;AAEA;AACA,YAAI,CAACC,OAAL,EAAc;AACZ;AACD;;AAED,YAAME,qBAAqBF,QAAQG,cAAR,CAAuBD,kBAAvB,KACrBf,QAAQa,QAAQI,GAAhB,IAAuB,MAAvB,GAAgC,MADX,CAA3B;;AAGA,qCAEc,qEAFd,uDAIsB,kDAJtB;AAAA,uBASgB,qBAThB;AAAA,sBAUiB;AAAA,mBAAS,MAAKC,QAAL,CAAcL,OAAd,EAAuBV,KAAvB,CAAT;AAAA,WAVjB;AAAA,qBAWgBF,iCAXhB;AAAA,mBAYcc;AAZd;AAiBD;AACF,KArCD;AAsCD;;;;6BAEQI,I,EAAMJ,kB,EAAoB;AACjC,WAAKP,SAAL,CAAeY,sBAAf,CAAsCD,KAAKH,cAA3C,EAA2DD,kBAA3D;AACD;;;;;;eA9CkBX,kB;;;AAiDrBA,mBAAmBiB,OAAnB,GAA6B,CAAE,YAAF,EAAgB,iBAAhB,EAAmC,UAAnC,CAA7B","file":"ExpressionLanguage.js","sourcesContent":["/* eslint-disable max-len */\r\n\r\nimport InputSelect from 'dmn-js-shared/lib/components/InputSelect';\r\n\r\nimport { isInput } from 'dmn-js-shared/lib/util/ModelUtil';\r\n\r\nconst INPUT_EXPRESSION_LANGUAGE_OPTIONS = [{\r\n  label: 'FEEL',\r\n  value: 'feel'\r\n}, {\r\n  label: 'JUEL',\r\n  value: 'juel'\r\n}, {\r\n  label: 'JavaScript',\r\n  value: 'javascript'\r\n}, {\r\n  label: 'Groovy',\r\n  value: 'groovy'\r\n}, {\r\n  label: 'Python',\r\n  value: 'python'\r\n}, {\r\n  label: 'JRuby',\r\n  value: 'jruby'\r\n}];\r\n\r\nexport default class ExpressionLanguage {\r\n  constructor(components, elementRegistry, modeling) {\r\n    this._modeling = modeling;\r\n\r\n    components.onGetComponent('context-menu-cell-additional', (context = {}) => {\r\n      if (context.contextMenuType && context.contextMenuType === 'context-menu') {\r\n\r\n        const { id } = context;\r\n\r\n        if (!id) {\r\n          return;\r\n        }\r\n\r\n        const element = elementRegistry.get(id);\r\n\r\n        // element might not be in element registry (e.g. cut)\r\n        if (!element) {\r\n          return;\r\n        }\r\n\r\n        const expressionLanguage = element.businessObject.expressionLanguage\r\n          || (isInput(element.col) ? 'feel' : 'juel');\r\n\r\n        return (\r\n          <div\r\n            className=\"context-menu-group-entry context-menu-entry-set-expression-language\">\r\n            <div>\r\n              <span className=\"context-menu-group-entry-icon dmn-icon-file-code\"></span>\r\n              Expression Language\r\n            </div>\r\n\r\n            <InputSelect\r\n              className=\"expression-language\"\r\n              onChange={ value => this.onChange(element, value) }\r\n              options={ INPUT_EXPRESSION_LANGUAGE_OPTIONS }\r\n              value={ expressionLanguage } />\r\n\r\n          </div>\r\n        );\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onChange(cell, expressionLanguage) {\r\n    this._modeling.editExpressionLanguage(cell.businessObject, expressionLanguage);\r\n  }\r\n}\r\n\r\nExpressionLanguage.$inject = [ 'components', 'elementRegistry', 'modeling' ];"]}