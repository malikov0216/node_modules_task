{"version":3,"sources":["../../../src/features/simple-date-edit/Utils.js"],"names":["ISO_DATE_REGEX","BETWEEN_DATE_REGEX","BEFORE_AFTER_DATE_REGEX","EXACT_DATE_REGEX","EXACT","BEFORE","AFTER","BETWEEN","validateISOString","string","test","trim","getDateString","type","dates","getSampleDate","date","Date","setUTCHours","toISOString","slice","parseString","matches","match"],"mappings":"AAAA,IAAMA,iBAAiB,sCAAvB;;AAEA;AACA,IAAMC,qBAAqB,mHAA3B;;AAEA;AACA,IAAMC,0BAA0B,kEAAhC;;AAEA,IAAMC,mBAAmB,2DAAzB;;AAEA,IAAMC,QAAQ,OAAd;AAAA,IACMC,SAAS,QADf;AAAA,IAEMC,QAAQ,OAFd;AAAA,IAGMC,UAAU,SAHhB;;AAKA,OAAO,SAASC,iBAAT,CAA2BC,MAA3B,EAAmC;AACxC,MAAI,CAACT,eAAeU,IAAf,CAAoBD,OAAOE,IAAP,EAApB,CAAL,EAAyC;AACvC,WAAO,8CAAP;AACD;AACF;;AAED,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,KAA7B,EAAoC;AACzC,MAAID,SAAST,KAAb,EAAoB;AAClB,+BAA0BU,MAAM,CAAN,CAA1B;AACD,GAFD,MAEO,IAAID,SAASR,MAAb,EAAqB;AAC1B,iCAA4BS,MAAM,CAAN,CAA5B;AACD,GAFM,MAEA,IAAID,SAASP,KAAb,EAAoB;AACzB,iCAA4BQ,MAAM,CAAN,CAA5B;AACD,GAFM,MAEA,IAAID,SAASN,OAAb,EAAsB;AAC3B,gCAA2BO,MAAM,CAAN,CAA3B,2BAA2DA,MAAM,CAAN,CAA3D;AACD;AACF;;AAED,OAAO,SAASC,aAAT,GAAyB;AAC9B,MAAMC,OAAO,IAAIC,IAAJ,EAAb;;AAEAD,OAAKE,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;;AAEA,SAAOF,KAAKG,WAAL,GAAmBC,KAAnB,CAAyB,CAAzB,EAA2B,CAAC,CAA5B,CAAP;AACD;;AAED,OAAO,SAASC,WAAT,CAAqBZ,MAArB,EAA6B;;AAElC;AACA,MAAI,CAACA,MAAD,IAAWA,OAAOE,IAAP,OAAkB,EAAjC,EAAqC;AACnC,WAAO;AACLE,YAAM,OADD;AAELG,YAAM;AAFD,KAAP;AAID;;AAED;AACA,MAAIM,UAAUb,OAAOc,KAAP,CAAatB,kBAAb,CAAd;;AAEA,MAAIqB,OAAJ,EAAa;AACX,WAAO;AACLT,YAAM,SADD;AAELC,aAAO,CAAEQ,QAAQ,CAAR,CAAF,EAAcA,QAAQ,CAAR,CAAd;AAFF,KAAP;AAID;;AAED;AACAA,YAAUb,OAAOc,KAAP,CAAarB,uBAAb,CAAV;;AAEA,MAAIoB,OAAJ,EAAa;AACX,WAAO;AACLT,YAAMS,QAAQ,CAAR,MAAe,GAAf,GAAqB,QAArB,GAAgC,OADjC;AAELN,YAAMM,QAAQ,CAAR;AAFD,KAAP;AAID;;AAED;AACAA,YAAUb,OAAOc,KAAP,CAAapB,gBAAb,CAAV;;AAEA,MAAImB,OAAJ,EAAa;AACX,WAAO;AACLT,YAAM,OADD;AAELG,YAAMM,QAAQ,CAAR;AAFD,KAAP;AAID;AACF","file":"Utils.js","sourcesContent":["const ISO_DATE_REGEX = /^\\d{4}(?:-\\d\\d){2}T(?:\\d\\d:){2}\\d\\d$/;\r\n\r\n// eslint-disable-next-line\r\nconst BETWEEN_DATE_REGEX = /^\\[date and time\\(\"(\\d{4}(?:-\\d\\d){2}T(?:\\d\\d:){2}\\d\\d)\"\\)..date and time\\(\"(\\d{4}(?:-\\d\\d){2}T(?:\\d\\d:){2}\\d\\d)\"/;\r\n\r\n// eslint-disable-next-line\r\nconst BEFORE_AFTER_DATE_REGEX = /^(<|>)\\s*date and time\\(\"(\\d{4}(?:-\\d\\d){2}T(?:\\d\\d:){2}\\d\\d)\"\\)/;\r\n\r\nconst EXACT_DATE_REGEX = /^date and time\\(\"(\\d{4}(?:-\\d\\d){2}T(?:\\d\\d:){2}\\d\\d)\"\\)$/;\r\n\r\nconst EXACT = 'exact',\r\n      BEFORE = 'before',\r\n      AFTER = 'after',\r\n      BETWEEN = 'between';\r\n\r\nexport function validateISOString(string) {\r\n  if (!ISO_DATE_REGEX.test(string.trim())) {\r\n    return 'Date must match pattern yyyy-MM-ddTHH:mm:ss.';\r\n  }\r\n}\r\n\r\nexport function getDateString(type, dates) {\r\n  if (type === EXACT) {\r\n    return `date and time(\"${ dates[0] }\")`;\r\n  } else if (type === BEFORE) {\r\n    return `< date and time(\"${ dates[0] }\")`;\r\n  } else if (type === AFTER) {\r\n    return `> date and time(\"${ dates[0] }\")`;\r\n  } else if (type === BETWEEN) {\r\n    return `[date and time(\"${ dates[0] }\")..date and time(\"${ dates[1] }\")]`;\r\n  }\r\n}\r\n\r\nexport function getSampleDate() {\r\n  const date = new Date();\r\n\r\n  date.setUTCHours(0, 0, 0, 0);\r\n\r\n  return date.toISOString().slice(0,-5);\r\n}\r\n\r\nexport function parseString(string) {\r\n\r\n  // emtpy\r\n  if (!string || string.trim() === '') {\r\n    return {\r\n      type: 'exact',\r\n      date: ''\r\n    };\r\n  }\r\n\r\n  // between\r\n  let matches = string.match(BETWEEN_DATE_REGEX);\r\n\r\n  if (matches) {\r\n    return {\r\n      type: 'between',\r\n      dates: [ matches[1], matches[2] ]\r\n    };\r\n  }\r\n\r\n  // before or after\r\n  matches = string.match(BEFORE_AFTER_DATE_REGEX);\r\n\r\n  if (matches) {\r\n    return {\r\n      type: matches[1] === '<' ? 'before' : 'after',\r\n      date: matches[2]\r\n    };\r\n  }\r\n\r\n  // exact\r\n  matches = string.match(EXACT_DATE_REGEX);\r\n\r\n  if (matches) {\r\n    return {\r\n      type: 'exact',\r\n      date: matches[1]\r\n    };\r\n  }\r\n}"]}