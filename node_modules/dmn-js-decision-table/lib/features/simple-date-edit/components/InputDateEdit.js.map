{"version":3,"sources":["../../../../src/features/simple-date-edit/components/InputDateEdit.js"],"names":["Component","ValidatedInput","InputSelect","getDateString","getSampleDate","validateISOString","parseString","EXACT","BEFORE","AFTER","BETWEEN","InputDateEdit","props","context","_modeling","injector","get","element","parsedString","businessObject","text","dates","date","state","type","debounceInput","debouncedEditCell","editCell","bind","onTypeChange","onSetStartDateTodayClick","onSetEndDateTodayClick","onStartDateInput","onEndDateInput","cell","value","setState","isValid","options","label"],"mappings":"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","file":"InputDateEdit.js","sourcesContent":["import { Component } from 'inferno';\r\n\r\nimport ValidatedInput from 'dmn-js-shared/lib/components/ValidatedInput';\r\n\r\nimport InputSelect from 'dmn-js-shared/lib/components/InputSelect';\r\n\r\nimport {\r\n  getDateString,\r\n  getSampleDate,\r\n  validateISOString,\r\n  parseString\r\n} from '../Utils';\r\n\r\nconst EXACT = 'exact',\r\n      BEFORE = 'before',\r\n      AFTER = 'after',\r\n      BETWEEN = 'between';\r\n\r\n\r\nexport default class InputDateEdit extends Component {\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this._modeling = context.injector.get('modeling');\r\n\r\n    const { element } = this.props.context;\r\n\r\n    const parsedString = parseString(element.businessObject.text);\r\n\r\n    if (parsedString) {\r\n      let dates;\r\n\r\n      if (parsedString.date) {\r\n        dates = [ parsedString.date, '' ];\r\n      } else if (parsedString.dates) {\r\n        dates = parsedString.dates;\r\n      } else {\r\n        dates = [ '', '' ];\r\n      }\r\n\r\n      this.state = {\r\n        type: parsedString.type,\r\n        dates\r\n      };\r\n    } else {\r\n      this.state = {\r\n        type: EXACT,\r\n        dates: [ '', '' ]\r\n      };\r\n    }\r\n\r\n    const debounceInput = context.injector.get('debounceInput');\r\n\r\n    this.debouncedEditCell = debounceInput(this.editCell.bind(this));\r\n    this.editCell = this.editCell.bind(this);\r\n\r\n    this.onTypeChange = this.onTypeChange.bind(this);\r\n    this.onSetStartDateTodayClick = this.onSetStartDateTodayClick.bind(this);\r\n    this.onSetEndDateTodayClick = this.onSetEndDateTodayClick.bind(this);\r\n    this.onStartDateInput = this.onStartDateInput.bind(this);\r\n    this.onEndDateInput = this.onEndDateInput.bind(this);\r\n  }\r\n\r\n  editCell(cell, text) {\r\n    this._modeling.editCell(cell, text);\r\n  }\r\n\r\n  onTypeChange(value) {\r\n    const { element } = this.props.context;\r\n\r\n    const { dates } = this.state;\r\n\r\n    this.setState({\r\n      type: value\r\n    });\r\n\r\n    if (parseString(getDateString(value, dates))) {\r\n      this.editCell(element.businessObject, getDateString(value, dates));\r\n    }\r\n  }\r\n\r\n  onSetStartDateTodayClick() {\r\n    const { element } = this.props.context;\r\n\r\n    const { dates, type } = this.state;\r\n\r\n    const date = getSampleDate();\r\n\r\n    this.setState({\r\n      dates: [ date, dates[1] ]\r\n    });\r\n\r\n    if (parseString(getDateString(type, [ date, dates[1] ]))) {\r\n      this.editCell(element.businessObject, getDateString(type, [ date, dates[1] ]));\r\n    }\r\n  }\r\n\r\n  onSetEndDateTodayClick() {\r\n    const { element } = this.props.context;\r\n\r\n    const { dates, type } = this.state;\r\n\r\n    const date = getSampleDate();\r\n\r\n    this.setState({\r\n      dates: [ dates[0], date ]\r\n    });\r\n\r\n    if (parseString(getDateString(type, [ dates[0], date ]))) {\r\n      this.editCell(element.businessObject, getDateString(type, [ dates[0], date ]));\r\n    }\r\n  }\r\n\r\n  onStartDateInput({ isValid, value }) {\r\n    if (isValid) {\r\n      const { element } = this.props.context;\r\n\r\n      const { dates, type } = this.state;\r\n\r\n      this.setState({\r\n        dates: [ value, dates[1] ]\r\n      });\r\n\r\n      this.debouncedEditCell(\r\n        element.businessObject,\r\n        getDateString(type, [ value, dates[1] ])\r\n      );\r\n\r\n    }\r\n  }\r\n\r\n  onEndDateInput({ isValid, value }) {\r\n    if (isValid) {\r\n      const { element } = this.props.context;\r\n\r\n      const { dates, type } = this.state;\r\n\r\n      this.setState({\r\n        dates: [ dates[0], value ]\r\n      });\r\n\r\n      this.debouncedEditCell(\r\n        element.businessObject,\r\n        getDateString(type, [ dates[0], value ])\r\n      );\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { dates, type } = this.state;\r\n\r\n    const options = [{\r\n      label: 'Exactly',\r\n      value: EXACT\r\n    }, {\r\n      label: 'Before',\r\n      value: BEFORE\r\n    }, {\r\n      label: 'After',\r\n      value: AFTER\r\n    }, {\r\n      label: 'Between',\r\n      value: BETWEEN\r\n    }];\r\n\r\n    return (\r\n      <div class=\"context-menu-container simple-date-edit\">\r\n\r\n        <h3 class=\"dms-heading\">Edit Date</h3>\r\n\r\n        <div className=\"dms-fill-row\">\r\n          <InputSelect\r\n            noInput={ true }\r\n            onChange={ this.onTypeChange }\r\n            options={ options }\r\n            value={ type } />\r\n        </div>\r\n\r\n        <h4 class=\"dms-heading\">\r\n          {\r\n            type === BETWEEN\r\n              ? 'Edit Start Date'\r\n              : 'Set Date'\r\n          }\r\n        </h4>\r\n\r\n        <div>\r\n          <ValidatedInput\r\n            className=\"start-date-input dms-block\"\r\n            onInput={ this.onStartDateInput }\r\n            placeholder={ `e.g. ${ getSampleDate() }` }\r\n            validate={ validateISOString }\r\n            value={ dates[0] } />\r\n\r\n          <p className=\"dms-hint\">\r\n            <a href=\"#\"\r\n              className=\"use-today\"\r\n              onClick={ this.onSetStartDateTodayClick }>Use today</a>.\r\n          </p>\r\n        </div>\r\n\r\n        {\r\n          type === BETWEEN\r\n            && <h4 class=\"dms-heading\">\r\n              Edit End Date\r\n            </h4>\r\n        }\r\n\r\n        {\r\n          type === BETWEEN\r\n            && <div>\r\n              <ValidatedInput\r\n                className=\"end-date-input dms-block\"\r\n                onInput={ this.onEndDateInput }\r\n                placeholder={ `e.g. ${ getSampleDate() }` }\r\n                validate={ validateISOString }\r\n                value={ dates[1] }>\r\n              </ValidatedInput>\r\n\r\n              <p className=\"dms-hint\">\r\n                <a href=\"#\"\r\n                  className=\"use-today\"\r\n                  onClick={ this.onSetEndDateTodayClick }>Use today</a>.\r\n              </p>\r\n            </div>\r\n        }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}"]}