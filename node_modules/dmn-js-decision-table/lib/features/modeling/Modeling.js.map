{"version":3,"sources":["../../../src/features/modeling/Modeling.js"],"names":["assign","BaseModeling","UpdateAllowedValuesHandler","UpdatePropertiesHandler","IdClaimHandler","Modeling","eventBus","elementFactory","commandStack","sheet","_eventBus","_elementFactory","_commandStack","_sheet","_getHandlers","name","root","getRoot","businessObject","parentBusinessObject","$parent","context","element","properties","execute","id","hitPolicy","aggregation","el","props","inputExpression","output","typeRef","cell","text","rule","description","allowedValues","expressionLanguage","moddleElement","claiming","$inject"],"mappings":"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","file":"Modeling.js","sourcesContent":["import { assign } from 'min-dash';\r\n\r\nimport BaseModeling from 'table-js/lib/features/modeling/Modeling';\r\n\r\nimport UpdateAllowedValuesHandler from './cmd/UpdateAllowedValuesHandler';\r\nimport UpdatePropertiesHandler\r\n  from 'dmn-js-shared/lib/features/modeling/cmd/UpdatePropertiesHandler';\r\nimport IdClaimHandler from './cmd/IdClaimHandler';\r\n\r\n\r\nexport default class Modeling extends BaseModeling {\r\n\r\n  constructor(eventBus, elementFactory, commandStack, sheet) {\r\n    super(eventBus, elementFactory, commandStack);\r\n\r\n    this._eventBus = eventBus;\r\n    this._elementFactory = elementFactory;\r\n    this._commandStack = commandStack;\r\n    this._sheet = sheet;\r\n  }\r\n\r\n  getHandlers() {\r\n    return Modeling._getHandlers();\r\n  }\r\n\r\n  static _getHandlers() {\r\n    return assign({}, super._getHandlers(), {\r\n      'editAllowedValues': UpdateAllowedValuesHandler,\r\n      'updateProperties': UpdatePropertiesHandler,\r\n      'id.updateClaim': IdClaimHandler\r\n    });\r\n  }\r\n\r\n  editDecisionTableName(name) {\r\n    const root = this._sheet.getRoot(),\r\n          businessObject = root.businessObject,\r\n          parentBusinessObject = businessObject.$parent;\r\n\r\n    const context = {\r\n      element: parentBusinessObject,\r\n      properties: {\r\n        name\r\n      }\r\n    };\r\n\r\n    this._commandStack.execute('updateProperties', context);\r\n  }\r\n\r\n  editDecisionTableId(id) {\r\n    const root = this._sheet.getRoot(),\r\n          businessObject = root.businessObject,\r\n          parentBusinessObject = businessObject.$parent;\r\n\r\n    const context = {\r\n      element: parentBusinessObject,\r\n      properties: {\r\n        id\r\n      }\r\n    };\r\n\r\n    this._commandStack.execute('updateProperties', context);\r\n  }\r\n\r\n  editHitPolicy(hitPolicy, aggregation) {\r\n    const root = this._sheet.getRoot(),\r\n          businessObject = root.businessObject;\r\n\r\n    const context = {\r\n      element: businessObject,\r\n      properties: {\r\n        hitPolicy,\r\n        aggregation\r\n      }\r\n    };\r\n\r\n    this._commandStack.execute('updateProperties', context);\r\n  }\r\n\r\n  updateProperties(el, props) {\r\n    const context = {\r\n      element: el,\r\n      properties: props\r\n    };\r\n\r\n    this._commandStack.execute('updateProperties', context);\r\n  }\r\n\r\n  editInputExpression(inputExpression, props) {\r\n    const context = {\r\n      element: inputExpression,\r\n      properties: props\r\n    };\r\n\r\n    this._commandStack.execute('updateProperties', context);\r\n  }\r\n\r\n  editOutputName(output, name) {\r\n    const context = {\r\n      element: output,\r\n      properties: {\r\n        name\r\n      }\r\n    };\r\n\r\n    this._commandStack.execute('updateProperties', context);\r\n  }\r\n\r\n  editInputExpressionTypeRef(inputExpression, typeRef) {\r\n    const context = {\r\n      element: inputExpression,\r\n      properties: {\r\n        typeRef\r\n      }\r\n    };\r\n\r\n    this._commandStack.execute('updateProperties', context);\r\n  }\r\n\r\n  editOutputTypeRef(output, typeRef) {\r\n    const context = {\r\n      element: output,\r\n      properties: {\r\n        typeRef\r\n      }\r\n    };\r\n\r\n    this._commandStack.execute('updateProperties', context);\r\n  }\r\n\r\n  editCell(cell, text) {\r\n    const context = {\r\n      element: cell,\r\n      properties: {\r\n        text\r\n      }\r\n    };\r\n\r\n    this._commandStack.execute('updateProperties', context);\r\n  }\r\n\r\n  editAnnotation(rule, description) {\r\n    const context = {\r\n      element: rule,\r\n      properties: {\r\n        description\r\n      }\r\n    };\r\n\r\n    this._commandStack.execute('updateProperties', context);\r\n  }\r\n\r\n  editAllowedValues(element, allowedValues) {\r\n    const context = {\r\n      element,\r\n      allowedValues\r\n    };\r\n\r\n    this._commandStack.execute('editAllowedValues', context);\r\n  }\r\n\r\n  editExpressionLanguage(element, expressionLanguage) {\r\n    const context = {\r\n      element,\r\n      properties: {\r\n        expressionLanguage\r\n      }\r\n    };\r\n\r\n    this._commandStack.execute('updateProperties', context);\r\n  }\r\n\r\n  claimId(id, moddleElement) {\r\n    const context = {\r\n      id: id,\r\n      element: moddleElement,\r\n      claiming: true\r\n    };\r\n\r\n    this._commandStack.execute('id.updateClaim', context);\r\n  }\r\n\r\n  unclaimId(id, moddleElement) {\r\n    const context = {\r\n      id: id,\r\n      element: moddleElement\r\n    };\r\n\r\n    this._commandStack.execute('id.updateClaim', context);\r\n  }\r\n}\r\n\r\nModeling.$inject = [ 'eventBus', 'elementFactory', 'commandStack', 'sheet' ];"]}