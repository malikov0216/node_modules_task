{"version":3,"sources":["../../../../src/features/modeling/cmd/UpdateAllowedValuesHandler.js"],"names":["is","UpdateAllowedValuesHandler","dmnFactory","moddle","modeling","_dmnFactory","_moddle","_modeling","context","element","allowedValues","isInput","inputValues","oldAllowedValues","text","isNull","create","join","outputValues","$inject","value"],"mappings":"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","file":"UpdateAllowedValuesHandler.js","sourcesContent":["import { is } from 'dmn-js-shared/lib/util/ModelUtil';\n\n/**\n * A handler that implements adding/removing allowed values.\n */\nexport default class UpdateAllowedValuesHandler {\n\n  constructor(dmnFactory, moddle, modeling) {\n    this._dmnFactory = dmnFactory;\n    this._moddle = moddle;\n    this._modeling = modeling;\n  }\n\n  /**\n   * <do>\n   */\n  execute(context) {\n    const {\n      element,\n      allowedValues\n    } = context;\n\n    const isInput = is(element, 'dmn:InputClause');\n\n    if (isInput) {\n\n      if (element.inputValues) {\n        context.oldAllowedValues = element.inputValues.text;\n      } else {\n\n        if (!isNull(allowedValues)) {\n          element.inputValues = this._dmnFactory.create('dmn:UnaryTests', {\n            text: ''\n          });\n        }\n\n      }\n\n      if (isNull(allowedValues)) {\n        if (element.inputValues) {\n          delete element.inputValues;\n        }\n      } else {\n        element.inputValues.text = allowedValues.join(',');\n      }\n\n    } else {\n\n      if (element.outputValues && element) {\n        context.oldAllowedValues = element.outputValues.text;\n      } else {\n\n        if (!isNull(allowedValues)) {\n          element.outputValues = this._dmnFactory.create('dmn:UnaryTests', {\n            text: ''\n          });\n        }\n\n      }\n\n      if (isNull(allowedValues)) {\n        if (element.outputValues) {\n          delete element.outputValues;\n        }\n      } else {\n        element.outputValues.text = allowedValues.join(',');\n      }\n\n\n    }\n\n    return element;\n  }\n\n\n  /**\n   * <undo>\n   */\n  revert(context) {\n    const {\n      element,\n      oldAllowedValues\n    } = context;\n\n    const isInput = is(element, 'dmn:InputClause');\n\n    if (isInput) {\n\n      if (oldAllowedValues) {\n\n        if (!element.inputValues) {\n          element.inputValues = this._dmnFactory.create('dmn:UnaryTests', {\n            text: ''\n          });\n        }\n\n        element.inputValues.text = oldAllowedValues;\n\n      } else {\n        delete element.inputValues;\n      }\n\n    } else {\n\n      if (oldAllowedValues) {\n\n        if (!element.outputValues) {\n          element.outputValues = this._dmnFactory.create('dmn:UnaryTests', {\n            text: ''\n          });\n        }\n\n        element.outputValues.text = oldAllowedValues;\n\n      } else {\n        delete element.outputValues;\n      }\n\n    }\n\n    return element;\n  }\n\n}\n\nUpdateAllowedValuesHandler.$inject = [\n  'dmnFactory',\n  'moddle',\n  'modeling'\n];\n\n\n// helpers //////////////////////\n\nfunction isNull(value) {\n  return value === null;\n}"]}