{"version":3,"sources":["../../../src/features/context-menu/ContextMenu.js"],"names":["is","Cell","ContextMenu","components","contextMenu","clipboard","editorActions","eventBus","elementRegistry","modeling","sheet","rules","_contextMenu","_clipboard","_editorActions","_elementRegistry","_eventBus","_modeling","_sheet","_rules","_getEntries","bind","onGetComponent","context","contextMenuType","entries","element","get","id","additionalCellEntries","isCell","getComponents","length","cellEntriesGroup","concat","on","event","node","preventDefault","open","x","pageX","y","pageY","handlers","addRuleAbove","rule","trigger","close","addRuleBelow","removeRule","addInputLeft","input","addInputRight","removeInput","addOutputLeft","output","addOutputRight","removeOutput","copy","cut","pasteBefore","pasteAfter","clipboardData","row","canPaste","allowed","data","elements","target","push","col","actualElement","canRemove","$inject"],"mappings":"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","file":"ContextMenu.js","sourcesContent":["/* eslint-disable max-len */\r\n\r\nimport { is } from 'dmn-js-shared/lib/util/ModelUtil';\r\n\r\nimport { Cell } from 'table-js/lib/model';\r\n\r\nexport default class ContextMenu {\r\n  constructor(\r\n      components,\r\n      contextMenu,\r\n      clipboard,\r\n      editorActions,\r\n      eventBus,\r\n      elementRegistry,\r\n      modeling,\r\n      sheet,\r\n      rules) {\r\n\r\n    this._contextMenu = contextMenu;\r\n    this._clipboard = clipboard;\r\n    this._editorActions = editorActions;\r\n    this._elementRegistry = elementRegistry;\r\n    this._eventBus = eventBus;\r\n    this._modeling = modeling;\r\n    this._sheet = sheet;\r\n    this._rules = rules;\r\n\r\n    this._getEntries = this._getEntries.bind(this);\r\n\r\n    components.onGetComponent('context-menu', (context = {}) => {\r\n      if (context.contextMenuType && context.contextMenuType === 'context-menu') {\r\n        const entries = this._getEntries(context);\r\n\r\n        const element = this._elementRegistry.get(context.id);\r\n\r\n        const additionalCellEntries = isCell(element)\r\n          && components.getComponents('context-menu-cell-additional', context);\r\n\r\n        if (additionalCellEntries && additionalCellEntries.length) {\r\n          const cellEntriesGroup = (\r\n            <div className=\"context-menu-group context-menu-group-cell\">\r\n              <h4 className=\"context-menu-group-title\">Cell</h4>\r\n              { additionalCellEntries }\r\n            </div>\r\n          );\r\n\r\n          return () => (\r\n            <div className=\"context-menu-flex\">\r\n              { (entries || []).concat([ cellEntriesGroup ]) }\r\n            </div>\r\n          );\r\n        } else {\r\n          return () => (\r\n            <div className=\"context-menu-flex\">\r\n              { entries || [] }\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    eventBus.on('cell.contextmenu', ({ event, id, node }) => {\r\n      event.preventDefault();\r\n\r\n      contextMenu.open({\r\n        x: event.pageX,\r\n        y: event.pageY\r\n      }, {\r\n        contextMenuType: 'context-menu',\r\n        id\r\n      });\r\n    });\r\n  }\r\n\r\n  _getEntries(context) {\r\n    const handlers = {\r\n      addRuleAbove: (rule) => {\r\n        this._editorActions.trigger('addRuleAbove', { rule });\r\n\r\n        this._contextMenu.close();\r\n      },\r\n      addRuleBelow: (rule) => {\r\n        this._editorActions.trigger('addRuleBelow', { rule });\r\n\r\n        this._contextMenu.close();\r\n      },\r\n      removeRule: (rule) => {\r\n        this._editorActions.trigger('removeRule', { rule });\r\n\r\n        this._contextMenu.close();\r\n      },\r\n      addInputLeft: (input) => {\r\n        this._editorActions.trigger('addInputLeft', { input });\r\n\r\n        this._contextMenu.close();\r\n      },\r\n      addInputRight: (input) => {\r\n        this._editorActions.trigger('addInputRight', { input });\r\n\r\n        this._contextMenu.close();\r\n      },\r\n      removeInput: (input) => {\r\n        this._editorActions.trigger('removeInput', { input });\r\n\r\n        this._contextMenu.close();\r\n      },\r\n      addOutputLeft: (output) => {\r\n        this._editorActions.trigger('addOutputLeft', { output });\r\n\r\n        this._contextMenu.close();\r\n      },\r\n      addOutputRight: (output) => {\r\n        this._editorActions.trigger('addOutputRight', { output });\r\n\r\n        this._contextMenu.close();\r\n      },\r\n      removeOutput: (output) => {\r\n        this._editorActions.trigger('removeOutput', { output });\r\n\r\n        this._contextMenu.close();\r\n      },\r\n      copy: element => {\r\n        this._editorActions.trigger('copy', { element });\r\n\r\n        this._contextMenu.close();\r\n      },\r\n      cut: element => {\r\n        this._editorActions.trigger('cut', { element });\r\n\r\n        this._contextMenu.close();\r\n      },\r\n      pasteBefore: element => {\r\n        this._editorActions.trigger('pasteBefore', { element });\r\n\r\n        this._contextMenu.close();\r\n      },\r\n      pasteAfter: element => {\r\n        this._editorActions.trigger('pasteAfter', { element });\r\n\r\n        this._contextMenu.close();\r\n      }\r\n    };\r\n\r\n    const id = context && context.id;\r\n\r\n    if (!id) {\r\n      return null;\r\n    }\r\n\r\n    const element = this._elementRegistry.get(id);\r\n\r\n    if (!element) {\r\n      return null;\r\n    }\r\n\r\n    const clipboardData = this._clipboard.get() || {};\r\n\r\n    const entries = [];\r\n\r\n    if (is(element.row, 'dmn:DecisionRule')) {\r\n      const canPaste = this._rules.allowed('paste', {\r\n        data: clipboardData.elements,\r\n        target: element.row\r\n      });\r\n\r\n      entries.push(\r\n        <div className=\"context-menu-group context-menu-group-rule\">\r\n          <h4 className=\"context-menu-group-title\">Rule</h4>\r\n          <div\r\n            className=\"context-menu-group-entry context-menu-entry-add-rule-above\"\r\n            onClick={ () => handlers.addRuleAbove(element.row) }>\r\n            <span className=\"context-menu-group-entry-icon dmn-icon-up\"></span>\r\n            Add Above\r\n          </div>\r\n          <div\r\n            className=\"context-menu-group-entry context-menu-entry-add-rule-below\"\r\n            onClick={ () => handlers.addRuleBelow(element.row) }>\r\n            <span className=\"context-menu-group-entry-icon dmn-icon-down\"></span>\r\n            Add Below\r\n          </div>\r\n          <div\r\n            className=\"context-menu-group-entry context-menu-entry-remove-rule\"\r\n            onClick={ () => handlers.removeRule(element.row) }>\r\n            <span className=\"context-menu-group-entry-icon dmn-icon-clear\"></span>\r\n            Remove\r\n          </div>\r\n          <div\r\n            className=\"context-menu-group-entry context-menu-entry-copy-rule\"\r\n            onClick={ () => handlers.copy(element.row) }>\r\n            <span className=\"context-menu-group-entry-icon dmn-icon-copy\"></span>\r\n            Copy\r\n          </div>\r\n          <div\r\n            className=\"context-menu-group-entry context-menu-entry-cut-rule\"\r\n            onClick={ () => handlers.cut(element.row) }>\r\n            <span className=\"context-menu-group-entry-icon dmn-icon-cut\"></span>\r\n            Cut\r\n          </div>\r\n          <div\r\n            className={ `context-menu-group-entry ${ canPaste ? '' : 'disabled' } context-menu-entry-paste-rule-above` }\r\n            onClick={ () => handlers.pasteBefore(element.row) }>\r\n            <span className=\"context-menu-group-entry-icon dmn-icon-paste\"></span>\r\n            Paste Above\r\n          </div>\r\n          <div\r\n            className={ `context-menu-group-entry ${ canPaste ? '' : 'disabled' } context-menu-entry-paste-rule-below` }\r\n            onClick={ () => handlers.pasteAfter(element.row) }>\r\n            <span className=\"context-menu-group-entry-icon dmn-icon-paste\"></span>\r\n            Paste Below\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (is(element, 'dmn:InputClause') || is(element.col, 'dmn:InputClause')) {\r\n      const actualElement = is(element, 'dmn:InputClause') ? element : element.col;\r\n\r\n      const canRemove = this._rules.allowed('col.remove', {\r\n        col: element.col || element\r\n      });\r\n\r\n      const canPaste = this._rules.allowed('paste', {\r\n        data: clipboardData.elements,\r\n        target: element.col || element\r\n      });\r\n\r\n      entries.push(\r\n        <div className=\"context-menu-group context-menu-group-input\">\r\n          <h4 className=\"context-menu-group-title\">Input</h4>\r\n          <div\r\n            className=\"context-menu-group-entry context-menu-entry-add-input-left\"\r\n            onClick={ () => handlers.addInputLeft(actualElement) }>\r\n            <span className=\"context-menu-group-entry-icon dmn-icon-left\"></span>\r\n            Add Left\r\n          </div>\r\n          <div\r\n            className=\"context-menu-group-entry context-menu-entry-add-input-right\"\r\n            onClick={ () => handlers.addInputRight(actualElement) }>\r\n            <span className=\"context-menu-group-entry-icon dmn-icon-right\"></span>\r\n            Add Right\r\n          </div>\r\n          <div\r\n            className={ `context-menu-group-entry ${ canRemove ? '' : 'disabled' } context-menu-entry-remove-input` }\r\n            onClick={ () => handlers.removeInput(actualElement) }>\r\n            <span className=\"context-menu-group-entry-icon dmn-icon-clear\"></span>\r\n            Remove\r\n          </div>\r\n          <div\r\n            className=\"context-menu-group-entry context-menu-entry-copy-input\"\r\n            onClick={ () => handlers.copy(actualElement) }>\r\n            <span className=\"context-menu-group-entry-icon dmn-icon-copy\"></span>\r\n            Copy\r\n          </div>\r\n          <div\r\n            className={ `context-menu-group-entry ${ canRemove ? '' : 'disabled' } context-menu-entry-cut-input` }\r\n            onClick={ () => handlers.cut(actualElement) }>\r\n            <span className=\"context-menu-group-entry-icon dmn-icon-cut\"></span>\r\n            Cut\r\n          </div>\r\n          <div\r\n            className={ `context-menu-group-entry ${ canPaste ? '' : 'disabled' } context-menu-entry-paste-input-left` }\r\n            onClick={ () => handlers.pasteBefore(actualElement) }>\r\n            <span className=\"context-menu-group-entry-icon dmn-icon-paste\"></span>\r\n            Paste Left\r\n          </div>\r\n          <div\r\n            className={ `context-menu-group-entry ${ canPaste ? '' : 'disabled' } context-menu-entry-paste-input-right` }\r\n            onClick={ () => handlers.pasteAfter(actualElement) }>\r\n            <span className=\"context-menu-group-entry-icon dmn-icon-paste\"></span>\r\n            Paste Right\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (is(element, 'dmn:OutputClause') || is(element.col, 'dmn:OutputClause')) {\r\n      const actualElement = is(element, 'dmn:OutputClause') ? element : element.col;\r\n\r\n      const canRemove = this._rules.allowed('col.remove', {\r\n        col: element.col || element\r\n      });\r\n\r\n      const canPaste = this._rules.allowed('paste', {\r\n        data: clipboardData.elements,\r\n        target: element.col || element\r\n      });\r\n\r\n      entries.push(\r\n        <div className=\"context-menu-group context-menu-group-output\">\r\n          <h4 className=\"context-menu-group-title\">Output</h4>\r\n          <div\r\n            className=\"context-menu-group-entry context-menu-entry-add-output-left\"\r\n            onClick={ () => handlers.addOutputLeft(actualElement) }>\r\n            <span className=\"context-menu-group-entry-icon dmn-icon-left\"></span>\r\n            Add Left\r\n          </div>\r\n          <div\r\n            className=\"context-menu-group-entry context-menu-entry-add-output-right\"\r\n            onClick={ () => handlers.addOutputRight(actualElement) }>\r\n            <span className=\"context-menu-group-entry-icon dmn-icon-right\"></span>\r\n            Add Right\r\n          </div>\r\n          <div\r\n            className={ `context-menu-group-entry ${ canRemove ? '' : 'disabled' } context-menu-entry-remove-output` }\r\n            onClick={ () => handlers.removeOutput(actualElement) }>\r\n            <span className=\"context-menu-group-entry-icon dmn-icon-clear\"></span>\r\n            Remove\r\n          </div>\r\n          <div\r\n            className=\"context-menu-group-entry context-menu-entry-copy-output\"\r\n            onClick={ () => handlers.copy(actualElement) }>\r\n            <span className=\"context-menu-group-entry-icon dmn-icon-copy\"></span>\r\n            Copy\r\n          </div>\r\n          <div\r\n            className={ `context-menu-group-entry ${ canRemove ? '' : 'disabled' } context-menu-entry-cut-output` }\r\n            onClick={ () => handlers.cut(actualElement) }>\r\n            <span className=\"context-menu-group-entry-icon dmn-icon-cut\"></span>\r\n            Cut\r\n          </div>\r\n          <div\r\n            className={ `context-menu-group-entry ${ canPaste ? '' : 'disabled' } context-menu-entry-paste-output-left` }\r\n            onClick={ () => handlers.pasteBefore(actualElement) }>\r\n            <span className=\"context-menu-group-entry-icon dmn-icon-paste\"></span>\r\n            Paste Left\r\n          </div>\r\n          <div\r\n            className={ `context-menu-group-entry ${ canPaste ? '' : 'disabled' } context-menu-entry-paste-output-right` }\r\n            onClick={ () => handlers.pasteAfter(actualElement) }>\r\n            <span className=\"context-menu-group-entry-icon dmn-icon-paste\"></span>\r\n            Paste Right\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return entries;\r\n  }\r\n}\r\n\r\nContextMenu.$inject = [\r\n  'components',\r\n  'contextMenu',\r\n  'clipboard',\r\n  'editorActions',\r\n  'eventBus',\r\n  'elementRegistry',\r\n  'modeling',\r\n  'sheet',\r\n  'rules'\r\n];\r\n\r\n// helpers ///////////\r\n\r\nfunction isCell(element) {\r\n  return element instanceof Cell;\r\n}"]}