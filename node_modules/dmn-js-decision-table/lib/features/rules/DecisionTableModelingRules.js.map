{"version":3,"sources":["../../../src/features/rules/DecisionTableModelingRules.js"],"names":["every","Row","Col","isInput","isOutput","RuleProvider","HIGH_PRIORITY","DecisionTableModelingRules","eventBus","sheet","_sheet","addRule","col","index","getRoot","businessObject","input","length","cols","filter","c","data","target","root","canPasteRows","canPasteCols","descriptor","type","cells","cellDescriptor","$type","targetCol","rows","$inject"],"mappings":"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","file":"DecisionTableModelingRules.js","sourcesContent":["import {\r\n  every\r\n} from 'min-dash';\r\n\r\nimport { Row, Col } from 'table-js/lib/model';\r\n\r\nimport { isInput, isOutput } from 'dmn-js-shared/lib/util/ModelUtil';\r\n\r\nimport RuleProvider from 'diagram-js/lib/features/rules/RuleProvider';\r\n\r\nconst HIGH_PRIORITY = 2000;\r\n\r\nexport default class DecisionTableModelingRules extends RuleProvider {\r\n\r\n  constructor(eventBus, sheet) {\r\n    super(eventBus);\r\n\r\n    this._sheet = sheet;\r\n  }\r\n\r\n  init() {\r\n    this.addRule('col.move', HIGH_PRIORITY, ({ col, index }) => {\r\n      const { businessObject } = this._sheet.getRoot(),\r\n            { input } = businessObject;\r\n\r\n      if (isInput(col)) {\r\n        return index < input.length;\r\n      } else {\r\n        return index >= input.length;\r\n      }\r\n    });\r\n\r\n    this.addRule('col.remove', HIGH_PRIORITY, ({ col }) => {\r\n      const { cols } = this._sheet.getRoot();\r\n\r\n      if (isOutput(col)) {\r\n        return cols.filter(c => isOutput(c)).length > 1;\r\n      }\r\n\r\n      return true;\r\n    });\r\n\r\n    // a rule that is aware of the data structure coming from copy and paste\r\n    this.addRule('paste', HIGH_PRIORITY, ({ data, target }) => {\r\n      if (!data || !target) {\r\n        return false;\r\n      }\r\n\r\n      const { root } = data;\r\n\r\n      if (target instanceof Row) {\r\n        return this.canPasteRows(root);\r\n      }\r\n\r\n      if (target instanceof Col) {\r\n        return this.canPasteCols(root, target);\r\n      }\r\n\r\n      return false;\r\n    });\r\n  }\r\n\r\n  canPasteRows(root) {\r\n    const { cols } = this._sheet.getRoot();\r\n\r\n    return every(root, descriptor => {\r\n      if (descriptor.type !== 'row') {\r\n        return false;\r\n      }\r\n\r\n      if (descriptor.cells.length !== cols.length) {\r\n        return false;\r\n      }\r\n\r\n      return every(descriptor.cells, (cellDescriptor, index) => {\r\n        if (isInput(cols[index])) {\r\n          return cellDescriptor.businessObject.$type === 'dmn:UnaryTests';\r\n        } else {\r\n          return cellDescriptor.businessObject.$type === 'dmn:LiteralExpression';\r\n        }\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  canPasteCols(root, targetCol) {\r\n    const { rows } = this._sheet.getRoot();\r\n\r\n    return every(root, descriptor => {\r\n      if (descriptor.type !== 'col') {\r\n        return false;\r\n      }\r\n\r\n      if (descriptor.cells.length !== rows.length) {\r\n        return false;\r\n      }\r\n\r\n      if (isInput(targetCol)) {\r\n        return descriptor.businessObject.$type === 'dmn:InputClause';\r\n      } else {\r\n        return descriptor.businessObject.$type === 'dmn:OutputClause';\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nDecisionTableModelingRules.$inject = [ 'eventBus', 'sheet' ];"]}