{"version":3,"sources":["../../../../src/features/add-input-output/components/AddOutput.js"],"names":["Component","AddOutput","props","context","onElementsChanged","forceUpdate","handleClick","e","stopPropagation","add","_eventBus","fire","_sheet","injector","get","_changeSupport","changeSupport","root","getRoot","id","offElementsChanged","businessObject","colspan","output","length"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,SAA1B;;IAGqBC,S;;;AAEnB,qBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,sHACpBD,KADoB,EACbC,OADa;;AAAA,UAS5BC,iBAT4B,GASR,YAAM;AACxB,YAAKC,WAAL;AACD,KAX2B;;AAAA,UA6B5BC,WA7B4B,GA6Bd,UAACC,CAAD,EAAO;AACnBA,QAAEC,eAAF;;AAEA,YAAKC,GAAL;AACD,KAjC2B;;AAAA,UAmC5BA,GAnC4B,GAmCtB,YAAM;AACV,YAAKC,SAAL,CAAeC,IAAf,CAAoB,WAApB;AACD,KArC2B;;AAG1B,UAAKC,MAAL,GAAcT,QAAQU,QAAR,CAAiBC,GAAjB,CAAqB,OAArB,CAAd;AACA,UAAKJ,SAAL,GAAiBP,QAAQU,QAAR,CAAiBC,GAAjB,CAAqB,UAArB,CAAjB;;AAEA,UAAKC,cAAL,GAAsBZ,QAAQa,aAA9B;AAN0B;AAO3B;;;;yCAMoB;AACnB,UAAMC,OAAO,KAAKC,OAAL,EAAb;;AAEA,WAAKH,cAAL,CAAoBX,iBAApB,CAAsCa,KAAKE,EAA3C,EAA+C,KAAKf,iBAApD;AACD;;;2CAEsB;AACrB,UAAMa,OAAO,KAAKC,OAAL,EAAb;;AAEA,WAAKH,cAAL,CAAoBK,kBAApB,CAAuCH,KAAKE,EAA5C,EAAgD,KAAKf,iBAArD;AACD;;;8BAES;AACR,aAAO,KAAKQ,MAAL,CAAYM,OAAZ,EAAP;AACD;;;6BAYQ;AAAA,qBAIH,KAAKA,OAAL,EAJG;AAAA,UAGLG,cAHK,YAGLA,cAHK;;AAMP,UAAMC,UAAUD,eAAeE,MAAf,CAAsBC,MAAtC;;AAEA,kCAEc,wDAFd,sDAOgB,sCAPhB;AAAA,iBAQY;AARZ;AAAA,mBAGc,KAAKlB,WAHnB;AAAA,mBAIcgB;AAJd;AAYD;;;;EA7DoCtB,S;;eAAlBC,S","file":"AddOutput.js","sourcesContent":["import { Component } from 'inferno';\n\n\nexport default class AddOutput extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    this._sheet = context.injector.get('sheet');\n    this._eventBus = context.injector.get('eventBus');\n\n    this._changeSupport = context.changeSupport;\n  }\n\n  onElementsChanged = () => {\n    this.forceUpdate();\n  }\n\n  componentWillMount() {\n    const root = this.getRoot();\n\n    this._changeSupport.onElementsChanged(root.id, this.onElementsChanged);\n  }\n\n  componentWillUnmount() {\n    const root = this.getRoot();\n\n    this._changeSupport.offElementsChanged(root.id, this.onElementsChanged);\n  }\n\n  getRoot() {\n    return this._sheet.getRoot();\n  }\n\n  handleClick = (e) => {\n    e.stopPropagation();\n\n    this.add();\n  }\n\n  add = () => {\n    this._eventBus.fire('addOutput');\n  }\n\n  render() {\n\n    const {\n      businessObject\n    } = this.getRoot();\n\n    const colspan = businessObject.output.length;\n\n    return (\n      <th\n        className=\"output-cell outputs-label add-output actionable header\"\n        onClick={ this.handleClick }\n        colspan={ colspan }\n      >\n        Output <span\n          className=\"add-output dmn-icon-plus action-icon\"\n          title=\"Add Output\"\n        ></span>\n      </th>\n    );\n  }\n\n}"]}