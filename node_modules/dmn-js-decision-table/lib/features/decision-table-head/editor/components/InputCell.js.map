{"version":3,"sources":["../../../../../src/features/decision-table-head/editor/components/InputCell.js"],"names":["Component","mixin","ComponentWithSlots","InputCell","props","context","onClick","event","input","_eventBus","fire","onContextmenu","id","onElementsChanged","forceUpdate","injector","_changeSupport","changeSupport","_sheet","get","_elementRegistry","root","getRoot","offElementsChanged","inputExpression","label","inputVariable","expressionLanguage","showLanguageBadge","slotFills","type","cellType","col","text"],"mappings":"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","file":"InputCell.js","sourcesContent":["import { Component } from 'inferno';\n\nimport {\n  mixin\n} from 'table-js/lib/components';\n\nimport {\n  ComponentWithSlots\n} from 'dmn-js-shared/lib/components/mixins';\n\n\nexport default class InputCell extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    mixin(this, ComponentWithSlots);\n  }\n\n  onClick = (event) => {\n    const { input } = this.props;\n\n    this._eventBus.fire('input.edit', {\n      event,\n      input\n    });\n  }\n\n  onContextmenu = (event) => {\n    const { id } = this.props.input;\n\n    this._eventBus.fire('cell.contextmenu', {\n      event,\n      id\n    });\n  }\n\n  onElementsChanged = () => {\n    this.forceUpdate();\n  }\n\n  componentWillMount() {\n    const { injector } = this.context;\n\n    this._changeSupport = this.context.changeSupport;\n    this._sheet = injector.get('sheet');\n    this._eventBus = injector.get('eventBus');\n    this._elementRegistry = injector.get('elementRegistry');\n\n    const root = this._sheet.getRoot();\n\n    const { input } = this.props;\n\n    this._changeSupport.onElementsChanged(root.id, this.onElementsChanged);\n    this._changeSupport.onElementsChanged(input.id, this.onElementsChanged);\n  }\n\n  componentWillUnmount() {\n    const root = this._sheet.getRoot();\n\n    const { input } = this.props;\n\n    this._changeSupport.offElementsChanged(root.id, this.onElementsChanged);\n    this._changeSupport.offElementsChanged(input.id, this.onElementsChanged);\n  }\n\n  render() {\n    const input = this.props.input;\n\n    const {\n      inputExpression\n    } = input;\n\n    var label = input.get('label');\n    var inputVariable = input.get('inputVariable');\n\n    var expressionLanguage = inputExpression.get('expressionLanguage') || 'FEEL';\n\n    var showLanguageBadge = !label && expressionLanguage != 'FEEL';\n\n    return (\n      <th\n        data-col-id={ input.id }\n        onClick={ this.onClick }\n        onContextmenu={ this.onContextmenu }\n        className=\"input-cell input-editor\">\n\n        {\n          this.slotFills({\n            type: 'cell-inner',\n            context: {\n              cellType: 'input-cell',\n              col: this._elementRegistry.get(input.id)\n            },\n            col: input\n          })\n        }\n\n        {\n          label ? (\n            <span className=\"input-label\" title=\"Input Label\">\n              { label }\n            </span>\n          ) : (\n            <span className=\"input-expression\" title=\"Input Expression\">\n              { inputExpression.text || '-' }\n            </span>\n          )\n        }\n\n        {\n          inputVariable && (\n            <span\n              className=\"dms-badge dmn-variable-name input-variable\"\n              title=\"Input Variable\">\n              { inputVariable }\n            </span>\n          )\n        }\n\n        {\n          showLanguageBadge && (\n            <span\n              className=\"dms-badge dmn-expression-language input-expression-language\"\n              title={ 'Input Expression Language = ' + expressionLanguage }>\n\n              <span className=\"dms-badge-icon dmn-icon-file-code\"></span>\n              <span className=\"dms-badge-label\">{ expressionLanguage }</span>\n            </span>\n          )\n        }\n      </th>\n    );\n  }\n\n}"]}