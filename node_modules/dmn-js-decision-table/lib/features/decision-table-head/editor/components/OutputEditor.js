var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

import { createVNode, createComponentVNode, createTextVNode } from 'inferno';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import { Component } from 'inferno';

import Input from 'dmn-js-shared/lib/components/Input';

var OutputEditor = function (_Component) {
  _inherits(OutputEditor, _Component);

  function OutputEditor(props, context) {
    _classCallCheck(this, OutputEditor);

    var _this = _possibleConstructorReturn(this, (OutputEditor.__proto__ || Object.getPrototypeOf(OutputEditor)).call(this, props, context));

    _this.setName = function (name) {
      name = name || undefined;

      _this.handleChange({ name: name });
    };

    _this.setLabel = function (label) {
      label = label || undefined;

      _this.handleChange({ label: label });
    };
    return _this;
  }

  _createClass(OutputEditor, [{
    key: 'handleChange',
    value: function handleChange(changes) {
      var onChange = this.props.onChange;


      if (typeof onChange === 'function') {
        onChange(changes);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          name = _props.name,
          label = _props.label;


      return createVNode(1, 'div', 'dms-container ref-output-editor', [createVNode(1, 'p', 'dms-fill-row', [createVNode(1, 'label', 'dms-label', createTextVNode('Output Label'), 2), createComponentVNode(2, Input, {
        'className': 'ref-output-label',
        'value': label || '',
        'onInput': this.setLabel
      })], 4), createVNode(1, 'p', 'dms-fill-row', [createVNode(1, 'label', 'dms-label', createTextVNode('Output Name'), 2), createComponentVNode(2, Input, {
        'className': 'ref-output-name',
        'value': name || '',
        'onInput': this.setName
      })], 4)], 4);
    }
  }]);

  return OutputEditor;
}(Component);

export default OutputEditor;
//# sourceMappingURL=OutputEditor.js.map