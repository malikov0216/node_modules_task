{"version":3,"sources":["../../../../../src/features/decision-table-head/editor/components/OutputCellContextMenu.js"],"names":["Component","OutputEditor","inject","OutputCellContextMenu","props","context","persistChanges","output","unsaved","state","modeling","updateProperties","setState","handleChange","changes","debounceInput","attr","get","getValue","$inject"],"mappings":";;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,SAA1B;;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,SACEC,MADF,QAEO,yBAFP;;IAKqBC,qB;;;AAEnB,iCAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,8IACpBD,KADoB,EACbC,OADa;;AAAA,UAU5BC,cAV4B,GAUX,YAAM;AAAA,UACbC,MADa,GACF,MAAKH,KAAL,CAAWC,OADT,CACbE,MADa;AAAA,UAGbC,OAHa,GAGD,MAAKC,KAHJ,CAGbD,OAHa;;;AAKrB,UAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,YAAKE,QAAL,CAAcC,gBAAd,CAA+BJ,MAA/B,EAAuCC,OAAvC;;AAEA,YAAKI,QAAL,CAAc;AACZJ,iBAAS;AADG,OAAd;AAGD,KAxB2B;;AAAA,UA0B5BK,YA1B4B,GA0Bb,UAACC,OAAD,EAAa;AAC1B,YAAKF,QAAL,CAAc;AACZJ,8BACK,MAAKC,KAAL,CAAWD,OADhB,EAEKM,OAFL;AADY,OAAd,EAKG,MAAKR,cALR;AAMD,KAjC2B;;AAG1B,UAAKG,KAAL,GAAa,EAAb;;AAEAP;;AAEA,UAAKI,cAAL,GAAsB,MAAKS,aAAL,CAAmB,MAAKT,cAAxB,CAAtB;AAP0B;AAQ3B;;;;6BA2BQU,I,EAAM;AAAA,UACLT,MADK,GACM,KAAKH,KAAL,CAAWC,OADjB,CACLE,MADK;AAAA,UAGLC,OAHK,GAGO,KAAKC,KAHZ,CAGLD,OAHK;;;AAKb,aAAQA,WAAWA,QAAQQ,IAAR,CAAZ,IAA8BT,OAAOU,GAAP,CAAWD,IAAX,CAArC;AACD;;;6BAEQ;AACP,mCACiB,oCADjB;AAAA,gBAGa,KAAKE,QAAL,CAAc,MAAd,CAHb;AAAA,iBAIc,KAAKA,QAAL,CAAc,OAAd,CAJd;AAAA,oBAKiB,KAAKL;AALtB;AAQD;;;;EAtDgDb,S;;eAA9BG,qB;;;AAyDrBA,sBAAsBgB,OAAtB,GAAgC,CAC9B,eAD8B,EAE9B,UAF8B,CAAhC","file":"OutputCellContextMenu.js","sourcesContent":["import { Component } from 'inferno';\n\nimport OutputEditor from './OutputEditor';\n\nimport {\n  inject\n} from 'table-js/lib/components';\n\n\nexport default class OutputCellContextMenu extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {};\n\n    inject(this);\n\n    this.persistChanges = this.debounceInput(this.persistChanges);\n  }\n\n  persistChanges = () => {\n    const { output } = this.props.context;\n\n    const { unsaved } = this.state;\n\n    if (!unsaved) {\n      return;\n    }\n\n    this.modeling.updateProperties(output, unsaved);\n\n    this.setState({\n      unsaved: false\n    });\n  }\n\n  handleChange = (changes) => {\n    this.setState({\n      unsaved: {\n        ...this.state.unsaved,\n        ...changes\n      }\n    }, this.persistChanges);\n  };\n\n  getValue(attr) {\n    const { output } = this.props.context;\n\n    const { unsaved } = this.state;\n\n    return (unsaved && unsaved[attr]) || output.get(attr);\n  }\n\n  render() {\n    return (\n      <div className=\"context-menu-container output-edit\">\n        <OutputEditor\n          name={ this.getValue('name') }\n          label={ this.getValue('label') }\n          onChange={ this.handleChange } />\n      </div>\n    );\n  }\n}\n\nOutputCellContextMenu.$inject = [\n  'debounceInput',\n  'modeling'\n];"]}