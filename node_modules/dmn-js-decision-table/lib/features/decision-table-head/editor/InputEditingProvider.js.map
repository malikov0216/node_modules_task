{"version":3,"sources":["../../../../src/features/decision-table-head/editor/InputEditingProvider.js"],"names":["closest","domClosest","InputCell","InputCellContextMenu","InputCellProvider","components","contextMenu","eventBus","renderer","onGetComponent","cellType","context","contextMenuType","on","event","input","target","node","getBoundingClientRect","left","top","width","height","container","getContainer","open","x","parentNode","scrollLeft","y","scrollTop","offset","$inject"],"mappings":";;AAAA,SACEA,WAAWC,UADb,QAEO,SAFP;;AAIA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,oBAAP,MAAiC,mCAAjC;;IAGqBC,iB,GAEnB,2BAAYC,UAAZ,EAAwBC,WAAxB,EAAqCC,QAArC,EAA+CC,QAA/C,EAAyD;AAAA;;AAEvDH,aAAWI,cAAX,CAA0B,MAA1B,EAAkC,gBAAkB;AAAA,QAAfC,QAAe,QAAfA,QAAe;;AAClD,QAAIA,aAAa,cAAjB,EAAiC;AAC/B,aAAOR,SAAP;AACD;AACF,GAJD;;AAMAG,aAAWI,cAAX,CAA0B,cAA1B,EAA0C,YAAkB;AAAA,QAAjBE,OAAiB,uEAAP,EAAO;;AAC1D,QACEA,QAAQC,eAAR,KAA4B,YAD9B,EAEE;AACA,aAAOT,oBAAP;AACD;AACF,GAND;;AAQAI,WAASM,EAAT,CAAY,YAAZ,EAA0B,iBAAsB;AAAA,QAAnBC,KAAmB,SAAnBA,KAAmB;AAAA,QAAZC,KAAY,SAAZA,KAAY;AAAA,QAEtCC,MAFsC,GAE3BF,KAF2B,CAEtCE,MAFsC;;;AAI9C,QAAMC,OAAOhB,WAAWe,MAAX,EAAmB,IAAnB,EAAyB,IAAzB,CAAb;;AAJ8C,gCAMTC,KAAKC,qBAAL,EANS;AAAA,QAMtCC,IANsC,yBAMtCA,IANsC;AAAA,QAMhCC,GANgC,yBAMhCA,GANgC;AAAA,QAM3BC,KAN2B,yBAM3BA,KAN2B;AAAA,QAMpBC,MANoB,yBAMpBA,MANoB;;AAQ9C,QAAMC,YAAYf,SAASgB,YAAT,EAAlB;;AAEAlB,gBAAYmB,IAAZ,CAAiB;AACfC,SAAGP,OAAOI,UAAUI,UAAV,CAAqBC,UADhB;AAEfC,SAAGT,MAAMG,UAAUI,UAAV,CAAqBG,SAFf;AAGfT,kBAHe;AAIfC;AAJe,KAAjB,EAKG;AACDV,uBAAiB,YADhB;AAEDG,kBAFC;AAGDgB,cAAQ;AACNL,WAAG,CADG;AAENG,WAAG;AAFG;AAHP,KALH;AAaD,GAvBD;AAwBD,C;;eA1CkBzB,iB;;;AA8CrBA,kBAAkB4B,OAAlB,GAA4B,CAC1B,YAD0B,EAE1B,aAF0B,EAG1B,UAH0B,EAI1B,UAJ0B,CAA5B","file":"InputEditingProvider.js","sourcesContent":["import {\n  closest as domClosest\n} from 'min-dom';\n\nimport InputCell from './components/InputCell';\nimport InputCellContextMenu from './components/InputCellContextMenu';\n\n\nexport default class InputCellProvider {\n\n  constructor(components, contextMenu, eventBus, renderer) {\n\n    components.onGetComponent('cell', ({ cellType }) => {\n      if (cellType === 'input-header') {\n        return InputCell;\n      }\n    });\n\n    components.onGetComponent('context-menu', (context = {}) => {\n      if (\n        context.contextMenuType === 'input-edit'\n      ) {\n        return InputCellContextMenu;\n      }\n    });\n\n    eventBus.on('input.edit', ({ event, input }) => {\n\n      const { target } = event;\n\n      const node = domClosest(target, 'th', true);\n\n      const { left, top, width, height } = node.getBoundingClientRect();\n\n      const container = renderer.getContainer();\n\n      contextMenu.open({\n        x: left + container.parentNode.scrollLeft,\n        y: top + container.parentNode.scrollTop,\n        width,\n        height\n      }, {\n        contextMenuType: 'input-edit',\n        input,\n        offset: {\n          x: 4,\n          y: 4\n        }\n      });\n    });\n  }\n\n}\n\nInputCellProvider.$inject = [\n  'components',\n  'contextMenu',\n  'eventBus',\n  'renderer'\n];"]}