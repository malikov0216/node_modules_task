{"version":3,"sources":["../../../../../src/features/hit-policy/editor/components/HitPolicyCellContextMenu.js"],"names":["Component","InputSelect","HIT_POLICIES","LIST_FUNCTIONS","HitPolicyCellContextMenu","props","context","onHitPolicyChange","bind","onAggregationChange","onElementsChanged","hitPolicy","_modeling","editHitPolicy","undefined","value","aggregation","forceUpdate","injector","changeSupport","_changeSupport","_sheet","get","root","getRoot","businessObject","id","state","hitPolicyOptions","map","label","h","aggregationOptions","l"],"mappings":"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","file":"HitPolicyCellContextMenu.js","sourcesContent":["import { Component } from 'inferno';\n\nimport InputSelect from 'dmn-js-shared/lib/components/InputSelect';\n\nconst HIT_POLICIES = [\n  'UNIQUE',\n  'FIRST',\n  'PRIORITY',\n  'ANY',\n  'COLLECT',\n  'RULE ORDER',\n  'OUTPUT ORDER'\n];\n\nconst LIST_FUNCTIONS = [\n  'SUM',\n  'MIN',\n  'MAX',\n  'COUNT'\n];\n\n\nexport default class HitPolicyCellContextMenu extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.onHitPolicyChange = this.onHitPolicyChange.bind(this);\n    this.onAggregationChange = this.onAggregationChange.bind(this);\n    this.onElementsChanged = this.onElementsChanged.bind(this);\n  }\n\n  onHitPolicyChange(hitPolicy) {\n    this._modeling.editHitPolicy(hitPolicy, undefined);\n  }\n\n  onAggregationChange(value) {\n    let aggregation = value === ''\n      ? undefined\n      : value;\n\n    this._modeling.editHitPolicy('COLLECT', aggregation);\n  }\n\n  onElementsChanged() {\n    this.forceUpdate();\n  }\n\n  componentWillMount() {\n    const { injector } = this.context;\n\n    const changeSupport = this._changeSupport = this.context.changeSupport;\n\n    this._sheet = injector.get('sheet');\n    this._modeling = injector.get('modeling');\n\n    const root = this._sheet.getRoot(),\n          businessObject = root.businessObject,\n          hitPolicy = businessObject.hitPolicy,\n          aggregation = businessObject.aggregation;\n\n    changeSupport.onElementsChanged(root.id, this.onElementsChanged);\n\n    this.state = {\n      hitPolicy,\n      aggregation\n    };\n  }\n\n  componentWillUnmount() {\n    const root = this._sheet.getRoot();\n\n    this._changeSupport.onElementsChanged(root.id, this.onElementsChanged);\n  }\n\n  render() {\n    const root = this._sheet.getRoot(),\n          businessObject = root.businessObject,\n          hitPolicy = businessObject.hitPolicy,\n          aggregation = businessObject.aggregation;\n\n    const hitPolicyOptions = HIT_POLICIES.map(h => {\n      return {\n        label: h,\n        value: h\n      };\n    });\n\n    const aggregationOptions = LIST_FUNCTIONS.map(l => {\n      return {\n        label: l === 'NONE' ? '-' : l,\n        value: l\n      };\n    });\n\n    return (\n      <div className=\"context-menu-container hit-policy-edit\">\n        <p className=\"hit-policy-edit-policy\">\n          <label className=\"dms-label\">Hit Policy:</label>\n\n          <InputSelect\n            className=\"hit-policy-edit-policy-select\"\n            onChange={ this.onHitPolicyChange }\n            options={ hitPolicyOptions }\n            value={ hitPolicy } />\n        </p>\n        {\n          hitPolicy === 'COLLECT' &&\n            <p className=\"hit-policy-edit-operator\">\n              <label className=\"dms-label\">Aggregation:</label>\n\n              <InputSelect\n                className=\"hit-policy-edit-operator-select\"\n                onChange={ this.onAggregationChange }\n                options={ aggregationOptions }\n                value={ aggregation } />\n            </p>\n        }\n      </div>\n    );\n  }\n}"]}