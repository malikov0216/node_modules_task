{"version":3,"sources":["../../../../../src/features/hit-policy/editor/components/EditableHitPolicyCell.js"],"names":["Component","inject","EditableHitPolicyCell","props","context","onClick","event","eventBus","fire","onElementsChanged","forceUpdate","sheet","getRoot","changeSupport","id","offElementsChanged","root","businessObject","hitPolicy","hitPolicyLabel","charAt","aggregation","aggregationLabel","getAggregationLabel","$inject"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,SAA1B;;AAEA,SACEC,MADF,QAEO,yBAFP;;IAKqBC,qB;;;AAEnB,iCAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,8IACpBD,KADoB,EACbC,OADa;;AAAA,UAM5BC,OAN4B,GAMlB,UAACC,KAAD,EAAW;AACnB,YAAKC,QAAL,CAAcC,IAAd,CAAmB,gBAAnB,EAAqC;AACnCF;AADmC,OAArC;AAGD,KAV2B;;AAAA,UAY5BG,iBAZ4B,GAYR,YAAM;AACxB,YAAKC,WAAL;AACD,KAd2B;;AAG1BT;AAH0B;AAI3B;;;;8BAYS;AACR,aAAO,KAAKU,KAAL,CAAWC,OAAX,EAAP;AACD;;;yCAEoB;AACnB,WAAKC,aAAL,CAAmBJ,iBAAnB,CAAqC,KAAKG,OAAL,GAAeE,EAApD,EAAwD,KAAKL,iBAA7D;AACD;;;2CAEsB;AACrB,WAAKI,aAAL,CAAmBE,kBAAnB,CAAsC,KAAKH,OAAL,GAAeE,EAArD,EAAyD,KAAKL,iBAA9D;AACD;;;6BAEQ;AACP,UAAMO,OAAO,KAAKJ,OAAL,EAAb;AAAA,UACMK,iBAAiBD,KAAKC,cAD5B;AAAA,UAEMC,YAAYD,eAAeC,SAFjC;AAAA,UAGMC,iBAAiBD,UAAUE,MAAV,CAAiB,CAAjB,CAHvB;AAAA,UAIMC,cAAcJ,eAAeI,WAJnC;;AAMA,UAAMC,mBAAmBC,oBAAoBF,WAApB,CAAzB;;AAEA,kCAKc,mBALd,GAMkBF,cANlB,EAMoCG,gBANpC;AAAA,2BAEoB,MAFpB;AAAA,iBAGY,kBAAkBJ,SAH9B;AAAA,mBAIc,KAAKb,OAJnB;AAAA,mBAMY;AANZ;AAQD;;;;EA/CgDL,S;;eAA9BE,qB;;;AAkDrBA,sBAAsBsB,OAAtB,GAAgC,CAC9B,eAD8B,EAE9B,OAF8B,EAG9B,UAH8B,CAAhC;;AAOA;;AAEA,SAASD,mBAAT,CAA6BF,WAA7B,EAA0C;AACxC,UAAQA,WAAR;AACA,SAAK,KAAL;AAAY,aAAO,GAAP;AACZ,SAAK,KAAL;AAAY,aAAO,GAAP;AACZ,SAAK,KAAL;AAAY,aAAO,GAAP;AACZ,SAAK,OAAL;AAAc,aAAO,GAAP;AACd;AAAS,aAAO,EAAP;AALT;AAOD","file":"EditableHitPolicyCell.js","sourcesContent":["import { Component } from 'inferno';\n\nimport {\n  inject\n} from 'table-js/lib/components';\n\n\nexport default class EditableHitPolicyCell extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    inject(this);\n  }\n\n  onClick = (event) => {\n    this.eventBus.fire('hitPolicy.edit', {\n      event\n    });\n  }\n\n  onElementsChanged = () => {\n    this.forceUpdate();\n  }\n\n  getRoot() {\n    return this.sheet.getRoot();\n  }\n\n  componentWillMount() {\n    this.changeSupport.onElementsChanged(this.getRoot().id, this.onElementsChanged);\n  }\n\n  componentWillUnmount() {\n    this.changeSupport.offElementsChanged(this.getRoot().id, this.onElementsChanged);\n  }\n\n  render() {\n    const root = this.getRoot(),\n          businessObject = root.businessObject,\n          hitPolicy = businessObject.hitPolicy,\n          hitPolicyLabel = hitPolicy.charAt(0),\n          aggregation = businessObject.aggregation;\n\n    const aggregationLabel = getAggregationLabel(aggregation);\n\n    return (\n      <th\n        data-hit-policy=\"true\"\n        title={ 'Hit Policy = ' + hitPolicy }\n        onClick={ this.onClick }\n        className=\"hit-policy header\"\n        rowspan=\"3\">{ hitPolicyLabel }{ aggregationLabel }</th>\n    );\n  }\n}\n\nEditableHitPolicyCell.$inject = [\n  'changeSupport',\n  'sheet',\n  'eventBus'\n];\n\n\n// helpers //////////////////////\n\nfunction getAggregationLabel(aggregation) {\n  switch (aggregation) {\n  case 'SUM': return '+';\n  case 'MIN': return '<';\n  case 'MAX': return '>';\n  case 'COUNT': return '#';\n  default: return '';\n  }\n}"]}