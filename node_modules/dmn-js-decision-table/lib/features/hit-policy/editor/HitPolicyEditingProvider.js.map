{"version":3,"sources":["../../../../src/features/hit-policy/editor/HitPolicyEditingProvider.js"],"names":["closest","domClosest","EditableHitPolicyCell","HitPolicyCellContextMenu","HitPolicyEditingProvider","components","contextMenu","eventBus","renderer","onGetComponent","cellType","context","contextMenuType","on","event","node","target","getBoundingClientRect","left","top","width","height","container","getContainer","open","x","parentNode","scrollLeft","y","scrollTop","offset","$inject"],"mappings":"AAAA,SACEA,WAAWC,UADb,QAEO,SAFP;;AAIA,OAAOC,qBAAP,MAAkC,oCAAlC;AACA,OAAOC,wBAAP,MAAqC,uCAArC;;AAGA,eAAe,SAASC,wBAAT,CACXC,UADW,EACCC,WADD,EAEXC,QAFW,EAEDC,QAFC,EAGb;;AAEAH,aAAWI,cAAX,CAA0B,MAA1B,EAAkC,gBAAkB;AAAA,QAAfC,QAAe,QAAfA,QAAe;;AAClD,QAAIA,aAAa,oBAAjB,EAAuC;AACrC,aAAOR,qBAAP;AACD;AACF,GAJD;;AAMAG,aAAWI,cAAX,CAA0B,cAA1B,EAA0C,YAAkB;AAAA,QAAjBE,OAAiB,uEAAP,EAAO;;AAC1D,QAAIA,QAAQC,eAAR,IAA2BD,QAAQC,eAAR,KAA4B,iBAA3D,EAA8E;AAC5E,aAAOT,wBAAP;AACD;AACF,GAJD;;AAMAI,WAASM,EAAT,CAAY,gBAAZ,EAA8B,iBAAe;AAAA,QAAZC,KAAY,SAAZA,KAAY;;AAC3C,QAAMC,OAAOd,WAAWa,MAAME,MAAjB,EAAyB,IAAzB,EAA+B,IAA/B,CAAb;;AAD2C,gCAGND,KAAKE,qBAAL,EAHM;AAAA,QAGnCC,IAHmC,yBAGnCA,IAHmC;AAAA,QAG7BC,GAH6B,yBAG7BA,GAH6B;AAAA,QAGxBC,KAHwB,yBAGxBA,KAHwB;AAAA,QAGjBC,MAHiB,yBAGjBA,MAHiB;;AAK3C,QAAMC,YAAYd,SAASe,YAAT,EAAlB;;AAEAjB,gBAAYkB,IAAZ,CAAiB;AACfC,SAAGP,OAAOI,UAAUI,UAAV,CAAqBC,UADhB;AAEfC,SAAGT,MAAMG,UAAUI,UAAV,CAAqBG,SAFf;AAGfT,kBAHe;AAIfC;AAJe,KAAjB,EAKG;AACDT,uBAAiB,iBADhB;AAEDkB,cAAQ;AACNL,WAAG,CADG;AAENG,WAAG;AAFG;AAFP,KALH;AAYD,GAnBD;AAoBD;;AAEDxB,yBAAyB2B,OAAzB,GAAmC,CACjC,YADiC,EAEjC,aAFiC,EAGjC,UAHiC,EAIjC,UAJiC,CAAnC","file":"HitPolicyEditingProvider.js","sourcesContent":["import {\n  closest as domClosest\n} from 'min-dom';\n\nimport EditableHitPolicyCell from './components/EditableHitPolicyCell';\nimport HitPolicyCellContextMenu from './components/HitPolicyCellContextMenu';\n\n\nexport default function HitPolicyEditingProvider(\n    components, contextMenu,\n    eventBus, renderer\n) {\n\n  components.onGetComponent('cell', ({ cellType }) => {\n    if (cellType === 'before-label-cells') {\n      return EditableHitPolicyCell;\n    }\n  });\n\n  components.onGetComponent('context-menu', (context = {}) => {\n    if (context.contextMenuType && context.contextMenuType === 'hit-policy-edit') {\n      return HitPolicyCellContextMenu;\n    }\n  });\n\n  eventBus.on('hitPolicy.edit', ({ event }) => {\n    const node = domClosest(event.target, 'th', true);\n\n    const { left, top, width, height } = node.getBoundingClientRect();\n\n    const container = renderer.getContainer();\n\n    contextMenu.open({\n      x: left + container.parentNode.scrollLeft,\n      y: top + container.parentNode.scrollTop,\n      width,\n      height\n    }, {\n      contextMenuType: 'hit-policy-edit',\n      offset: {\n        x: 4,\n        y: 4\n      }\n    });\n  });\n}\n\nHitPolicyEditingProvider.$inject = [\n  'components',\n  'contextMenu',\n  'eventBus',\n  'renderer'\n];"]}