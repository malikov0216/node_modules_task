{"version":3,"sources":["../../../src/features/simple-number-edit/SimpleNumberEdit.js"],"names":["InputNumberEdit","OutputNumberEdit","isInput","isOutput","SimpleNumberEdit","components","simpleMode","registerProvider","typeRef","getTypeRef","element","col","onGetComponent","context","contextMenuType","isNumber","$inject","businessObject","inputExpression"],"mappings":";;AAAA,OAAOA,eAAP,MAA4B,8BAA5B;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;;AAEA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,kCAAlC;;IAEqBC,gB,GACnB,0BAAYC,UAAZ,EAAwBC,UAAxB,EAAoC;AAAA;;AAClCA,aAAWC,gBAAX,CAA4B,mBAAW;AACrC,QAAMC,UAAUC,WAAWC,OAAX,CAAhB;;AAEA,WAAO,CAACR,QAAQQ,QAAQC,GAAhB,KAAwBR,SAASO,QAAQC,GAAjB,CAAzB,MACDH,YAAY,SAAZ,IAAyBA,YAAY,MAArC,IAA+CA,YAAY,QAD1D,CAAP;AAED,GALD;;AAOAH,aAAWO,cAAX,CAA0B,cAA1B,EAA0C,YAAkB;AAAA,QAAjBC,OAAiB,uEAAP,EAAO;;AAC1D,QAAIA,QAAQC,eAAR,IAA2BD,QAAQC,eAAR,KAA4B,kBAA3D,EAA+E;;AAE7E,UAAI,CAACD,QAAQH,OAAb,EAAsB;AACpB;AACD;;AAED,UAAMF,UAAUC,WAAWI,QAAQH,OAAnB,CAAhB;;AAEA,UAAIK,SAASP,OAAT,CAAJ,EAAuB;;AAErB,YAAIN,QAAQW,QAAQH,OAAR,CAAgBC,GAAxB,CAAJ,EAAkC;AAChC,iBAAOX,eAAP;AACD,SAFD,MAEO,IAAIG,SAASU,QAAQH,OAAR,CAAgBC,GAAzB,CAAJ,EAAmC;AACxC,iBAAOV,gBAAP;AACD;AAEF;AAEF;AACF,GApBD;AAqBD,C;;eA9BkBG,gB;;;AAiCrBA,iBAAiBY,OAAjB,GAA2B,CAAE,YAAF,EAAgB,YAAhB,CAA3B;;AAGA;;AAEA,SAASP,UAAT,CAAoBC,OAApB,EAA6B;AAC3B,MAAIR,QAAQQ,QAAQC,GAAhB,CAAJ,EAA0B;AACxB,WAAOD,QAAQC,GAAR,IAAeD,QAAQC,GAAR,CAAYM,cAAZ,CAA2BC,eAA3B,CAA2CV,OAAjE;AACD,GAFD,MAEO;AACL,WAAOE,QAAQC,GAAR,IAAeD,QAAQC,GAAR,CAAYM,cAAZ,CAA2BT,OAAjD;AACD;AACF;;AAED,SAASO,QAAT,CAAkBP,OAAlB,EAA2B;AACzB,SAAOA,YAAY,SAAZ,IAAyBA,YAAY,MAArC,IAA+CA,YAAY,QAAlE;AACD","file":"SimpleNumberEdit.js","sourcesContent":["import InputNumberEdit from './components/InputNumberEdit';\r\nimport OutputNumberEdit from './components/OutputNumberEdit';\r\n\r\nimport { isInput, isOutput } from 'dmn-js-shared/lib/util/ModelUtil';\r\n\r\nexport default class SimpleNumberEdit {\r\n  constructor(components, simpleMode) {\r\n    simpleMode.registerProvider(element => {\r\n      const typeRef = getTypeRef(element);\r\n\r\n      return (isInput(element.col) || isOutput(element.col))\r\n        && (typeRef === 'integer' || typeRef === 'long' || typeRef === 'double');\r\n    });\r\n\r\n    components.onGetComponent('context-menu', (context = {}) => {\r\n      if (context.contextMenuType && context.contextMenuType === 'simple-mode-edit') {\r\n\r\n        if (!context.element) {\r\n          return;\r\n        }\r\n\r\n        const typeRef = getTypeRef(context.element);\r\n\r\n        if (isNumber(typeRef)) {\r\n\r\n          if (isInput(context.element.col)) {\r\n            return InputNumberEdit;\r\n          } else if (isOutput(context.element.col)) {\r\n            return OutputNumberEdit;\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nSimpleNumberEdit.$inject = [ 'components', 'simpleMode' ];\r\n\r\n\r\n// helpers //////////////////////\r\n\r\nfunction getTypeRef(element) {\r\n  if (isInput(element.col)) {\r\n    return element.col && element.col.businessObject.inputExpression.typeRef;\r\n  } else {\r\n    return element.col && element.col.businessObject.typeRef;\r\n  }\r\n}\r\n\r\nfunction isNumber(typeRef) {\r\n  return typeRef === 'integer' || typeRef === 'long' || typeRef === 'double';\r\n}"]}