{"version":3,"sources":["../../../../src/features/decision-table-properties/components/DecisionTablePropertiesEditorComponent.js"],"names":["Component","validateId","EditableComponent","inject","mixin","classNames","SelectionAware","DecisionTablePropertiesComponent","props","context","onElementsChanged","forceUpdate","setDecisionTableName","name","modeling","editDecisionTableName","setDecisionTableId","id","oldId","getBusinessObject","editDecisionTableId","bo","injector","sheet","get","setupChangeListeners","bind","unbind","changeSupport","offElementsChanged","getRoot","businessObject","$parent","$inject","DecisionTableName","className","getSelectionClasses","getClassName","getEditor","elementId","coords","DecisionTableId"],"mappings":"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","file":"DecisionTablePropertiesEditorComponent.js","sourcesContent":["import { Component } from 'inferno';\r\n\r\nimport { validateId } from 'dmn-js-shared/lib/util/IdsUtil';\r\n\r\nimport EditableComponent from 'dmn-js-shared/lib/components/EditableComponent';\r\n\r\nimport {\r\n  inject,\r\n  mixin,\r\n  classNames,\r\n  SelectionAware\r\n} from 'table-js/lib/components';\r\n\r\n\r\nexport default class DecisionTablePropertiesComponent extends Component {\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    inject(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const {\r\n      injector\r\n    } = this.context;\r\n\r\n    this.sheet = injector.get('sheet');\r\n    this.modeling = injector.get('modeling');\r\n\r\n    this.setupChangeListeners({ bind: this.getBusinessObject().id });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setupChangeListeners({\r\n      unbind: this.getBusinessObject().id\r\n    });\r\n  }\r\n\r\n  setupChangeListeners({ bind, unbind }) {\r\n\r\n    if (typeof unbind === 'string') {\r\n      this.changeSupport.offElementsChanged(unbind, this.onElementsChanged);\r\n    }\r\n\r\n    if (typeof bind === 'string') {\r\n      this.changeSupport.onElementsChanged(bind, this.onElementsChanged);\r\n    }\r\n  }\r\n\r\n  getBusinessObject() {\r\n    return this.sheet.getRoot().businessObject.$parent;\r\n  }\r\n\r\n  onElementsChanged = () => {\r\n    this.forceUpdate();\r\n  }\r\n\r\n  setDecisionTableName = (name) => {\r\n    this.modeling.editDecisionTableName(name);\r\n  }\r\n\r\n  setDecisionTableId = (id) => {\r\n\r\n    var oldId = this.getBusinessObject().id;\r\n\r\n    if (oldId === id) {\r\n      return;\r\n    }\r\n\r\n    this.modeling.editDecisionTableId(id);\r\n  }\r\n\r\n  validateId = (id) => {\r\n    var bo = this.getBusinessObject();\r\n    return validateId(bo, id);\r\n  }\r\n\r\n  render() {\r\n    const bo = this.getBusinessObject();\r\n\r\n    const { id, name } = bo;\r\n\r\n    return (\r\n      <header className=\"decision-table-properties\">\r\n        <DecisionTableName\r\n          className=\"decision-table-name\"\r\n          value={ name }\r\n          ctrlForNewline={ true }\r\n          onChange={ this.setDecisionTableName }\r\n          elementId={ '__decisionProperties_name' }\r\n          coords={ '0:__decisionProperties' }\r\n        />\r\n        <DecisionTableId\r\n          className=\"decision-table-id\"\r\n          value={ id }\r\n          ctrlForNewline={ true }\r\n          validate={ this.validateId }\r\n          onChange={ this.setDecisionTableId }\r\n          elementId={ '__decisionProperties_id' }\r\n          coords={ '1:__decisionProperties' }\r\n        />\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nDecisionTablePropertiesComponent.$inject = [\r\n  'sheet',\r\n  'modeling',\r\n  'changeSupport'\r\n];\r\n\r\n\r\nclass DecisionTableName extends EditableComponent {\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    mixin(this, SelectionAware);\r\n  }\r\n\r\n  render() {\r\n\r\n    const className = classNames(\r\n      this.getSelectionClasses(),\r\n      this.getClassName()\r\n    );\r\n\r\n    return (\r\n      <h3\r\n        className={ className }\r\n        data-element-id={ this.props.elementId }\r\n        data-coords={ this.props.coords }\r\n        title=\"Decision Name\"\r\n      >\r\n        { this.getEditor() }\r\n      </h3>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nclass DecisionTableId extends EditableComponent {\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    mixin(this, SelectionAware);\r\n  }\r\n\r\n  render() {\r\n\r\n    const className = classNames(\r\n      this.getSelectionClasses(),\r\n      this.getClassName()\r\n    );\r\n\r\n    return (\r\n      <h5\r\n        className={ className }\r\n        title=\"Decision Id\"\r\n        data-element-id={ this.props.elementId }\r\n        data-coords={ this.props.coords }\r\n      >\r\n        { this.getEditor() }\r\n      </h5>\r\n    );\r\n  }\r\n\r\n}"]}