{"version":3,"sources":["../../../../src/features/copy-cut-paste/cmd/PasteHandler.js"],"names":["Row","Col","reviveDescriptor","PasteHandler","clipboard","dmnFactory","elementFactory","elementRegistry","eventBus","moddle","modeling","sheet","_clipboard","_dmnFactory","_elementFactory","_elementRegistry","_eventBus","_model","_modeling","_sheet","context","element","after","data","get","Error","root","getRoot","elements","_keepIds","keepIds","index","rows","indexOf","forEach","addRow","cols","addCol","oldElements","$inject"],"mappings":";;;;AAAA,SAASA,GAAT,EAAcC,GAAd,QAAyB,oBAAzB;;AAEA,SAASC,gBAAT,QAAiC,mBAAjC;;AAEA;;;;IAGqBC,Y;AAEnB,wBACIC,SADJ,EAEIC,UAFJ,EAGIC,cAHJ,EAIIC,eAJJ,EAKIC,QALJ,EAMIC,MANJ,EAOIC,QAPJ,EAQIC,KARJ,EASE;AAAA;;AACA,SAAKC,UAAL,GAAkBR,SAAlB;AACA,SAAKS,WAAL,GAAmBR,UAAnB;AACA,SAAKS,eAAL,GAAuBR,cAAvB;AACA,SAAKS,gBAAL,GAAwBR,eAAxB;AACA,SAAKS,SAAL,GAAiBR,QAAjB;AACA,SAAKS,MAAL,GAAcR,MAAd;AACA,SAAKS,SAAL,GAAiBR,QAAjB;AACA,SAAKS,MAAL,GAAcR,KAAd;AACD;;AAGD;;;;;;;gCAGYS,O,EAAS;AAAA;;AAAA,UAEjBC,OAFiB,GAIfD,OAJe,CAEjBC,OAFiB;AAAA,UAGjBC,KAHiB,GAIfF,OAJe,CAGjBE,KAHiB;;;AAMnB,UAAMC,OAAO,KAAKX,UAAL,CAAgBY,GAAhB,EAAb;;AAEA,UAAI,CAACD,IAAL,EAAW;AACT,cAAM,IAAIE,KAAJ,CAAU,wBAAV,CAAN;AACD;;AAED,UAAMC,OAAO,KAAKP,MAAL,CAAYQ,OAAZ,EAAb;;AAEA;AACA,UAAMC,WAAW1B,iBAAiBqB,KAAKK,QAAtB,EAAgC;AAC/Cf,qBAAa,KAAKA,WAD6B;AAE/CgB,kBAAUN,KAAKO,OAFgC;AAG/Cb,gBAAQ,KAAKA;AAHkC,OAAhC,EAIdS,IAJH;;AAMA;AACA,UAAIL,mBAAmBrB,GAAvB,EAA4B;;AAE1B,YAAI+B,QAAQL,KAAKM,IAAL,CAAUC,OAAV,CAAkBZ,OAAlB,CAAZ;;AAEA,YAAIU,UAAU,CAAC,CAAf,EAAkB;AAChB;AACD;;AAEDH,iBAASM,OAAT,CAAiB,mBAAW;AAC1B,cAAIZ,KAAJ,EAAW;AACTS;AACD;;AAED,gBAAKb,SAAL,CAAeiB,MAAf,CAAsBd,OAAtB,EAA+BU,KAA/B;AACD,SAND;AAQD,OAhBD,MAgBO,IAAIV,mBAAmBpB,GAAvB,EAA4B;;AAEjC,YAAI8B,SAAQL,KAAKU,IAAL,CAAUH,OAAV,CAAkBZ,OAAlB,CAAZ;;AAEA,YAAIU,WAAU,CAAC,CAAf,EAAkB;AAChB;AACD;;AAEDH,iBAASM,OAAT,CAAiB,mBAAW;AAC1B,cAAIZ,KAAJ,EAAW;AACTS;AACD;;AAED,gBAAKb,SAAL,CAAemB,MAAf,CAAsBhB,OAAtB,EAA+BU,MAA/B;AACD,SAND;AAQD;;AAEDX,cAAQkB,WAAR,GAAsB,KAAK1B,UAAL,CAAgBY,GAAhB,EAAtB;;AAEA,aAAO,KAAKL,MAAL,CAAYQ,OAAZ,EAAP;AACD;;AAED;;;;;;2BAGOP,O,EAAS,CAEf;;;;;;eA5FkBjB,Y;;;AAgGrBA,aAAaoC,OAAb,GAAuB,CACrB,WADqB,EAErB,YAFqB,EAGrB,gBAHqB,EAIrB,iBAJqB,EAKrB,UALqB,EAMrB,QANqB,EAOrB,UAPqB,EAQrB,OARqB,CAAvB","file":"PasteHandler.js","sourcesContent":["import { Row, Col } from 'table-js/lib/model';\r\n\r\nimport { reviveDescriptor } from '../DescriptorUtil';\r\n\r\n/**\r\n * A handler that implements pasting elements.\r\n */\r\nexport default class PasteHandler {\r\n\r\n  constructor(\r\n      clipboard,\r\n      dmnFactory,\r\n      elementFactory,\r\n      elementRegistry,\r\n      eventBus,\r\n      moddle,\r\n      modeling,\r\n      sheet\r\n  ) {\r\n    this._clipboard = clipboard;\r\n    this._dmnFactory = dmnFactory;\r\n    this._elementFactory = elementFactory;\r\n    this._elementRegistry = elementRegistry;\r\n    this._eventBus = eventBus;\r\n    this._model = moddle;\r\n    this._modeling = modeling;\r\n    this._sheet = sheet;\r\n  }\r\n\r\n\r\n  /**\r\n   * <do>\r\n   */\r\n  postExecute(context) {\r\n    let {\r\n      element,\r\n      after\r\n    } = context;\r\n\r\n    const data = this._clipboard.get();\r\n\r\n    if (!data) {\r\n      throw new Error('missing clipboard data');\r\n    }\r\n\r\n    const root = this._sheet.getRoot();\r\n\r\n    // (1) create elements from descriptors\r\n    const elements = reviveDescriptor(data.elements, {\r\n      _dmnFactory: this._dmnFactory,\r\n      _keepIds: data.keepIds,\r\n      _model: this._model\r\n    }).root;\r\n\r\n    // (2) add elements to sheet\r\n    if (element instanceof Row) {\r\n\r\n      let index = root.rows.indexOf(element);\r\n\r\n      if (index === -1) {\r\n        return;\r\n      }\r\n\r\n      elements.forEach(element => {\r\n        if (after) {\r\n          index++;\r\n        }\r\n\r\n        this._modeling.addRow(element, index);\r\n      });\r\n\r\n    } else if (element instanceof Col) {\r\n\r\n      let index = root.cols.indexOf(element);\r\n\r\n      if (index === -1) {\r\n        return;\r\n      }\r\n\r\n      elements.forEach(element => {\r\n        if (after) {\r\n          index++;\r\n        }\r\n\r\n        this._modeling.addCol(element, index);\r\n      });\r\n\r\n    }\r\n\r\n    context.oldElements = this._clipboard.get();\r\n\r\n    return this._sheet.getRoot();\r\n  }\r\n\r\n  /**\r\n   * <undo>\r\n   */\r\n  revert(context) {\r\n\r\n  }\r\n\r\n}\r\n\r\nPasteHandler.$inject = [\r\n  'clipboard',\r\n  'dmnFactory',\r\n  'elementFactory',\r\n  'elementRegistry',\r\n  'eventBus',\r\n  'moddle',\r\n  'modeling',\r\n  'sheet'\r\n];"]}