{"version":3,"sources":["../src/Viewer.js"],"names":["Table","importDecision","assign","domify","remove","domRemove","annotationsModule","coreModule","decisionTableHeadModule","decisionTablePropertiesModule","decisionRuleIndicesModule","decisoinRulesModule","hitPolicyModule","viewDrdModule","PoweredByModule","Viewer","options","container","_createContainer","renderer","_container","decision","done","err","_decision","clear","e","modules","additionalModules","config","baseModules","getModules","extraModules","staticModules","decisionTable","allModules","event","priority","callback","target","get","on","off","type","fire","parentNode","Error","detach","appendChild","_emit","_getModules"],"mappings":"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","file":"Viewer.js","sourcesContent":["import Table from 'table-js';\n\nimport { importDecision } from './import/Importer';\n\nimport { assign } from 'min-dash';\n\nimport {\n  domify,\n  remove as domRemove\n} from 'min-dom';\n\nimport annotationsModule from './features/annotations';\nimport coreModule from './core';\nimport decisionTableHeadModule from './features/decision-table-head';\nimport decisionTablePropertiesModule from './features/decision-table-properties';\nimport decisionRuleIndicesModule from './features/decision-rule-indices';\nimport decisoinRulesModule from './features/decision-rules';\nimport hitPolicyModule from './features/hit-policy';\nimport viewDrdModule from './features/view-drd';\nimport PoweredByModule from './features/powered-by';\n\n\nexport default class Viewer extends Table {\n\n  constructor(options = {}) {\n    const container = Viewer._createContainer();\n\n    super(assign(options, {\n      renderer: {\n        container\n      }\n    }));\n\n    this._container = container;\n  }\n\n  open(decision, done) {\n\n    var err;\n\n    // use try/catch to not swallow synchronous exceptions\n    // that may be raised during model parsing\n    try {\n\n      if (this._decision) {\n        // clear existing rendered diagram\n        this.clear();\n      }\n\n      // update decision\n      this._decision = decision;\n\n      // perform import\n      return importDecision(this, decision, done);\n    } catch (e) {\n      err = e;\n    }\n\n    // handle synchronously thrown exception\n    return done(err);\n  }\n\n  /**\n   * Initialize the table, returning { modules: [], config }.\n   *\n   * @param  {Object} options\n   *\n   * @return {Object} init config\n   */\n  _init(options) {\n\n    let {\n      modules,\n      additionalModules,\n      ...config\n    } = options;\n\n    let baseModules = modules || this.getModules();\n    let extraModules = additionalModules || [];\n    let staticModules = [\n      {\n        decisionTable: [ 'value', this ]\n      }\n    ];\n\n    let allModules = [\n      PoweredByModule,\n      ...baseModules,\n      ...extraModules,\n      ...staticModules\n    ];\n\n    return {\n      modules: allModules,\n      config\n    };\n  }\n\n  /**\n   * Register an event listener\n   *\n   * Remove a previously added listener via {@link #off(event, callback)}.\n   *\n   * @param {String} event\n   * @param {Number} [priority]\n   * @param {Function} callback\n   * @param {Object} [that]\n   */\n  on(event, priority, callback, target) {\n    return this.get('eventBus').on(event, priority, callback, target);\n  }\n\n  /**\n   * De-register an event listener\n   *\n   * @param {String} event\n   * @param {Function} callback\n   */\n  off(event, callback) {\n    this.get('eventBus').off(event, callback);\n  }\n\n  /**\n   * Emit an event on the underlying {@link EventBus}\n   *\n   * @param  {String} type\n   * @param  {Object} event\n   *\n   * @return {Object} event processing result (if any)\n   */\n  _emit(type, event) {\n    return this.get('eventBus').fire(type, event);\n  }\n\n  /**\n   * Attach viewer to given parent node.\n   *\n   * @param  {Element} parentNode\n   */\n  attachTo(parentNode) {\n\n    if (!parentNode) {\n      throw new Error('parentNode required');\n    }\n\n    // ensure we detach from the\n    // previous, old parent\n    this.detach();\n\n    const container = this._container;\n\n    parentNode.appendChild(container);\n\n    this._emit('attach', {});\n  }\n\n  /**\n   * Detach viewer from parent node, if attached.\n   */\n  detach() {\n\n    const container = this._container,\n          parentNode = container.parentNode;\n\n    if (!parentNode) {\n      return;\n    }\n\n    this._emit('detach', {});\n\n    domRemove(container);\n  }\n\n  destroy() {\n    super.destroy();\n\n    this.detach();\n  }\n\n  getModules() {\n    return Viewer._getModules();\n  }\n\n  static _getModules() {\n    return [\n      annotationsModule,\n      coreModule,\n      decisionTableHeadModule,\n      decisionTablePropertiesModule,\n      decisionRuleIndicesModule,\n      decisoinRulesModule,\n      hitPolicyModule,\n      viewDrdModule\n    ];\n  }\n\n  static _createContainer() {\n    return domify(\n      '<div class=\"dmn-decision-table-container\"></div>'\n    );\n  }\n\n}\n"]}