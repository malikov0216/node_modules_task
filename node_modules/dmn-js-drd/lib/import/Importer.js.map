{"version":3,"sources":["../../src/import/Importer.js"],"names":["DrdTreeWalker","importDRD","drd","definitions","done","importer","get","eventBus","error","warnings","render","visitor","root","element","di","add","message","context","push","walker","handleDefinitions","fire","e"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iBAA1B;;AAGA;;;;;;;;;;AAUA,OAAO,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,WAAxB,EAAqCC,IAArC,EAA2C;;AAEhD,MAAIC,WAAWH,IAAII,GAAJ,CAAQ,aAAR,CAAf;AAAA,MACIC,WAAWL,IAAII,GAAJ,CAAQ,UAAR,CADf;;AAGA,MAAIE,KAAJ;AAAA,MACIC,WAAW,EADf;;AAGA,WAASC,MAAT,CAAgBP,WAAhB,EAA6B;;AAE3B,QAAIQ,UAAU;AACZC,YAAM,cAASC,OAAT,EAAkB;AACtB,eAAOR,SAASO,IAAT,CAAcC,OAAd,CAAP;AACD,OAHW;;AAKZA,eAAS,iBAASA,QAAT,EAAkBC,EAAlB,EAAsB;AAC7B,eAAOT,SAASU,GAAT,CAAaF,QAAb,EAAsBC,EAAtB,CAAP;AACD,OAPW;;AASZN,aAAO,eAASQ,OAAT,EAAkBC,OAAlB,EAA2B;AAChCR,iBAASS,IAAT,CAAc,EAAEF,SAASA,OAAX,EAAoBC,SAASA,OAA7B,EAAd;AACD;AAXW,KAAd;;AAcA,QAAIE,SAAS,IAAInB,aAAJ,CAAkBW,OAAlB,CAAb;;AAEA;AACAQ,WAAOC,iBAAP,CAAyBjB,WAAzB;AACD;;AAEDI,WAASc,IAAT,CAAc,cAAd,EAA8B,EAAElB,aAAaA,WAAf,EAA9B;;AAEA,MAAI;AACFO,WAAOP,WAAP;AACD,GAFD,CAEE,OAAOmB,CAAP,EAAU;AACVd,YAAQc,CAAR;AACD;;AAEDf,WAASc,IAAT,CAAc,aAAd,EAA6B,EAAEb,OAAOA,KAAT,EAAgBC,UAAUA,QAA1B,EAA7B;;AAEAL,OAAKI,KAAL,EAAYC,QAAZ;AACD","file":"Importer.js","sourcesContent":["import DrdTreeWalker from './DrdTreeWalker';\n\n\n/**\n * Import the definitions into a diagram.\n *\n * Errors and warnings are reported through the specified callback.\n *\n * @param  {Drd} drd\n * @param  {ModdleElement} definitions\n * @param  {Function} done\n *         the callback, invoked with (err, [ warning ]) once the import is done\n */\nexport function importDRD(drd, definitions, done) {\n\n  var importer = drd.get('drdImporter'),\n      eventBus = drd.get('eventBus');\n\n  var error,\n      warnings = [];\n\n  function render(definitions) {\n\n    var visitor = {\n      root: function(element) {\n        return importer.root(element);\n      },\n\n      element: function(element, di) {\n        return importer.add(element, di);\n      },\n\n      error: function(message, context) {\n        warnings.push({ message: message, context: context });\n      }\n    };\n\n    var walker = new DrdTreeWalker(visitor);\n\n    // import\n    walker.handleDefinitions(definitions);\n  }\n\n  eventBus.fire('import.start', { definitions: definitions });\n\n  try {\n    render(definitions);\n  } catch (e) {\n    error = e;\n  }\n\n  eventBus.fire('import.done', { error: error, warnings: warnings });\n\n  done(error, warnings);\n}"]}