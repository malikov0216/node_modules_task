{"version":3,"sources":["../../../src/features/editor-actions/DrdEditorActions.js"],"names":["inherits","EditorActions","DrdEditorActions","injector","invoke","$inject","prototype","_registerDefaultActions","call","canvas","get","elementRegistry","selection","lassoTool","directEditing","_registerAction","rootElement","getRootElement","elements","filter","element","select","toggle","currentSelection","length","activate"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;;AAEA,OAAOC,aAAP,MAA0B,sDAA1B;;AAGA,eAAe,SAASC,gBAAT,CAA0BC,QAA1B,EAAoC;AACjDA,WAASC,MAAT,CAAgBH,aAAhB,EAA+B,IAA/B;AACD;;AAEDD,SAASE,gBAAT,EAA2BD,aAA3B;;AAEAC,iBAAiBG,OAAjB,GAA2B,CACzB,UADyB,CAA3B;;AAKA;;;;;AAKAH,iBAAiBI,SAAjB,CAA2BC,uBAA3B,GAAqD,UAASJ,QAAT,EAAmB;;AAEtE;;AAEAF,gBAAcK,SAAd,CAAwBC,uBAAxB,CAAgDC,IAAhD,CAAqD,IAArD,EAA2DL,QAA3D;;AAEA;;AAEA,MAAIM,SAASN,SAASO,GAAT,CAAa,QAAb,EAAuB,KAAvB,CAAb;AACA,MAAIC,kBAAkBR,SAASO,GAAT,CAAa,iBAAb,EAAgC,KAAhC,CAAtB;AACA,MAAIE,YAAYT,SAASO,GAAT,CAAa,WAAb,EAA0B,KAA1B,CAAhB;AACA,MAAIG,YAAYV,SAASO,GAAT,CAAa,WAAb,EAA0B,KAA1B,CAAhB;AACA,MAAII,gBAAgBX,SAASO,GAAT,CAAa,eAAb,EAA8B,KAA9B,CAApB;;AAEA;;AAEA,MAAID,UAAUE,eAAV,IAA6BC,SAAjC,EAA4C;AAC1C,SAAKG,eAAL,CAAqB,gBAArB,EAAuC,YAAW;AAChD;AACA;AACA,UAAIC,cAAcP,OAAOQ,cAAP,EAAlB;;AAEA,UAAIC,WAAWP,gBAAgBQ,MAAhB,CAAuB,UAASC,OAAT,EAAkB;AACtD,eAAOA,YAAYJ,WAAnB;AACD,OAFc,CAAf;;AAIAJ,gBAAUS,MAAV,CAAiBH,QAAjB;;AAEA,aAAOA,QAAP;AACD,KAZD;AAaD;;AAED,MAAIL,SAAJ,EAAe;AACb,SAAKE,eAAL,CAAqB,WAArB,EAAkC,YAAW;AAC3CF,gBAAUS,MAAV;AACD,KAFD;AAGD;;AAED,MAAIV,aAAaE,aAAjB,EAAgC;AAC9B,SAAKC,eAAL,CAAqB,eAArB,EAAsC,YAAW;AAC/C,UAAIQ,mBAAmBX,UAAUF,GAAV,EAAvB;;AAEA,UAAIa,iBAAiBC,MAArB,EAA6B;AAC3BV,sBAAcW,QAAd,CAAuBF,iBAAiB,CAAjB,CAAvB;AACD;AACF,KAND;AAOD;AACF,CA/CD","file":"DrdEditorActions.js","sourcesContent":["import inherits from 'inherits';\n\nimport EditorActions from 'diagram-js/lib/features/editor-actions/EditorActions';\n\n\nexport default function DrdEditorActions(injector) {\n  injector.invoke(EditorActions, this);\n}\n\ninherits(DrdEditorActions, EditorActions);\n\nDrdEditorActions.$inject = [\n  'injector'\n];\n\n\n/**\n * Register default actions.\n *\n * @param {Injector} injector\n */\nDrdEditorActions.prototype._registerDefaultActions = function(injector) {\n\n  // (0) invoke super method\n\n  EditorActions.prototype._registerDefaultActions.call(this, injector);\n\n  // (1) retrieve optional components to integrate with\n\n  var canvas = injector.get('canvas', false);\n  var elementRegistry = injector.get('elementRegistry', false);\n  var selection = injector.get('selection', false);\n  var lassoTool = injector.get('lassoTool', false);\n  var directEditing = injector.get('directEditing', false);\n\n  // (2) check components and register actions\n\n  if (canvas && elementRegistry && selection) {\n    this._registerAction('selectElements', function() {\n      // select all elements except for the invisible\n      // root element\n      var rootElement = canvas.getRootElement();\n\n      var elements = elementRegistry.filter(function(element) {\n        return element !== rootElement;\n      });\n\n      selection.select(elements);\n\n      return elements;\n    });\n  }\n\n  if (lassoTool) {\n    this._registerAction('lassoTool', function() {\n      lassoTool.toggle();\n    });\n  }\n\n  if (selection && directEditing) {\n    this._registerAction('directEditing', function() {\n      var currentSelection = selection.get();\n\n      if (currentSelection.length) {\n        directEditing.activate(currentSelection[0]);\n      }\n    });\n  }\n};"]}