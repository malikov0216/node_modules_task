{"version":3,"sources":["../../../../src/features/modeling/behavior/CreateConnectionBehavior.js"],"names":["inherits","CommandInterceptor","getMid","is","getRequirementType","source","type","CreateConnectionBehavior","eventBus","drdFactory","drdRules","call","preExecute","context","connection","connectionBusinessObject","businessObject","target","sourceRef","targetRef","requirementType","requirement","edge","create","href","id","extensionElements","createDi","createDiEdge","values","push","di","$inject"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;;AAEA,OAAOC,kBAAP,MAA+B,2CAA/B;;AAEA,SACEC,MADF,QAEO,kCAFP;;AAIA,SACEC,EADF,QAEO,kCAFP;;AAIA,SAASC,kBAAT,CAA4BC,MAA5B,EAAoC;AAClC,UAAQA,OAAOC,IAAf;AACA,SAAK,eAAL;AACE,aAAO,OAAP;AACF,SAAK,cAAL;AACE,aAAO,UAAP;AACF,SAAK,qBAAL;AACE,aAAO,WAAP;AACF,SAAK,4BAAL;AACE,aAAO,WAAP;AARF;AAUD;;AAGD,eAAe,SAASC,wBAAT,CAAkCC,QAAlC,EAA4CC,UAA5C,EAAwDC,QAAxD,EAAkE;;AAE/ET,qBAAmBU,IAAnB,CAAwB,IAAxB,EAA8BH,QAA9B;;AAEA,OAAKI,UAAL,CAAgB,mBAAhB,EAAqC,UAASC,OAAT,EAAkB;AACrD,QAAIC,aAAaD,QAAQC,UAAzB;AAAA,QACIC,2BAA2BD,WAAWE,cAD1C;AAAA,QAEIX,SAASQ,QAAQR,MAFrB;AAAA,QAGIY,SAASJ,QAAQI,MAHrB;AAAA,QAIIC,SAJJ;AAAA,QAIeC,SAJf;AAAA,QAKIC,eALJ;AAAA,QAKqBC,WALrB;AAAA,QAKkCC,IALlC;;AAOA,QAAIR,WAAWR,IAAX,KAAoB,iBAAxB,EAA2C;AACzCY,kBAAYT,WAAWc,MAAX,CAAkB,yBAAlB,EAA6C;AACvDC,cAAM,MAAMnB,OAAOoB;AADoC,OAA7C,CAAZ;AAGAN,kBAAYV,WAAWc,MAAX,CAAkB,yBAAlB,EAA6C;AACvDC,cAAM,MAAMP,OAAOQ;AADoC,OAA7C,CAAZ;;AAIAV,+BAAyBG,SAAzB,GAAqCA,SAArC;AACAH,+BAAyBI,SAAzB,GAAqCA,SAArC;;AAEAJ,+BAAyBW,iBAAzB,GAA6CjB,WAAWkB,QAAX,EAA7C;;AAEAL,aAAOb,WAAWmB,YAAX,CAAwBvB,MAAxB,EAAgC,CAAEH,OAAOG,MAAP,CAAF,EAAkBH,OAAOe,MAAP,CAAlB,CAAhC,CAAP;;AAEAF,+BAAyBW,iBAAzB,CAA2CG,MAA3C,CAAkDC,IAAlD,CAAuDR,IAAvD;AAED,KAjBD,MAiBO;;AAEL;AACA,UAAInB,GAAGE,MAAH,EAAW,cAAX,KAA8BF,GAAGc,MAAH,EAAW,eAAX,CAAlC,EAA+D;AAC7DJ,gBAAQI,MAAR,GAAiBZ,MAAjB;AACAQ,gBAAQR,MAAR,GAAiBA,SAASY,MAA1B;AACD;;AAEDG,wBAAkBhB,mBAAmBC,MAAnB,CAAlB;AACAgB,oBAAcZ,WAAWc,MAAX,CAAkB,yBAAlB,EAA6C;AACzDC,cAAM,MAAMnB,OAAOoB;AADsC,OAA7C,CAAd;;AAIAV,+BAAyB,aAAaK,eAAtC,IAAyDC,WAAzD;;AAEAC,aAAOb,WAAWmB,YAAX,CAAwBvB,MAAxB,EAAgC,CAAEH,OAAOG,MAAP,CAAF,EAAkBH,OAAOW,QAAQI,MAAf,CAAlB,CAAhC,CAAP;;AAEA;AACAJ,cAAQkB,EAAR,GAAaT,IAAb;AACD;AACF,GA7CD,EA6CG,IA7CH;AA8CD;;AAGDf,yBAAyByB,OAAzB,GAAmC,CACjC,UADiC,EAEjC,YAFiC,EAGjC,UAHiC,CAAnC;;AAMAhC,SAASO,wBAAT,EAAmCN,kBAAnC","file":"CreateConnectionBehavior.js","sourcesContent":["import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport {\n  getMid\n} from 'diagram-js/lib/layout/LayoutUtil';\n\nimport {\n  is\n} from 'dmn-js-shared/lib/util/ModelUtil';\n\nfunction getRequirementType(source) {\n  switch (source.type) {\n  case 'dmn:InputData':\n    return 'Input';\n  case 'dmn:Decision':\n    return 'Decision';\n  case 'dmn:KnowledgeSource':\n    return 'Authority';\n  case 'dmn:BusinessKnowledgeModel':\n    return 'Knowledge';\n  }\n}\n\n\nexport default function CreateConnectionBehavior(eventBus, drdFactory, drdRules) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  this.preExecute('connection.create', function(context) {\n    var connection = context.connection,\n        connectionBusinessObject = connection.businessObject,\n        source = context.source,\n        target = context.target,\n        sourceRef, targetRef,\n        requirementType, requirement, edge;\n\n    if (connection.type === 'dmn:Association') {\n      sourceRef = drdFactory.create('dmn:DMNElementReference', {\n        href: '#' + source.id\n      });\n      targetRef = drdFactory.create('dmn:DMNElementReference', {\n        href: '#' + target.id\n      });\n\n      connectionBusinessObject.sourceRef = sourceRef;\n      connectionBusinessObject.targetRef = targetRef;\n\n      connectionBusinessObject.extensionElements = drdFactory.createDi();\n\n      edge = drdFactory.createDiEdge(source, [ getMid(source), getMid(target)]);\n\n      connectionBusinessObject.extensionElements.values.push(edge);\n\n    } else {\n\n      // flip around source and target\n      if (is(source, 'dmn:Decision') && is(target, 'dmn:InputData')) {\n        context.target = source;\n        context.source = source = target;\n      }\n\n      requirementType = getRequirementType(source);\n      requirement = drdFactory.create('dmn:DMNElementReference', {\n        href: '#' + source.id\n      });\n\n      connectionBusinessObject['required' + requirementType] = requirement;\n\n      edge = drdFactory.createDiEdge(source, [ getMid(source), getMid(context.target)]);\n\n      // DI\n      context.di = edge;\n    }\n  }, true);\n}\n\n\nCreateConnectionBehavior.$inject = [\n  'eventBus',\n  'drdFactory',\n  'drdRules'\n];\n\ninherits(CreateConnectionBehavior, CommandInterceptor);\n"]}