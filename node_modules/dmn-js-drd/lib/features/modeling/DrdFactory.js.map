{"version":3,"sources":["../../../src/features/modeling/DrdFactory.js"],"names":["forEach","DrdFactory","moddle","_model","$inject","prototype","_needsId","element","$instanceOf","_ensureId","prefix","$type","replace","id","ids","nextPrefixed","create","type","attrs","createDi","values","createDiBounds","bounds","createDiEdge","source","waypoints","self","semanticWaypoints","wp","push","createDiWaypoint","waypoint"],"mappings":"AAAA,SACEA,OADF,QAEO,UAFP;;AAKA,eAAe,SAASC,UAAT,CAAoBC,MAApB,EAA4B;AACzC,OAAKC,MAAL,GAAcD,MAAd;AACD;;AAEDD,WAAWG,OAAX,GAAqB,CAAE,QAAF,CAArB;;AAGAH,WAAWI,SAAX,CAAqBC,QAArB,GAAgC,UAASC,OAAT,EAAkB;AAChD,SAAOA,QAAQC,WAAR,CAAoB,gBAApB,KACAD,QAAQC,WAAR,CAAoB,cAApB,CADA,IAEAD,QAAQC,WAAR,CAAoB,gBAApB,CAFP;AAGD,CAJD;;AAMAP,WAAWI,SAAX,CAAqBI,SAArB,GAAiC,UAASF,OAAT,EAAkB;;AAEjD;AACA;AACA,MAAIG,SAAS,CAACH,QAAQI,KAAR,IAAiB,EAAlB,EAAsBC,OAAtB,CAA8B,UAA9B,EAA0C,EAA1C,IAAgD,GAA7D;;AAEA,MAAI,CAACL,QAAQM,EAAT,IAAe,KAAKP,QAAL,CAAcC,OAAd,CAAnB,EAA2C;AACzCA,YAAQM,EAAR,GAAa,KAAKV,MAAL,CAAYW,GAAZ,CAAgBC,YAAhB,CAA6BL,MAA7B,EAAqCH,OAArC,CAAb;AACD;AACF,CATD;;AAWAN,WAAWI,SAAX,CAAqBW,MAArB,GAA8B,UAASC,IAAT,EAAeC,KAAf,EAAsB;AAClD,MAAIX,UAAU,KAAKJ,MAAL,CAAYa,MAAZ,CAAmBC,IAAnB,EAAyBC,SAAS,EAAlC,CAAd;;AAEA,OAAKT,SAAL,CAAeF,OAAf;;AAEA,SAAOA,OAAP;AACD,CAND;;AAQAN,WAAWI,SAAX,CAAqBc,QAArB,GAAgC,YAAW;AACzC,SAAO,KAAKH,MAAL,CAAY,uBAAZ,EAAqC,EAAEI,QAAQ,EAAV,EAArC,CAAP;AACD,CAFD;;AAIAnB,WAAWI,SAAX,CAAqBgB,cAArB,GAAsC,UAASC,MAAT,EAAiB;AACrD,SAAO,KAAKN,MAAL,CAAY,cAAZ,EAA4BM,MAA5B,CAAP;AACD,CAFD;;AAIArB,WAAWI,SAAX,CAAqBkB,YAArB,GAAoC,UAASC,MAAT,EAAiBC,SAAjB,EAA4B;AAC9D,MAAIC,OAAO,IAAX;AACA,MAAIC,oBAAoB,EAAxB;;AAEA3B,UAAQyB,aAAa,EAArB,EAAyB,UAASG,EAAT,EAAa;AACpCD,sBAAkBE,IAAlB,CAAuBH,KAAKI,gBAAL,CAAsBF,EAAtB,CAAvB;AACD,GAFD;;AAIA,SAAO,KAAKZ,MAAL,CAAY,YAAZ,EAA0B;AAC/BS,eAAWE,iBADoB;AAE/BH,YAAQA,OAAOX;AAFgB,GAA1B,CAAP;AAID,CAZD;;AAcAZ,WAAWI,SAAX,CAAqByB,gBAArB,GAAwC,UAASC,QAAT,EAAmB;AACzD,SAAO,KAAKf,MAAL,CAAY,gBAAZ,EAA8Be,QAA9B,CAAP;AACD,CAFD","file":"DrdFactory.js","sourcesContent":["import {\n  forEach\n} from 'min-dash';\n\n\nexport default function DrdFactory(moddle) {\n  this._model = moddle;\n}\n\nDrdFactory.$inject = [ 'moddle' ];\n\n\nDrdFactory.prototype._needsId = function(element) {\n  return element.$instanceOf('dmn:DRGElement') ||\n         element.$instanceOf('dmn:Artifact') ||\n         element.$instanceOf('dmn:DMNElement');\n};\n\nDrdFactory.prototype._ensureId = function(element) {\n\n  // generate semantic ids for elements\n  // dmn:Decision -> Decision_ID\n  var prefix = (element.$type || '').replace(/^[^:]*:/g, '') + '_';\n\n  if (!element.id && this._needsId(element)) {\n    element.id = this._model.ids.nextPrefixed(prefix, element);\n  }\n};\n\nDrdFactory.prototype.create = function(type, attrs) {\n  var element = this._model.create(type, attrs || {});\n\n  this._ensureId(element);\n\n  return element;\n};\n\nDrdFactory.prototype.createDi = function() {\n  return this.create('dmn:ExtensionElements', { values: [] });\n};\n\nDrdFactory.prototype.createDiBounds = function(bounds) {\n  return this.create('biodi:Bounds', bounds);\n};\n\nDrdFactory.prototype.createDiEdge = function(source, waypoints) {\n  var self = this;\n  var semanticWaypoints = [];\n\n  forEach(waypoints || [], function(wp) {\n    semanticWaypoints.push(self.createDiWaypoint(wp));\n  });\n\n  return this.create('biodi:Edge', {\n    waypoints: semanticWaypoints,\n    source: source.id\n  });\n};\n\nDrdFactory.prototype.createDiWaypoint = function(waypoint) {\n  return this.create('biodi:Waypoint', waypoint);\n};"]}