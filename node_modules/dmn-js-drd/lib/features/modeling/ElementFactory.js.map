{"version":3,"sources":["../../../src/features/modeling/ElementFactory.js"],"names":["assign","inherits","is","BaseElementFactory","ElementFactory","drdFactory","call","_drdFactory","$inject","prototype","baseCreate","create","elementType","attrs","createDrdElement","size","businessObject","type","Error","extensionElements","createDi","_getDefaultSize","id","semantic","width","height"],"mappings":"AAAA,SACEA,MADF,QAEO,UAFP;;AAIA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,SACEC,EADF,QAEO,kCAFP;;AAIA,OAAOC,kBAAP,MAA+B,oCAA/B;;AAEA;;;AAGA,eAAe,SAASC,cAAT,CAAwBC,UAAxB,EAAoC;AACjDF,qBAAmBG,IAAnB,CAAwB,IAAxB;;AAEA,OAAKC,WAAL,GAAmBF,UAAnB;AACD;;AAEDJ,SAASG,cAAT,EAAyBD,kBAAzB;;AAGAC,eAAeI,OAAf,GAAyB,CAAE,YAAF,CAAzB;;AAEAJ,eAAeK,SAAf,CAAyBC,UAAzB,GAAsCP,mBAAmBM,SAAnB,CAA6BE,MAAnE;;AAEAP,eAAeK,SAAf,CAAyBE,MAAzB,GAAkC,UAASC,WAAT,EAAsBC,KAAtB,EAA6B;AAC7D,SAAO,KAAKC,gBAAL,CAAsBF,WAAtB,EAAmCC,KAAnC,CAAP;AACD,CAFD;;AAIAT,eAAeK,SAAf,CAAyBK,gBAAzB,GAA4C,UAASF,WAAT,EAAsBC,KAAtB,EAA6B;AACvE,MAAIR,aAAa,KAAKE,WAAtB;;AAEA,MAAIQ,IAAJ;;AAEAF,UAAQA,SAAS,EAAjB;;AAEA,MAAIG,iBAAiBH,MAAMG,cAA3B;;AAEA,MAAI,CAACA,cAAL,EAAqB;AACnB,QAAI,CAACH,MAAMI,IAAX,EAAiB;AACf,YAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACD;;AAEDF,qBAAiBX,WAAWM,MAAX,CAAkBE,MAAMI,IAAxB,CAAjB;AACD;;AAED,MACEL,gBAAgB,MAAhB,IACAA,gBAAgB,YADhB,IAEA,CAACI,eAAeG,iBAHlB,EAIE;AACAH,mBAAeG,iBAAf,GAAmCd,WAAWe,QAAX,EAAnC;AACD;;AAEDL,SAAO,KAAKM,eAAL,CAAqBL,cAArB,CAAP;;AAEAH,UAAQb,OAAO;AACbgB,oBAAgBA,cADH;AAEbM,QAAIN,eAAeM;AAFN,GAAP,EAGLP,IAHK,EAGCF,KAHD,CAAR;;AAKA,SAAO,KAAKH,UAAL,CAAgBE,WAAhB,EAA6BC,KAA7B,CAAP;AACD,CAjCD;;AAoCAT,eAAeK,SAAf,CAAyBY,eAAzB,GAA2C,UAASE,QAAT,EAAmB;;AAE5D,MAAIrB,GAAGqB,QAAH,EAAa,cAAb,CAAJ,EAAkC;AAChC,WAAO,EAAEC,OAAO,GAAT,EAAcC,QAAQ,EAAtB,EAAP;AACD;;AAED,MAAIvB,GAAGqB,QAAH,EAAa,eAAb,CAAJ,EAAmC;AACjC,WAAO,EAAEC,OAAO,GAAT,EAAcC,QAAQ,EAAtB,EAAP;AACD;;AAED,MAAIvB,GAAGqB,QAAH,EAAa,qBAAb,CAAJ,EAAyC;AACvC,WAAO,EAAEC,OAAO,GAAT,EAAcC,QAAQ,EAAtB,EAAP;AACD;;AAED,MAAIvB,GAAGqB,QAAH,EAAa,4BAAb,CAAJ,EAAgD;AAC9C,WAAO,EAAEC,OAAO,GAAT,EAAcC,QAAQ,EAAtB,EAAP;AACD;;AAED,SAAO,EAAED,OAAO,GAAT,EAAcC,QAAQ,EAAtB,EAAP;AACD,CAnBD","file":"ElementFactory.js","sourcesContent":["import {\n  assign\n} from 'min-dash';\n\nimport inherits from 'inherits';\n\nimport {\n  is\n} from 'dmn-js-shared/lib/util/ModelUtil';\n\nimport BaseElementFactory from 'diagram-js/lib/core/ElementFactory';\n\n/**\n * A drd-aware factory for diagram-js shapes\n */\nexport default function ElementFactory(drdFactory) {\n  BaseElementFactory.call(this);\n\n  this._drdFactory = drdFactory;\n}\n\ninherits(ElementFactory, BaseElementFactory);\n\n\nElementFactory.$inject = [ 'drdFactory' ];\n\nElementFactory.prototype.baseCreate = BaseElementFactory.prototype.create;\n\nElementFactory.prototype.create = function(elementType, attrs) {\n  return this.createDrdElement(elementType, attrs);\n};\n\nElementFactory.prototype.createDrdElement = function(elementType, attrs) {\n  var drdFactory = this._drdFactory;\n\n  var size;\n\n  attrs = attrs || {};\n\n  var businessObject = attrs.businessObject;\n\n  if (!businessObject) {\n    if (!attrs.type) {\n      throw new Error('no shape type specified');\n    }\n\n    businessObject = drdFactory.create(attrs.type);\n  }\n\n  if (\n    elementType !== 'root' &&\n    elementType !== 'connection' &&\n    !businessObject.extensionElements\n  ) {\n    businessObject.extensionElements = drdFactory.createDi();\n  }\n\n  size = this._getDefaultSize(businessObject);\n\n  attrs = assign({\n    businessObject: businessObject,\n    id: businessObject.id\n  }, size, attrs);\n\n  return this.baseCreate(elementType, attrs);\n};\n\n\nElementFactory.prototype._getDefaultSize = function(semantic) {\n\n  if (is(semantic, 'dmn:Decision')) {\n    return { width: 180, height: 80 };\n  }\n\n  if (is(semantic, 'dmn:InputData')) {\n    return { width: 125, height: 45 };\n  }\n\n  if (is(semantic, 'dmn:KnowledgeSource')) {\n    return { width: 100, height: 63 };\n  }\n\n  if (is(semantic, 'dmn:BusinessKnowledgeModel')) {\n    return { width: 135, height: 46 };\n  }\n\n  return { width: 100, height: 80 };\n};\n"]}