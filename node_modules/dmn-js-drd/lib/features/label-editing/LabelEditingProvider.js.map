{"version":3,"sources":["../../../src/features/label-editing/LabelEditingProvider.js"],"names":["UpdateLabelHandler","getLabel","is","LabelEditingProvider","eventBus","canvas","directEditing","commandStack","_canvas","_commandStack","registerProvider","registerHandler","on","event","activate","element","complete","cancel","e","shape","$inject","prototype","text","undefined","properties","getEditingBBox","target","label","bbox","getAbsoluteBBox","bounds","x","y","style","zoom","width","height","minWidth","textAlign","update","newLabel","execute"],"mappings":"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","file":"LabelEditingProvider.js","sourcesContent":["import UpdateLabelHandler from './cmd/UpdateLabelHandler';\n\nimport {\n  getLabel\n} from './LabelUtil';\n\nimport {\n  is\n} from 'dmn-js-shared/lib/util/ModelUtil';\n\n\nexport default function LabelEditingProvider(\n    eventBus, canvas, directEditing, commandStack\n) {\n\n  this._canvas = canvas;\n  this._commandStack = commandStack;\n\n  directEditing.registerProvider(this);\n\n  commandStack.registerHandler('element.updateLabel', UpdateLabelHandler);\n\n  // listen to dblclick on non-root elements\n  eventBus.on('element.dblclick', function(event) {\n    directEditing.activate(event.element);\n  });\n\n  // complete on followup canvas operation\n  eventBus.on([\n    'element.mousedown',\n    'drag.init',\n    'canvas.viewbox.changed'\n  ], function(event) {\n    directEditing.complete();\n  });\n\n  // cancel on command stack changes\n  eventBus.on([ 'commandStack.changed' ], function() {\n    directEditing.cancel();\n  });\n\n  eventBus.on('create.end', 500, function(e) {\n\n    var element = e.shape;\n\n    if (is(element, 'dmn:Decision') || is(element, 'dmn:InputData') ||\n        is(element, 'dmn:BusinessKnowledgeModel') || is(element, 'dmn:KnowledgeSource')) {\n\n      directEditing.activate(element);\n    }\n  });\n}\n\nLabelEditingProvider.$inject = [ 'eventBus', 'canvas', 'directEditing', 'commandStack' ];\n\n\n/**\n * Activate direct editing for drgs and text annotations.\n *\n * @param  {djs.model.Base} element\n *\n * @return {Object} an object with properties bounds (position and size) and text\n */\nLabelEditingProvider.prototype.activate = function(element) {\n\n  var text = getLabel(element);\n\n  if (text === undefined) {\n    return;\n  }\n\n  var properties = this.getEditingBBox(element);\n\n  properties.text = text;\n\n  return properties;\n};\n\n\n/**\n * Get the editing bounding box based on the element's size and position\n *\n * @param  {djs.model.Base} element\n *\n * @return {Object}\n *         an object containing information about position and\n *         size (fixed or minimum and/or maximum)\n */\nLabelEditingProvider.prototype.getEditingBBox = function(element) {\n  var canvas = this._canvas;\n\n  var target = element.label || element;\n\n  var bbox = canvas.getAbsoluteBBox(target);\n\n  // default position\n  var bounds = { x: bbox.x, y: bbox.y };\n\n  var style = {},\n      zoom;\n\n  zoom = canvas.zoom();\n\n  // fixed size for internal labels:\n  // on high zoom levels: text box size === bbox size\n  // on low zoom levels: text box size === bbox size at 100% zoom\n  // This ensures minimum bounds at low zoom levels\n  if (zoom > 1) {\n    bounds.width = bbox.width;\n    bounds.height = bbox.height;\n  } else {\n    bounds.width = bbox.width / zoom;\n    bounds.height = bbox.height / zoom;\n  }\n\n  // centering overlapping text box size at low zoom levels\n  if (zoom < 1) {\n    bounds.x = bbox.x - (bounds.width / 2 - bbox.width / 2);\n    bounds.y = bbox.y - (bounds.height / 2 - bbox.height / 2);\n  }\n\n  // text annotations\n  if (is(element, 'dmn:TextAnnotation')) {\n    bounds.minWidth = 100;\n    bounds.height = element.height;\n\n    style.textAlign = 'left';\n  }\n\n  return { bounds: bounds, style: style };\n};\n\n\nLabelEditingProvider.prototype.update = function(element, newLabel) {\n  this._commandStack.execute('element.updateLabel', {\n    element: element,\n    newLabel: newLabel\n  });\n};\n"]}