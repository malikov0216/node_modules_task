{"version":3,"sources":["../../../src/features/replace/DrdReplace.js"],"names":["DrdReplace","drdFactory","replace","selection","modeling","replaceElement","element","target","hints","type","oldBusinessObject","businessObject","newBusinessObject","create","newElement","width","height","name","table","decisionTable","$parent","output","typeRef","input","inputExpression","expression","literalExpression","variable","$inject"],"mappings":"AAAA;;;AAGA,eAAe,SAASA,UAAT,CAAoBC,UAApB,EAAgCC,OAAhC,EAAyCC,SAAzC,EAAoDC,QAApD,EAA8D;;AAE3E;;;;;;;;;;AAUA,WAASC,cAAT,CAAwBC,OAAxB,EAAiCC,MAAjC,EAAyCC,KAAzC,EAAgD;;AAE9CA,YAAQA,SAAS,EAAjB;;AAEA,QAAIC,OAAOF,OAAOE,IAAlB;AAAA,QACIC,oBAAoBJ,QAAQK,cADhC;;AAGA,QAAIC,oBAAoBX,WAAWY,MAAX,CAAkBJ,IAAlB,CAAxB;;AAEA,QAAIK,aAAa;AACfL,YAAMA,IADS;AAEfE,sBAAgBC;AAFD,KAAjB;;AAKAE,eAAWC,KAAX,GAAmBT,QAAQS,KAA3B;AACAD,eAAWE,MAAX,GAAoBV,QAAQU,MAA5B;;AAEAJ,sBAAkBK,IAAlB,GAAyBP,kBAAkBO,IAA3C;;AAEA,QAAIV,OAAOW,KAAX,EAAkB;AAChB,UAAIA,QAAQjB,WAAWY,MAAX,CAAkB,mBAAlB,CAAZ;AACAD,wBAAkBO,aAAlB,GAAkCD,KAAlC;AACAA,YAAME,OAAN,GAAgBR,iBAAhB;;AAEA,UAAIS,SAASpB,WAAWY,MAAX,CAAkB,kBAAlB,CAAb;AACAQ,aAAOC,OAAP,GAAiB,QAAjB;AACAD,aAAOD,OAAP,GAAiBF,KAAjB;AACAA,YAAMG,MAAN,GAAe,CAAEA,MAAF,CAAf;;AAEA,UAAIE,QAAQtB,WAAWY,MAAX,CAAkB,iBAAlB,CAAZ;AACAU,YAAMH,OAAN,GAAgBF,KAAhB;;AAEA,UAAIM,kBAAkBvB,WAAWY,MAAX,CAAkB,uBAAlB,EAA2C;AAC/DS,iBAAS;AADsD,OAA3C,CAAtB;;AAIAC,YAAMC,eAAN,GAAwBA,eAAxB;AACAA,sBAAgBJ,OAAhB,GAA0BG,KAA1B;;AAEAL,YAAMK,KAAN,GAAc,CAAEA,KAAF,CAAd;AACD;;AAED,QAAIhB,OAAOkB,UAAX,EAAuB;AACrBb,wBAAkBc,iBAAlB,GAAsCzB,WAAWY,MAAX,CAAkB,uBAAlB,CAAtC;AACAD,wBAAkBe,QAAlB,GAA6B1B,WAAWY,MAAX,CAAkB,qBAAlB,CAA7B;AACD;;AAED,WAAOX,QAAQG,cAAR,CAAuBC,OAAvB,EAAgCQ,UAAhC,EAA4CN,KAA5C,CAAP;AACD;;AAED,OAAKH,cAAL,GAAsBA,cAAtB;AACD;;AAEDL,WAAW4B,OAAX,GAAqB,CACnB,YADmB,EAEnB,SAFmB,EAGnB,WAHmB,EAInB,UAJmB,CAArB","file":"DrdReplace.js","sourcesContent":["/**\n * This module takes care of replacing DRD elements\n */\nexport default function DrdReplace(drdFactory, replace, selection, modeling) {\n\n  /**\n   * Prepares a new business object for the replacement element\n   * and triggers the replace operation.\n   *\n   * @param  {djs.model.Base} element\n   * @param  {Object} target\n   * @param  {Object} [hints]\n   *\n   * @return {djs.model.Base} the newly created element\n   */\n  function replaceElement(element, target, hints) {\n\n    hints = hints || {};\n\n    var type = target.type,\n        oldBusinessObject = element.businessObject;\n\n    var newBusinessObject = drdFactory.create(type);\n\n    var newElement = {\n      type: type,\n      businessObject: newBusinessObject\n    };\n\n    newElement.width = element.width;\n    newElement.height = element.height;\n\n    newBusinessObject.name = oldBusinessObject.name;\n\n    if (target.table) {\n      var table = drdFactory.create('dmn:DecisionTable');\n      newBusinessObject.decisionTable = table;\n      table.$parent = newBusinessObject;\n\n      var output = drdFactory.create('dmn:OutputClause');\n      output.typeRef = 'string';\n      output.$parent = table;\n      table.output = [ output ];\n\n      var input = drdFactory.create('dmn:InputClause');\n      input.$parent = table;\n\n      var inputExpression = drdFactory.create('dmn:LiteralExpression', {\n        typeRef: 'string'\n      });\n\n      input.inputExpression = inputExpression;\n      inputExpression.$parent = input;\n\n      table.input = [ input ];\n    }\n\n    if (target.expression) {\n      newBusinessObject.literalExpression = drdFactory.create('dmn:LiteralExpression');\n      newBusinessObject.variable = drdFactory.create('dmn:InformationItem');\n    }\n\n    return replace.replaceElement(element, newElement, hints);\n  }\n\n  this.replaceElement = replaceElement;\n}\n\nDrdReplace.$inject = [\n  'drdFactory',\n  'replace',\n  'selection',\n  'modeling'\n];\n"]}