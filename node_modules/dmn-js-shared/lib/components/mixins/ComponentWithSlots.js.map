{"version":3,"sources":["../../../src/components/mixins/ComponentWithSlots.js"],"names":["ComponentWithSlots","slotFill","slotProps","DefaultFill","type","context","props","Fill","components","getComponent","slotFills","fills","getComponents","map","$inject"],"mappings":";;;;;;AACA;;;;;AAKA,IAAMA,qBAAqB;AAEzBC,UAFyB,oBAEhBC,SAFgB,EAELC,WAFK,EAEQ;AAAA,QAG7BC,IAH6B,GAM3BF,SAN2B,CAG7BE,IAH6B;AAAA,QAI7BC,OAJ6B,GAM3BH,SAN2B,CAI7BG,OAJ6B;AAAA,QAK1BC,KAL0B,4BAM3BJ,SAN2B;;AAQ/B,QAAMK,OAAO,KAAKC,UAAL,CAAgBC,YAAhB,CAA6BL,IAA7B,EAAmCC,OAAnC,KAA+CF,WAA5D;;AAEA,QAAII,IAAJ,EAAU;AACR,uEAAkBF,OAAlB,EAAiCC,KAAjC;AACD;;AAED,WAAO,IAAP;AACD,GAjBwB;AAmBzBI,WAnByB,qBAmBfR,SAnBe,EAmBJ;AAAA,QAGjBE,IAHiB,GAMfF,SANe,CAGjBE,IAHiB;AAAA,QAIjBC,OAJiB,GAMfH,SANe,CAIjBG,OAJiB;AAAA,QAKdC,KALc,4BAMfJ,SANe;;AAQnB,QAAMS,QAAQ,KAAKH,UAAL,CAAgBI,aAAhB,CAA8BR,IAA9B,EAAoCC,OAApC,CAAd;;AAEA,WAAOM,MAAME,GAAN,CACL;AAAA,uEAAmBR,OAAnB,EAAkCC,KAAlC;AAAA,KADK,CAAP;AAGD;AAhCwB,CAA3B;;AAoCA,eAAeN,kBAAf;;AAEAA,mBAAmBc,OAAnB,GAA6B,CAAE,YAAF,CAA7B","file":"ComponentWithSlots.js","sourcesContent":["\n/**\n * A simple slot extension, built upon the components service.\n *\n * @type {Object}\n */\nconst ComponentWithSlots = {\n\n  slotFill(slotProps, DefaultFill) {\n\n    const {\n      type,\n      context,\n      ...props\n    } = slotProps;\n\n    const Fill = this.components.getComponent(type, context) || DefaultFill;\n\n    if (Fill) {\n      return <Fill { ...context } { ...props } />;\n    }\n\n    return null;\n  },\n\n  slotFills(slotProps) {\n\n    const {\n      type,\n      context,\n      ...props\n    } = slotProps;\n\n    const fills = this.components.getComponents(type, context);\n\n    return fills.map(\n      Fill => <Fill { ...context } { ...props } />\n    );\n  }\n\n};\n\nexport default ComponentWithSlots;\n\nComponentWithSlots.$inject = [ 'components' ];"]}