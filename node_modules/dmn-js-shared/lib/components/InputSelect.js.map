{"version":3,"sources":["../../src/components/InputSelect.js"],"names":["Component","createPortal","inject","assign","domify","remove","domRemove","InputSelect","props","context","value","state","optionsVisible","_portalEl","document","addEventListener","onGlobalClick","onFocusChanged","keyboard","addListener","onKeyboard","removeEventListener","removeListener","removePortalEl","setState","nextProps","nextState","addPortalEl","inputNode","getBoundingClientRect","top","left","width","height","style","container","renderer","getContainer","appendChild","node","focus","selectionStart","focusTarget","contains","parentNode","setOptionsVisible","direction","options","option","filter","o","idx","indexOf","nextIdx","length","nextOption","onChange","activeOption","map","join","label","onOptionClick","e","className","noInput","onKeyDown","onInput","renderOptions","onInputClick","event","preventDefault","stopPropagation","focusInput","target","evt","checkClose","code","which","select","keycode","$inject"],"mappings":"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","file":"InputSelect.js","sourcesContent":["import { Component, createPortal } from 'inferno';\r\n\r\nimport {\r\n  inject\r\n} from 'table-js/lib/components';\r\n\r\nimport { assign } from 'min-dash';\r\n\r\nimport {\r\n  domify,\r\n  remove as domRemove\r\n} from 'min-dom';\r\n\r\n\r\nexport default class InputSelect extends Component {\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    inject(this);\r\n\r\n    const { value } = props;\r\n\r\n    this.state = {\r\n      value,\r\n      optionsVisible: false\r\n    };\r\n\r\n    this._portalEl = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('click', this.onGlobalClick);\r\n    document.addEventListener('focusin', this.onFocusChanged);\r\n\r\n    this.keyboard.addListener(this.onKeyboard);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('focusin', this.onFocusChanged);\r\n    document.removeEventListener('click', this.onGlobalClick);\r\n\r\n    this.keyboard.removeListener(this.onKeyboard);\r\n\r\n    this.removePortalEl();\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    const { value } = props;\r\n\r\n    this.setState({\r\n      value\r\n    });\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    const { optionsVisible } = nextState;\r\n\r\n    if (optionsVisible) {\r\n      if (!this._portalEl) {\r\n        this.addPortalEl();\r\n      }\r\n    } else {\r\n      if (this._portalEl) {\r\n        this.removePortalEl();\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { optionsVisible } = this.state;\r\n\r\n    if (!optionsVisible || !this.inputNode) {\r\n      return;\r\n    }\r\n\r\n    const { top, left, width, height } = this.inputNode.getBoundingClientRect();\r\n\r\n    assign(this._portalEl.style, {\r\n      top: `${top + height}px`,\r\n      left: `${left}px`,\r\n      width: `${width}px`\r\n    });\r\n  }\r\n\r\n  addPortalEl() {\r\n    this._portalEl = domify('<div class=\"dms-select-options\"></div>');\r\n\r\n    const container = this.renderer.getContainer();\r\n\r\n    container.appendChild(this._portalEl);\r\n  }\r\n\r\n  removePortalEl() {\r\n    if (this._portalEl) {\r\n      domRemove(this._portalEl);\r\n\r\n      this._portalEl = null;\r\n    }\r\n  }\r\n\r\n  onChange = (value) => {\r\n    this.setState({\r\n      value\r\n    });\r\n\r\n    const { onChange } = this.props;\r\n\r\n    if (typeof onChange !== 'function') {\r\n      return;\r\n    }\r\n\r\n    onChange(value);\r\n  }\r\n\r\n  onInputClick = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.setOptionsVisible(!this.state.optionsVisible);\r\n\r\n    this.focusInput();\r\n  }\r\n\r\n  onInput = (event) => {\r\n    const { value } = event.target;\r\n\r\n    this.onChange(value);\r\n  }\r\n\r\n  onOptionClick = (value, event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.setOptionsVisible(false);\r\n\r\n    this.onChange(value);\r\n\r\n    this.focusInput();\r\n  }\r\n\r\n  /**\r\n   * Focus input node\r\n   */\r\n  focusInput() {\r\n    const node = this.inputNode;\r\n\r\n    node.focus();\r\n\r\n    // move cursor to end of input\r\n    if ('selectionStart' in node) {\r\n      node.selectionStart = 100000;\r\n    }\r\n  }\r\n\r\n  checkClose(focusTarget) {\r\n\r\n    if (this._portalEl\r\n      && !this._portalEl.contains(focusTarget)\r\n      && !this.parentNode.contains(focusTarget)) {\r\n      this.setOptionsVisible(false);\r\n    }\r\n  }\r\n\r\n  onFocusChanged = (evt) => {\r\n    this.checkClose(evt.target);\r\n  }\r\n\r\n  onGlobalClick = (evt) => {\r\n    this.checkClose(evt.target);\r\n  }\r\n\r\n  select(direction) {\r\n\r\n    const {\r\n      options\r\n    } = this.props;\r\n\r\n    const {\r\n      value\r\n    } = this.state;\r\n\r\n    if (!options) {\r\n      return;\r\n    }\r\n\r\n    const option = options.filter(o => o.value === value)[0];\r\n\r\n    const idx = option\r\n      ? options.indexOf(option)\r\n      : -1;\r\n\r\n    const nextIdx = (\r\n      idx === -1\r\n        ? (\r\n          direction === 1\r\n            ? 0\r\n            : options.length - 1)\r\n        : ((idx + direction) % options.length)\r\n    );\r\n\r\n    const nextOption = options[nextIdx < 0 ? options.length + nextIdx : nextIdx];\r\n\r\n    this.onChange(nextOption.value);\r\n  }\r\n\r\n  setOptionsVisible(optionsVisible) {\r\n    this.setState({\r\n      optionsVisible\r\n    });\r\n  }\r\n\r\n  onKeyDown = (evt) => {\r\n\r\n    const {\r\n      optionsVisible\r\n    } = this.state;\r\n\r\n    var code = evt.which;\r\n\r\n    // DOWN or UP\r\n    if (code === 40 || code === 38) {\r\n\r\n      evt.stopPropagation();\r\n      evt.preventDefault();\r\n\r\n      if (!optionsVisible) {\r\n        this.setOptionsVisible(true);\r\n      } else {\r\n        this.select(code === 40 ? 1 : -1);\r\n      }\r\n    }\r\n\r\n    if (optionsVisible) {\r\n\r\n      // ENTER\r\n      // ESC\r\n      if (code === 13 || code === 27) {\r\n        evt.stopPropagation();\r\n        evt.preventDefault();\r\n\r\n        this.setOptionsVisible(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  onKeyboard = (keycode) => {\r\n    const { optionsVisible } = this.state;\r\n\r\n    if (!optionsVisible) {\r\n      return;\r\n    }\r\n\r\n    // close on ESC\r\n    if (keycode === 27) {\r\n      this.setOptionsVisible(false);\r\n\r\n      return true;\r\n    }\r\n  }\r\n\r\n  renderOptions(options, activeOption) {\r\n    return (\r\n      <div className=\"options\">\r\n        {\r\n          options.map(option => {\r\n            return (\r\n              <div\r\n                className={\r\n                  [ 'option', activeOption === option ? 'active' : '' ].join(' ')\r\n                }\r\n                data-value={ option.value }\r\n                onClick={ e => this.onOptionClick(option.value, e) }>\r\n                { option.label }\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      options,\r\n      noInput\r\n    } = this.props;\r\n\r\n    const {\r\n      optionsVisible,\r\n      value\r\n    } = this.state;\r\n\r\n    const option = options ? options.filter(o => o.value === value)[0] : false;\r\n\r\n    const label = option ? option.label : value;\r\n\r\n    return (\r\n      <div\r\n        ref={ node => this.parentNode = node }\r\n        className={ [ className || '', 'dms-input-select' ].join(' ') }\r\n        onClick={ this.onInputClick }>\r\n        {\r\n          noInput\r\n            ? <div\r\n              className=\"dms-input\"\r\n              tabindex=\"0\"\r\n              onKeyDown={ this.onKeyDown }\r\n              ref={ node => this.inputNode = node }>{ label }</div>\r\n            : <input\r\n              className=\"dms-input\"\r\n              onInput={ this.onInput }\r\n              onKeyDown={ this.onKeyDown }\r\n              spellcheck=\"false\"\r\n              ref={ node => this.inputNode = node }\r\n              type=\"text\"\r\n              value={ value } />\r\n        }\r\n        <span\r\n          className={ [\r\n            'dms-input-select-icon',\r\n            optionsVisible ? 'dmn-icon-up' : 'dmn-icon-down'\r\n          ].join(' ') }>\r\n        </span>\r\n        {\r\n          optionsVisible\r\n            && createPortal(this.renderOptions(options, option), this._portalEl)\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nInputSelect.$inject = [ 'keyboard', 'renderer' ];"]}