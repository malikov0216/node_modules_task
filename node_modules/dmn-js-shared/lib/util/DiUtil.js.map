{"version":3,"sources":["../../src/util/DiUtil.js"],"names":["find","some","is","containsDi","definitions","drgElements","hasDi","element","extensions","extensionElements","values","v"],"mappings":"AAAA,SACEA,IADF,EAEEC,IAFF,QAGO,UAHP;;AAKA,SAASC,EAAT,QAAmB,aAAnB;;AAEA;;;;;;;AAOA,OAAO,SAASC,UAAT,CAAoBC,WAApB,EAAiC;AACtC,SAAOH,KAAKG,YAAYC,WAAjB,EAA8BC,KAA9B,CAAP;AACD;;AAED,OAAO,SAASA,KAAT,CAAeC,OAAf,EAAwB;;AAE7B,MAAIC,aAAaD,QAAQE,iBAAzB;;AAEA,MAAIC,SAASF,cAAcA,WAAWE,MAAtC;;AAEA,SAAOA,UAAUV,KAAKU,MAAL,EAAa,UAASC,CAAT,EAAY;AACxC,WAAOT,GAAGS,CAAH,EAAM,cAAN,CAAP;AACD,GAFgB,CAAjB;AAGD","file":"DiUtil.js","sourcesContent":["import {\n  find,\n  some\n} from 'min-dash';\n\nimport { is } from './ModelUtil';\n\n/**\n * Does the definitions element contain graphical information?\n *\n * @param  {ModdleElement} definitions\n *\n * @return {Boolean} true, if the definitions contains graphical information\n */\nexport function containsDi(definitions) {\n  return some(definitions.drgElements, hasDi);\n}\n\nexport function hasDi(element) {\n\n  var extensions = element.extensionElements;\n\n  var values = extensions && extensions.values;\n\n  return values && find(values, function(v) {\n    return is(v, 'biodi:Bounds');\n  });\n}"]}