{"version":3,"sources":["../../src/base/View.js"],"names":["View","parentNode","view","done","noop","event"],"mappings":";;;;AACA;;;IAGqBA,I;;;;;;;;;AAEnB;;;;;6BAKSC,U,EAAY,CAAG;;AAExB;;;;;;6BAGS,CAAG;;AAEZ;;;;;;;;;yBAMKC,I,EAAiB;AAAA,UAAXC,IAAW,uEAANC,IAAM;;AACpBD;AACD;;AAED;;;;;;;;;uBAMGE,K,EAAgB,CAAG;;AAEtB;;;;;;;;;wBAMIA,K,EAAgB,CAAG;;AAEvB;;;;;;4BAGQ,CAAE;;AAEV;;;;;;8BAGU,CAAE;;;;;;AAId;;eApDqBL,I;AAsDrB,SAASI,IAAT,GAAgB,CAAG","file":"View.js","sourcesContent":["\n/**\n * Base view API to be implemented by viewer editors.\n */\nexport default class View {\n\n  /**\n   * Attach view to parentNode.\n   *\n   * @param  {Element} parentNode\n   */\n  attachTo(parentNode) { }\n\n  /**\n   * Detach view.\n   */\n  detach() { }\n\n  /**\n   * Open view on the given element.\n   *\n   * @param  {View}   view\n   * @param  {Function} [done]\n   */\n  open(view, done=noop) {\n    done();\n  }\n\n  /**\n   * Subscribe to the given event.\n   *\n   * @param  {String}         event\n   * @param  {Array<Object>}  args\n   */\n  on(event, ...args) { }\n\n  /**\n   * Unsubscribe from given event.\n   *\n   * @param  {String}         event\n   * @param  {Array<Object>}  args\n   */\n  off(event, ...args) { }\n\n  /**\n   * Clear view (optional method).\n   */\n  clear() {}\n\n  /**\n   * Destroy view (optional method).\n   */\n  destroy() {}\n}\n\n\n// helpers //////////////////////\n\nfunction noop() { }"]}