{"version":3,"sources":["../src/Modeler.js"],"names":["EditingManager","DrdModeler","DecisionTableEditor","LiteralExpressionEditor","is","containsDi","Modeler","id","constructor","opens","element","decisionTable","literalExpression","views","definitionsView","i","length","view","el"],"mappings":";;;;;;;;AAAA,OAAOA,cAAP,MAA2B,uCAA3B;;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AACA,OAAOC,uBAAP,MAAoC,sCAApC;;AAEA,SAASC,EAAT,QAAmB,kCAAnB;AACA,SAASC,UAAT,QAA2B,+BAA3B;;AAGA;;;;IAGqBC,O;;;;;;;;;;;wCAEC;;AAElB,aAAO,CACL;AACEC,YAAI,KADN;AAEEC,qBAAaP,UAFf;AAGEQ,eAAO;AAHT,OADK,EAML;AACEF,YAAI,eADN;AAEEC,qBAAaN,mBAFf;AAGEO,aAHF,iBAGQC,OAHR,EAGiB;AACb,iBAAON,GAAGM,OAAH,EAAY,cAAZ,KAA+BA,QAAQC,aAA9C;AACD;AALH,OANK,EAaL;AACEJ,YAAI,mBADN;AAEEC,qBAAaL,uBAFf;AAGEM,aAHF,iBAGQC,OAHR,EAGiB;AACb,iBAAON,GAAGM,OAAH,EAAY,cAAZ,KAA+BA,QAAQE,iBAA9C;AACD;AALH,OAbK,CAAP;AAsBD;;;oCAEeC,K,EAAO;;AAErB,UAAIC,eAAJ;;AAEA,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,MAAMG,MAA1B,EAAkCD,GAAlC,EAAuC;;AAErC,YAAME,OAAOJ,MAAME,CAAN,CAAb;AACA,YAAMG,KAAKD,KAAKP,OAAhB;;AAEA,YAAIN,GAAGc,EAAH,EAAO,cAAP,CAAJ,EAA4B;AAC1B,iBAAOD,IAAP;AACD;;AAED,YAAIb,GAAGc,EAAH,EAAO,iBAAP,CAAJ,EAA+B;AAC7BJ,4BAAkBG,IAAlB;;AAEA,cAAIZ,WAAWa,EAAX,CAAJ,EAAoB;AAClB,mBAAOD,IAAP;AACD;AACF;AACF;;AAED,aAAOH,mBAAmBD,MAAM,CAAN,CAA1B;AACD;;;;EAnDkCb,c;;eAAhBM,O","file":"Modeler.js","sourcesContent":["import EditingManager from 'dmn-js-shared/lib/base/EditingManager';\n\nimport DrdModeler from 'dmn-js-drd/lib/Modeler';\nimport DecisionTableEditor from 'dmn-js-decision-table/lib/Editor';\nimport LiteralExpressionEditor from 'dmn-js-literal-expression/lib/Editor';\n\nimport { is } from 'dmn-js-shared/lib/util/ModelUtil';\nimport { containsDi } from 'dmn-js-shared/lib/util/DiUtil';\n\n\n/**\n * The dmn editor.\n */\nexport default class Modeler extends EditingManager {\n\n  _getViewProviders() {\n\n    return [\n      {\n        id: 'drd',\n        constructor: DrdModeler,\n        opens: 'dmn:Definitions'\n      },\n      {\n        id: 'decisionTable',\n        constructor: DecisionTableEditor,\n        opens(element) {\n          return is(element, 'dmn:Decision') && element.decisionTable;\n        }\n      },\n      {\n        id: 'literalExpression',\n        constructor: LiteralExpressionEditor,\n        opens(element) {\n          return is(element, 'dmn:Decision') && element.literalExpression;\n        }\n      }\n    ];\n\n  }\n\n  _getInitialView(views) {\n\n    var definitionsView;\n\n    for (var i = 0; i < views.length; i++) {\n\n      const view = views[i];\n      const el = view.element;\n\n      if (is(el, 'dmn:Decision')) {\n        return view;\n      }\n\n      if (is(el, 'dmn:Definitions')) {\n        definitionsView = view;\n\n        if (containsDi(el)) {\n          return view;\n        }\n      }\n    }\n\n    return definitionsView || views[0];\n  }\n\n}"]}